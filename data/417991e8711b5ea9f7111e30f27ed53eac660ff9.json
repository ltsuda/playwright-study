{
  "fileId": "417991e8711b5ea9f7111e30f27ed53eac660ff9",
  "fileName": "e2e.spec.js",
  "tests": [
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-e343f1a265e511a7a813144b7eab79f65a92ed93",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "chromium-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 1882,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 1882,
          "startTime": "2021-10-28T01:24:34.879Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:24:34.880Z",
              "duration": 635,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:24:34.886Z",
                  "duration": 40,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-28T01:24:34.926Z",
                  "duration": 589,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-28T01:24:35.516Z",
              "duration": 67,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-28T01:24:35.584Z",
              "duration": 49,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-28T01:24:35.634Z",
              "duration": 178,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:24:35.812Z",
              "duration": 30,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:24:35.842Z",
              "duration": 919,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:24:36.719Z",
                  "duration": 42,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-c4d8a494cd5f2cbcfab28fb512530ae5bd3b2141",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "chromium-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 2979,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2979,
          "startTime": "2021-10-28T01:24:35.998Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:24:35.998Z",
              "duration": 645,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:24:36.003Z",
                  "duration": 73,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-28T01:24:36.077Z",
                  "duration": 566,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-28T01:24:36.644Z",
              "duration": 513,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-28T01:24:36.645Z",
                  "duration": 138,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-28T01:24:36.783Z",
                  "duration": 64,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-28T01:24:36.848Z",
                  "duration": 212,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:24:37.061Z",
                  "duration": 96,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-28T01:24:37.157Z",
              "duration": 509,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-28T01:24:37.158Z",
                  "duration": 19,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-28T01:24:37.178Z",
                  "duration": 6,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-28T01:24:37.184Z",
                  "duration": 5,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-28T01:24:37.189Z",
                  "duration": 6,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=0 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-28T01:24:37.196Z",
                  "duration": 470,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-28T01:24:37.666Z",
              "duration": 668,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-28T01:24:37.666Z",
                  "duration": 646,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:24:38.315Z",
                  "duration": 19,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-28T01:24:38.334Z",
              "duration": 38,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-28T01:24:38.335Z",
                  "duration": 9,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-28T01:24:38.345Z",
                  "duration": 6,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-28T01:24:38.352Z",
                  "duration": 5,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-28T01:24:38.358Z",
                  "duration": 6,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-28T01:24:38.364Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:24:38.366Z",
                  "duration": 6,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-28T01:24:38.372Z",
              "duration": 66,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-28T01:24:38.373Z",
                  "duration": 58,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:24:38.431Z",
                  "duration": 7,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-28T01:24:38.438Z",
              "duration": 221,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-28T01:24:38.439Z",
                  "duration": 48,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-28T01:24:38.487Z",
                  "duration": 36,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-28T01:24:38.523Z",
                  "duration": 71,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-28T01:24:38.595Z",
                  "duration": 57,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:24:38.652Z",
                  "duration": 6,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-28T01:24:38.659Z",
              "duration": 34,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-28T01:24:38.659Z",
                  "duration": 3,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:24:38.662Z",
                  "duration": 1,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:24:38.664Z",
                  "duration": 17,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:24:38.682Z",
                  "duration": 11,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-28T01:24:38.693Z",
              "duration": 56,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:24:38.694Z",
                  "duration": 6,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:24:38.701Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-28T01:24:38.702Z",
                  "duration": 7,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:24:38.710Z",
                  "duration": 8,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:24:38.719Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:24:38.720Z",
                  "duration": 4,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:24:38.725Z",
                  "duration": 4,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-28T01:24:38.730Z",
                  "duration": 18,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:24:38.749Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-28T01:24:38.749Z",
              "duration": 84,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-28T01:24:38.750Z",
                  "duration": 53,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:24:38.804Z",
                  "duration": 9,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:24:38.813Z",
                  "duration": 7,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:24:38.820Z",
                  "duration": 6,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-28T01:24:38.827Z",
                  "duration": 6,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:24:38.833Z",
              "duration": 143,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:24:38.950Z",
                  "duration": 26,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-a80ddfa8a04cc2775a98bcd1501438e55eb1bd59",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "chromium-fhd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 1988,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 1988,
          "startTime": "2021-10-28T01:25:47.052Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:25:47.065Z",
              "duration": 530,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:25:47.073Z",
                  "duration": 42,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-28T01:25:47.116Z",
                  "duration": 479,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-28T01:25:47.596Z",
              "duration": 106,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-28T01:25:47.703Z",
              "duration": 64,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-28T01:25:47.768Z",
              "duration": 203,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:25:47.982Z",
              "duration": 102,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:25:48.084Z",
              "duration": 956,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:25:49.009Z",
                  "duration": 30,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-2b02f230ad4a0ea0d39491cc033acce8911e5102",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "chromium-fhd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 3374,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 3374,
          "startTime": "2021-10-28T01:25:47.845Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:25:47.846Z",
              "duration": 798,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:25:47.852Z",
                  "duration": 157,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-28T01:25:48.011Z",
                  "duration": 632,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-28T01:25:48.644Z",
              "duration": 452,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-28T01:25:48.646Z",
                  "duration": 101,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-28T01:25:48.748Z",
                  "duration": 65,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-28T01:25:48.814Z",
                  "duration": 182,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:25:48.996Z",
                  "duration": 100,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-28T01:25:49.096Z",
              "duration": 669,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-28T01:25:49.096Z",
                  "duration": 8,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-28T01:25:49.105Z",
                  "duration": 7,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-28T01:25:49.112Z",
                  "duration": 9,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-28T01:25:49.121Z",
                  "duration": 7,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=0 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-28T01:25:49.128Z",
                  "duration": 637,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-28T01:25:49.765Z",
              "duration": 684,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-28T01:25:49.766Z",
                  "duration": 654,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:25:50.421Z",
                  "duration": 28,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-28T01:25:50.450Z",
              "duration": 47,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-28T01:25:50.450Z",
                  "duration": 11,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-28T01:25:50.462Z",
                  "duration": 6,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-28T01:25:50.469Z",
                  "duration": 7,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-28T01:25:50.477Z",
                  "duration": 11,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-28T01:25:50.489Z",
                  "duration": 0,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:25:50.490Z",
                  "duration": 7,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-28T01:25:50.497Z",
              "duration": 51,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-28T01:25:50.498Z",
                  "duration": 41,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:25:50.540Z",
                  "duration": 8,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-28T01:25:50.548Z",
              "duration": 261,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-28T01:25:50.549Z",
                  "duration": 44,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-28T01:25:50.593Z",
                  "duration": 41,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-28T01:25:50.635Z",
                  "duration": 102,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-28T01:25:50.737Z",
                  "duration": 59,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:25:50.797Z",
                  "duration": 12,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-28T01:25:50.809Z",
              "duration": 21,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-28T01:25:50.809Z",
                  "duration": 4,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:25:50.814Z",
                  "duration": 1,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:25:50.815Z",
                  "duration": 7,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:25:50.822Z",
                  "duration": 8,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-28T01:25:50.830Z",
              "duration": 39,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:25:50.831Z",
                  "duration": 6,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:25:50.837Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-28T01:25:50.838Z",
                  "duration": 6,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:25:50.844Z",
                  "duration": 6,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:25:50.850Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:25:50.851Z",
                  "duration": 5,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:25:50.857Z",
                  "duration": 5,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-28T01:25:50.863Z",
                  "duration": 6,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:25:50.869Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-28T01:25:50.869Z",
              "duration": 139,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-28T01:25:50.870Z",
                  "duration": 62,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:25:50.932Z",
                  "duration": 37,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:25:50.970Z",
                  "duration": 8,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:25:50.978Z",
                  "duration": 13,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-28T01:25:50.991Z",
                  "duration": 17,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:25:51.008Z",
              "duration": 212,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:25:51.209Z",
                  "duration": 10,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-fbd5680872dae6205a882746d8fe01036dd11e9c",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "chrome-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2038,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2038,
          "startTime": "2021-10-28T01:26:57.234Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:26:57.235Z",
              "duration": 901,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:26:57.240Z",
                  "duration": 33,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-28T01:26:57.274Z",
                  "duration": 862,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-28T01:26:58.156Z",
              "duration": 110,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-28T01:26:58.268Z",
              "duration": 56,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-28T01:26:58.325Z",
              "duration": 154,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:26:58.479Z",
              "duration": 66,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:26:58.546Z",
              "duration": 727,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:26:59.238Z",
                  "duration": 34,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-264ec1e944800d91f600b0bd35e70c675523778b",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "chrome-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 3643,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 3643,
          "startTime": "2021-10-28T01:26:57.776Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:26:57.776Z",
              "duration": 959,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:26:57.783Z",
                  "duration": 52,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-28T01:26:57.837Z",
                  "duration": 897,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-28T01:26:58.736Z",
              "duration": 689,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-28T01:26:58.739Z",
                  "duration": 201,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-28T01:26:58.942Z",
                  "duration": 129,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-28T01:26:59.073Z",
                  "duration": 286,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:26:59.360Z",
                  "duration": 64,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-28T01:26:59.426Z",
              "duration": 648,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-28T01:26:59.431Z",
                  "duration": 85,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-name)",
                  "startTime": "2021-10-28T01:26:59.519Z",
                  "duration": 17,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-description)",
                  "startTime": "2021-10-28T01:26:59.536Z",
                  "duration": 7,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-price)",
                  "startTime": "2021-10-28T01:26:59.543Z",
                  "duration": 6,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=2 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-28T01:26:59.550Z",
                  "duration": 524,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-28T01:27:00.075Z",
              "duration": 671,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-28T01:27:00.075Z",
                  "duration": 659,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:27:00.735Z",
                  "duration": 11,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-28T01:27:00.746Z",
              "duration": 59,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-28T01:27:00.746Z",
                  "duration": 12,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-28T01:27:00.759Z",
                  "duration": 9,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-28T01:27:00.769Z",
                  "duration": 6,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-28T01:27:00.776Z",
                  "duration": 6,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-28T01:27:00.782Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:27:00.784Z",
                  "duration": 21,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-28T01:27:00.805Z",
              "duration": 101,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-28T01:27:00.806Z",
                  "duration": 81,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:27:00.888Z",
                  "duration": 18,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-28T01:27:00.906Z",
              "duration": 223,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-28T01:27:00.906Z",
                  "duration": 51,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-28T01:27:00.957Z",
                  "duration": 41,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-28T01:27:00.998Z",
                  "duration": 66,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-28T01:27:01.064Z",
                  "duration": 57,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:27:01.122Z",
                  "duration": 7,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-28T01:27:01.129Z",
              "duration": 25,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-28T01:27:01.130Z",
                  "duration": 3,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:27:01.134Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:27:01.135Z",
                  "duration": 6,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:27:01.147Z",
                  "duration": 7,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-28T01:27:01.154Z",
              "duration": 40,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:27:01.155Z",
                  "duration": 6,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:27:01.162Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-28T01:27:01.162Z",
                  "duration": 6,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:27:01.169Z",
                  "duration": 5,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:27:01.175Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:27:01.176Z",
                  "duration": 4,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:27:01.181Z",
                  "duration": 5,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-28T01:27:01.186Z",
                  "duration": 5,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:27:01.192Z",
                  "duration": 2,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-28T01:27:01.194Z",
              "duration": 90,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-28T01:27:01.195Z",
                  "duration": 49,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:27:01.244Z",
                  "duration": 14,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:27:01.258Z",
                  "duration": 12,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:27:01.270Z",
                  "duration": 8,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-28T01:27:01.278Z",
                  "duration": 6,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:27:01.284Z",
              "duration": 134,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:27:01.393Z",
                  "duration": 25,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-e8005426fe26fe4bd8eab3a419584d64289c9a2c",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "firefox-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2585,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2585,
          "startTime": "2021-10-28T01:28:13.328Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:28:13.328Z",
              "duration": 1194,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:28:13.349Z",
                  "duration": 235,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-28T01:28:13.585Z",
                  "duration": 937,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-28T01:28:14.523Z",
              "duration": 251,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-28T01:28:14.775Z",
              "duration": 135,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-28T01:28:14.911Z",
              "duration": 251,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:28:15.162Z",
              "duration": 212,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:28:15.374Z",
              "duration": 538,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:28:15.894Z",
                  "duration": 17,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-03831aaa019090ed8eeede25f25dfa9823d8be46",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "firefox-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 5042,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 5042,
          "startTime": "2021-10-28T01:28:13.764Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:28:13.764Z",
              "duration": 1318,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:28:13.806Z",
                  "duration": 319,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-28T01:28:14.126Z",
                  "duration": 955,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-28T01:28:15.082Z",
              "duration": 1096,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-28T01:28:15.083Z",
                  "duration": 510,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-28T01:28:15.593Z",
                  "duration": 240,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-28T01:28:15.834Z",
                  "duration": 216,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:28:16.050Z",
                  "duration": 128,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-28T01:28:16.178Z",
              "duration": 301,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-28T01:28:16.179Z",
                  "duration": 64,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-28T01:28:16.243Z",
                  "duration": 99,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-28T01:28:16.342Z",
                  "duration": 11,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-28T01:28:16.354Z",
                  "duration": 24,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=0 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-28T01:28:16.378Z",
                  "duration": 93,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-28T01:28:16.479Z",
              "duration": 1192,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-28T01:28:16.480Z",
                  "duration": 1149,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:28:17.630Z",
                  "duration": 41,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-28T01:28:17.671Z",
              "duration": 77,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-28T01:28:17.672Z",
                  "duration": 24,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-28T01:28:17.696Z",
                  "duration": 14,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-28T01:28:17.710Z",
                  "duration": 11,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-28T01:28:17.722Z",
                  "duration": 13,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-28T01:28:17.735Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:28:17.736Z",
                  "duration": 12,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-28T01:28:17.748Z",
              "duration": 138,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-28T01:28:17.749Z",
                  "duration": 115,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:28:17.865Z",
                  "duration": 21,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-28T01:28:17.886Z",
              "duration": 450,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-28T01:28:17.887Z",
                  "duration": 121,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-28T01:28:18.009Z",
                  "duration": 73,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-28T01:28:18.083Z",
                  "duration": 116,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-28T01:28:18.199Z",
                  "duration": 93,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:28:18.293Z",
                  "duration": 43,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-28T01:28:18.337Z",
              "duration": 55,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-28T01:28:18.337Z",
                  "duration": 14,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:28:18.352Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:28:18.352Z",
                  "duration": 18,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:28:18.371Z",
                  "duration": 21,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-28T01:28:18.392Z",
              "duration": 150,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:28:18.393Z",
                  "duration": 25,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:28:18.418Z",
                  "duration": 1,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-28T01:28:18.419Z",
                  "duration": 15,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:28:18.435Z",
                  "duration": 41,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:28:18.477Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:28:18.477Z",
                  "duration": 26,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:28:18.503Z",
                  "duration": 18,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-28T01:28:18.522Z",
                  "duration": 19,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:28:18.542Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-28T01:28:18.542Z",
              "duration": 182,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-28T01:28:18.542Z",
                  "duration": 110,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:28:18.652Z",
                  "duration": 27,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:28:18.680Z",
                  "duration": 14,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:28:18.694Z",
                  "duration": 16,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-28T01:28:18.710Z",
                  "duration": 14,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:28:18.724Z",
              "duration": 81,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:28:18.786Z",
                  "duration": 18,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-c0eec8562fc3a40e1b22e4591749aca6683389a7",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "webkit-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2490,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2490,
          "startTime": "2021-10-28T01:29:44.285Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:29:44.285Z",
              "duration": 838,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:29:44.297Z",
                  "duration": 167,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-28T01:29:44.465Z",
                  "duration": 658,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-28T01:29:45.124Z",
              "duration": 304,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-28T01:29:45.428Z",
              "duration": 263,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-28T01:29:45.692Z",
              "duration": 213,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:29:45.905Z",
              "duration": 547,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:29:46.452Z",
              "duration": 323,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:29:46.772Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-25fa9a9c4b86241d5284c9158e60ca1279141fa0",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "webkit-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 4193,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 4193,
          "startTime": "2021-10-28T01:29:44.755Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:29:44.755Z",
              "duration": 950,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:29:44.784Z",
                  "duration": 205,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-28T01:29:44.989Z",
                  "duration": 714,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-28T01:29:45.706Z",
              "duration": 1163,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-28T01:29:45.707Z",
                  "duration": 267,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-28T01:29:45.975Z",
                  "duration": 264,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-28T01:29:46.240Z",
                  "duration": 182,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:29:46.422Z",
                  "duration": 447,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-28T01:29:46.869Z",
              "duration": 105,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-28T01:29:46.870Z",
                  "duration": 19,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-name)",
                  "startTime": "2021-10-28T01:29:46.889Z",
                  "duration": 13,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-description)",
                  "startTime": "2021-10-28T01:29:46.902Z",
                  "duration": 8,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-price)",
                  "startTime": "2021-10-28T01:29:46.910Z",
                  "duration": 7,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=4 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-28T01:29:46.918Z",
                  "duration": 56,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-28T01:29:46.975Z",
              "duration": 800,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-28T01:29:46.975Z",
                  "duration": 774,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:29:47.750Z",
                  "duration": 25,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-28T01:29:47.775Z",
              "duration": 45,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-28T01:29:47.776Z",
                  "duration": 13,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-28T01:29:47.789Z",
                  "duration": 8,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-28T01:29:47.798Z",
                  "duration": 6,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-28T01:29:47.805Z",
                  "duration": 6,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-28T01:29:47.812Z",
                  "duration": 0,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:29:47.812Z",
                  "duration": 8,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-28T01:29:47.820Z",
              "duration": 110,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-28T01:29:47.820Z",
                  "duration": 80,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:29:47.901Z",
                  "duration": 28,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-28T01:29:47.930Z",
              "duration": 513,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-28T01:29:47.930Z",
                  "duration": 91,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-28T01:29:48.022Z",
                  "duration": 75,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-28T01:29:48.098Z",
                  "duration": 168,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-28T01:29:48.267Z",
                  "duration": 108,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:29:48.376Z",
                  "duration": 67,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-28T01:29:48.443Z",
              "duration": 61,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-28T01:29:48.444Z",
                  "duration": 8,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:29:48.454Z",
                  "duration": 19,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:29:48.474Z",
                  "duration": 13,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:29:48.492Z",
                  "duration": 12,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-28T01:29:48.505Z",
              "duration": 64,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:29:48.505Z",
                  "duration": 18,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:29:48.524Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-28T01:29:48.524Z",
                  "duration": 7,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:29:48.532Z",
                  "duration": 9,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:29:48.541Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:29:48.542Z",
                  "duration": 7,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:29:48.550Z",
                  "duration": 10,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-28T01:29:48.561Z",
                  "duration": 8,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:29:48.569Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-28T01:29:48.570Z",
              "duration": 277,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-28T01:29:48.570Z",
                  "duration": 109,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:29:48.680Z",
                  "duration": 106,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:29:48.786Z",
                  "duration": 25,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:29:48.812Z",
                  "duration": 25,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-28T01:29:48.837Z",
                  "duration": 10,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:29:48.847Z",
              "duration": 101,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:29:48.945Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-a810ff1211f630c880652f640ff4dad42163aa03",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "iphone-8",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 1994,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 1994,
          "startTime": "2021-10-28T01:30:59.671Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:30:59.671Z",
              "duration": 1010,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:30:59.687Z",
                  "duration": 292,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-28T01:30:59.980Z",
                  "duration": 700,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-28T01:31:00.682Z",
              "duration": 240,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-28T01:31:00.922Z",
              "duration": 156,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-28T01:31:01.078Z",
              "duration": 200,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:31:01.278Z",
              "duration": 273,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:31:01.551Z",
              "duration": 113,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:31:01.662Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-b3a3e18698a9fe411a33db80b5c8924fece163a5",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "iphone-8",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 4516,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 4516,
          "startTime": "2021-10-28T01:30:59.800Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:30:59.800Z",
              "duration": 1312,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:30:59.823Z",
                  "duration": 300,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-28T01:31:00.124Z",
                  "duration": 988,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-28T01:31:01.113Z",
              "duration": 955,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-28T01:31:01.114Z",
                  "duration": 310,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-28T01:31:01.425Z",
                  "duration": 202,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-28T01:31:01.628Z",
                  "duration": 193,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:31:01.821Z",
                  "duration": 247,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-28T01:31:02.069Z",
              "duration": 346,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-28T01:31:02.070Z",
                  "duration": 67,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-name)",
                  "startTime": "2021-10-28T01:31:02.137Z",
                  "duration": 130,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-description)",
                  "startTime": "2021-10-28T01:31:02.267Z",
                  "duration": 57,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-price)",
                  "startTime": "2021-10-28T01:31:02.324Z",
                  "duration": 12,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=2 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-28T01:31:02.336Z",
                  "duration": 79,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-28T01:31:02.415Z",
              "duration": 729,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-28T01:31:02.415Z",
                  "duration": 685,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:31:03.100Z",
                  "duration": 44,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-28T01:31:03.144Z",
              "duration": 41,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-28T01:31:03.144Z",
                  "duration": 13,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-28T01:31:03.158Z",
                  "duration": 6,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-28T01:31:03.165Z",
                  "duration": 5,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-28T01:31:03.171Z",
                  "duration": 6,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-28T01:31:03.177Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:31:03.179Z",
                  "duration": 6,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-28T01:31:03.185Z",
              "duration": 92,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-28T01:31:03.186Z",
                  "duration": 62,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:31:03.249Z",
                  "duration": 28,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-28T01:31:03.278Z",
              "duration": 596,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-28T01:31:03.278Z",
                  "duration": 134,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-28T01:31:03.412Z",
                  "duration": 85,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-28T01:31:03.498Z",
                  "duration": 226,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-28T01:31:03.725Z",
                  "duration": 101,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:31:03.826Z",
                  "duration": 48,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-28T01:31:03.875Z",
              "duration": 106,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-28T01:31:03.875Z",
                  "duration": 64,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:31:03.940Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:31:03.940Z",
                  "duration": 19,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:31:03.960Z",
                  "duration": 21,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-28T01:31:03.981Z",
              "duration": 86,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:31:03.982Z",
                  "duration": 15,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:31:03.998Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-28T01:31:03.998Z",
                  "duration": 24,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:31:04.022Z",
                  "duration": 8,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:31:04.030Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:31:04.031Z",
                  "duration": 17,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:31:04.049Z",
                  "duration": 11,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-28T01:31:04.061Z",
                  "duration": 5,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:31:04.067Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-28T01:31:04.067Z",
              "duration": 182,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-28T01:31:04.068Z",
                  "duration": 102,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:31:04.171Z",
                  "duration": 34,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:31:04.206Z",
                  "duration": 9,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:31:04.216Z",
                  "duration": 25,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-28T01:31:04.241Z",
                  "duration": 8,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:31:04.249Z",
              "duration": 67,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:31:04.313Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-8d8abe146621ffa6547ca1fa734f65233ce8041a",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "pixel-4",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 1773,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 1773,
          "startTime": "2021-10-28T01:32:12.412Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:32:12.412Z",
              "duration": 770,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:32:12.428Z",
                  "duration": 54,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-28T01:32:12.482Z",
                  "duration": 699,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-28T01:32:13.183Z",
              "duration": 76,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-28T01:32:13.260Z",
              "duration": 46,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-28T01:32:13.307Z",
              "duration": 135,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:32:13.444Z",
              "duration": 19,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:32:13.463Z",
              "duration": 723,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:32:14.171Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-de9fa7317ee1a442cc5f1090caede700bab41b86",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "pixel-4",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 2502,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2502,
          "startTime": "2021-10-28T01:32:13.847Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:32:13.847Z",
              "duration": 682,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:32:13.858Z",
                  "duration": 69,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-28T01:32:13.927Z",
                  "duration": 601,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-28T01:32:14.529Z",
              "duration": 361,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-28T01:32:14.530Z",
                  "duration": 99,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-28T01:32:14.630Z",
                  "duration": 63,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-28T01:32:14.694Z",
                  "duration": 177,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:32:14.872Z",
                  "duration": 18,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-28T01:32:14.890Z",
              "duration": 74,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-28T01:32:14.891Z",
                  "duration": 13,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-name)",
                  "startTime": "2021-10-28T01:32:14.905Z",
                  "duration": 5,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-description)",
                  "startTime": "2021-10-28T01:32:14.910Z",
                  "duration": 5,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-price)",
                  "startTime": "2021-10-28T01:32:14.915Z",
                  "duration": 5,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=2 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-28T01:32:14.920Z",
                  "duration": 44,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-28T01:32:14.964Z",
              "duration": 683,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-28T01:32:14.965Z",
                  "duration": 661,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:32:15.627Z",
                  "duration": 20,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-28T01:32:15.647Z",
              "duration": 27,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-28T01:32:15.648Z",
                  "duration": 6,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-28T01:32:15.654Z",
                  "duration": 4,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-28T01:32:15.659Z",
                  "duration": 4,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-28T01:32:15.663Z",
                  "duration": 4,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-28T01:32:15.668Z",
                  "duration": 0,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:32:15.669Z",
                  "duration": 5,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-28T01:32:15.674Z",
              "duration": 52,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-28T01:32:15.674Z",
                  "duration": 46,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:32:15.721Z",
                  "duration": 5,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-28T01:32:15.727Z",
              "duration": 204,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-28T01:32:15.727Z",
                  "duration": 39,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-28T01:32:15.767Z",
                  "duration": 35,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-28T01:32:15.802Z",
                  "duration": 65,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-28T01:32:15.867Z",
                  "duration": 52,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:32:15.920Z",
                  "duration": 11,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-28T01:32:15.931Z",
              "duration": 18,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-28T01:32:15.932Z",
                  "duration": 3,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:32:15.935Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:32:15.936Z",
                  "duration": 5,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:32:15.942Z",
                  "duration": 7,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-28T01:32:15.949Z",
              "duration": 25,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:32:15.950Z",
                  "duration": 4,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:32:15.954Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-28T01:32:15.955Z",
                  "duration": 3,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:32:15.959Z",
                  "duration": 3,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:32:15.962Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:32:15.963Z",
                  "duration": 3,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-28T01:32:15.967Z",
                  "duration": 3,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-28T01:32:15.970Z",
                  "duration": 4,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-28T01:32:15.974Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-28T01:32:15.974Z",
              "duration": 77,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-28T01:32:15.975Z",
                  "duration": 50,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-28T01:32:16.026Z",
                  "duration": 9,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:32:16.036Z",
                  "duration": 4,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-28T01:32:16.041Z",
                  "duration": 5,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-28T01:32:16.046Z",
                  "duration": 4,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:32:16.051Z",
              "duration": 298,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:32:16.319Z",
                  "duration": 24,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    }
  ]
}