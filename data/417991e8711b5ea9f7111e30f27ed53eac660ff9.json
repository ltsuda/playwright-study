{
  "fileId": "417991e8711b5ea9f7111e30f27ed53eac660ff9",
  "fileName": "e2e.spec.js",
  "tests": [
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-e343f1a265e511a7a813144b7eab79f65a92ed93",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "chromium-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2198,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2198,
          "startTime": "2021-10-22T01:39:47.092Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:39:47.093Z",
              "duration": 784,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:39:47.098Z",
                  "duration": 38,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-22T01:39:47.137Z",
                  "duration": 739,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-22T01:39:47.878Z",
              "duration": 113,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-22T01:39:47.991Z",
              "duration": 78,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-22T01:39:48.069Z",
              "duration": 215,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:39:48.285Z",
              "duration": 69,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:48.354Z",
              "duration": 936,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:49.282Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-c4d8a494cd5f2cbcfab28fb512530ae5bd3b2141",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "chromium-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 3542,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 3542,
          "startTime": "2021-10-22T01:39:47.473Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:39:47.473Z",
              "duration": 679,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:39:47.482Z",
                  "duration": 47,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-22T01:39:47.529Z",
                  "duration": 622,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-22T01:39:48.153Z",
              "duration": 511,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-22T01:39:48.154Z",
                  "duration": 173,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-22T01:39:48.328Z",
                  "duration": 82,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-22T01:39:48.411Z",
                  "duration": 187,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:39:48.599Z",
                  "duration": 65,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-22T01:39:48.664Z",
              "duration": 779,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-22T01:39:48.665Z",
                  "duration": 15,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-22T01:39:48.681Z",
                  "duration": 13,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-22T01:39:48.695Z",
                  "duration": 8,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-22T01:39:48.703Z",
                  "duration": 9,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=0 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-22T01:39:48.713Z",
                  "duration": 730,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-22T01:39:49.443Z",
              "duration": 812,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-22T01:39:49.444Z",
                  "duration": 793,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:39:50.237Z",
                  "duration": 18,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-22T01:39:50.255Z",
              "duration": 41,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-22T01:39:50.256Z",
                  "duration": 7,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-22T01:39:50.264Z",
                  "duration": 5,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-22T01:39:50.270Z",
                  "duration": 5,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-22T01:39:50.276Z",
                  "duration": 11,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-22T01:39:50.287Z",
                  "duration": 2,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:39:50.289Z",
                  "duration": 6,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-22T01:39:50.296Z",
              "duration": 58,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-22T01:39:50.296Z",
                  "duration": 50,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:39:50.347Z",
                  "duration": 7,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-22T01:39:50.354Z",
              "duration": 260,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-22T01:39:50.355Z",
                  "duration": 46,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-22T01:39:50.402Z",
                  "duration": 50,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-22T01:39:50.453Z",
                  "duration": 86,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-22T01:39:50.541Z",
                  "duration": 62,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:39:50.603Z",
                  "duration": 11,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-22T01:39:50.614Z",
              "duration": 25,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-22T01:39:50.616Z",
                  "duration": 3,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:39:50.620Z",
                  "duration": 1,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:39:50.621Z",
                  "duration": 9,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:39:50.631Z",
                  "duration": 8,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-22T01:39:50.639Z",
              "duration": 64,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:39:50.640Z",
                  "duration": 13,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:39:50.654Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-22T01:39:50.655Z",
                  "duration": 7,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:39:50.663Z",
                  "duration": 8,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:39:50.672Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:39:50.673Z",
                  "duration": 6,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:39:50.680Z",
                  "duration": 8,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-22T01:39:50.690Z",
                  "duration": 12,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:39:50.703Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-22T01:39:50.703Z",
              "duration": 181,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-22T01:39:50.704Z",
                  "duration": 108,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:39:50.812Z",
                  "duration": 24,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:39:50.836Z",
                  "duration": 19,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:39:50.856Z",
                  "duration": 12,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-22T01:39:50.875Z",
                  "duration": 9,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:50.884Z",
              "duration": 131,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:50.990Z",
                  "duration": 25,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-a80ddfa8a04cc2775a98bcd1501438e55eb1bd59",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "chromium-fhd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 1991,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 1991,
          "startTime": "2021-10-22T01:41:33.066Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:41:33.066Z",
              "duration": 629,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:41:33.072Z",
                  "duration": 63,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-22T01:41:33.136Z",
                  "duration": 557,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-22T01:41:33.696Z",
              "duration": 85,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-22T01:41:33.782Z",
              "duration": 51,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-22T01:41:33.834Z",
              "duration": 174,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:41:34.009Z",
              "duration": 55,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:41:34.065Z",
              "duration": 992,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:41:35.033Z",
                  "duration": 23,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-2b02f230ad4a0ea0d39491cc033acce8911e5102",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "chromium-fhd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 3376,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 3376,
          "startTime": "2021-10-22T01:41:34.227Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:41:34.227Z",
              "duration": 630,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:41:34.236Z",
                  "duration": 77,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-22T01:41:34.314Z",
                  "duration": 543,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-22T01:41:34.858Z",
              "duration": 547,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-22T01:41:34.859Z",
                  "duration": 111,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-22T01:41:34.971Z",
                  "duration": 73,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-22T01:41:35.045Z",
                  "duration": 237,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:41:35.282Z",
                  "duration": 122,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-22T01:41:35.406Z",
              "duration": 684,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-22T01:41:35.408Z",
                  "duration": 10,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-name)",
                  "startTime": "2021-10-22T01:41:35.419Z",
                  "duration": 11,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-description)",
                  "startTime": "2021-10-22T01:41:35.430Z",
                  "duration": 19,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-price)",
                  "startTime": "2021-10-22T01:41:35.450Z",
                  "duration": 5,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=5 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-22T01:41:35.456Z",
                  "duration": 634,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-22T01:41:36.091Z",
              "duration": 677,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-22T01:41:36.092Z",
                  "duration": 661,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:41:36.753Z",
                  "duration": 15,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-22T01:41:36.768Z",
              "duration": 46,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-22T01:41:36.769Z",
                  "duration": 8,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-22T01:41:36.778Z",
                  "duration": 8,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-22T01:41:36.787Z",
                  "duration": 7,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-22T01:41:36.795Z",
                  "duration": 8,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-22T01:41:36.804Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:41:36.805Z",
                  "duration": 8,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-22T01:41:36.814Z",
              "duration": 59,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-22T01:41:36.814Z",
                  "duration": 50,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:41:36.865Z",
                  "duration": 8,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-22T01:41:36.874Z",
              "duration": 294,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-22T01:41:36.874Z",
                  "duration": 54,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-22T01:41:36.929Z",
                  "duration": 41,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-22T01:41:36.971Z",
                  "duration": 98,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-22T01:41:37.070Z",
                  "duration": 80,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:41:37.151Z",
                  "duration": 17,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-22T01:41:37.168Z",
              "duration": 23,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-22T01:41:37.169Z",
                  "duration": 3,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:41:37.173Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:41:37.174Z",
                  "duration": 8,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:41:37.183Z",
                  "duration": 8,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-22T01:41:37.191Z",
              "duration": 53,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:41:37.192Z",
                  "duration": 8,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:41:37.200Z",
                  "duration": 1,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-22T01:41:37.201Z",
                  "duration": 10,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:41:37.212Z",
                  "duration": 7,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:41:37.220Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:41:37.221Z",
                  "duration": 7,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:41:37.228Z",
                  "duration": 7,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-22T01:41:37.236Z",
                  "duration": 7,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:41:37.244Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-22T01:41:37.244Z",
              "duration": 125,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-22T01:41:37.245Z",
                  "duration": 67,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:41:37.313Z",
                  "duration": 24,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:41:37.338Z",
                  "duration": 7,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:41:37.345Z",
                  "duration": 9,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-22T01:41:37.354Z",
                  "duration": 15,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:41:37.369Z",
              "duration": 234,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:41:37.582Z",
                  "duration": 21,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-fbd5680872dae6205a882746d8fe01036dd11e9c",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "chrome-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 1981,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 1981,
          "startTime": "2021-10-22T01:43:13.635Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:43:13.636Z",
              "duration": 538,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:43:13.641Z",
                  "duration": 33,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-22T01:43:13.675Z",
                  "duration": 499,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-22T01:43:14.176Z",
              "duration": 106,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-22T01:43:14.283Z",
              "duration": 115,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-22T01:43:14.399Z",
              "duration": 253,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:43:14.653Z",
              "duration": 53,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:43:14.706Z",
              "duration": 910,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:43:15.596Z",
                  "duration": 17,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-264ec1e944800d91f600b0bd35e70c675523778b",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "chrome-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 3259,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 3259,
          "startTime": "2021-10-22T01:43:14.218Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:43:14.218Z",
              "duration": 676,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:43:14.227Z",
                  "duration": 58,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-22T01:43:14.285Z",
                  "duration": 608,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-22T01:43:14.894Z",
              "duration": 424,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-22T01:43:14.895Z",
                  "duration": 94,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-22T01:43:14.990Z",
                  "duration": 59,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-22T01:43:15.051Z",
                  "duration": 206,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:43:15.258Z",
                  "duration": 60,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-22T01:43:15.318Z",
              "duration": 753,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-22T01:43:15.320Z",
                  "duration": 12,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-name)",
                  "startTime": "2021-10-22T01:43:15.333Z",
                  "duration": 12,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-description)",
                  "startTime": "2021-10-22T01:43:15.345Z",
                  "duration": 8,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-price)",
                  "startTime": "2021-10-22T01:43:15.353Z",
                  "duration": 9,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=3 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-22T01:43:15.363Z",
                  "duration": 708,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-22T01:43:16.071Z",
              "duration": 730,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-22T01:43:16.076Z",
                  "duration": 700,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:43:16.777Z",
                  "duration": 24,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-22T01:43:16.801Z",
              "duration": 53,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-22T01:43:16.802Z",
                  "duration": 7,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-22T01:43:16.810Z",
                  "duration": 17,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-22T01:43:16.827Z",
                  "duration": 9,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-22T01:43:16.837Z",
                  "duration": 7,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-22T01:43:16.844Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:43:16.846Z",
                  "duration": 8,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-22T01:43:16.854Z",
              "duration": 66,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-22T01:43:16.854Z",
                  "duration": 57,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:43:16.912Z",
                  "duration": 8,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-22T01:43:16.920Z",
              "duration": 261,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-22T01:43:16.921Z",
                  "duration": 44,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-22T01:43:16.965Z",
                  "duration": 34,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-22T01:43:17.000Z",
                  "duration": 93,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-22T01:43:17.094Z",
                  "duration": 79,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:43:17.173Z",
                  "duration": 8,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-22T01:43:17.181Z",
              "duration": 30,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-22T01:43:17.184Z",
                  "duration": 6,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:43:17.191Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:43:17.193Z",
                  "duration": 9,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:43:17.203Z",
                  "duration": 8,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-22T01:43:17.211Z",
              "duration": 42,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:43:17.212Z",
                  "duration": 6,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:43:17.219Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-22T01:43:17.220Z",
                  "duration": 6,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:43:17.226Z",
                  "duration": 6,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:43:17.232Z",
                  "duration": 1,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:43:17.233Z",
                  "duration": 6,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:43:17.240Z",
                  "duration": 5,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-22T01:43:17.246Z",
                  "duration": 6,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:43:17.253Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-22T01:43:17.253Z",
              "duration": 99,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-22T01:43:17.254Z",
                  "duration": 59,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:43:17.314Z",
                  "duration": 11,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:43:17.326Z",
                  "duration": 8,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:43:17.336Z",
                  "duration": 7,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-22T01:43:17.345Z",
                  "duration": 7,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:43:17.352Z",
              "duration": 125,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:43:17.465Z",
                  "duration": 12,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-e8005426fe26fe4bd8eab3a419584d64289c9a2c",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "firefox-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2843,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2843,
          "startTime": "2021-10-22T01:45:09.935Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:45:09.935Z",
              "duration": 1258,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:45:09.960Z",
                  "duration": 269,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-22T01:45:10.229Z",
                  "duration": 963,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-22T01:45:11.193Z",
              "duration": 278,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-22T01:45:11.472Z",
              "duration": 153,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-22T01:45:11.626Z",
              "duration": 206,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:45:11.833Z",
              "duration": 242,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:45:12.075Z",
              "duration": 703,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:45:12.746Z",
                  "duration": 32,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-03831aaa019090ed8eeede25f25dfa9823d8be46",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "firefox-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 4635,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 4635,
          "startTime": "2021-10-22T01:45:10.473Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:45:10.473Z",
              "duration": 1161,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:45:10.513Z",
                  "duration": 348,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-22T01:45:10.862Z",
                  "duration": 771,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-22T01:45:11.634Z",
              "duration": 1096,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-22T01:45:11.640Z",
                  "duration": 461,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-22T01:45:12.106Z",
                  "duration": 202,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-22T01:45:12.309Z",
                  "duration": 248,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:45:12.557Z",
                  "duration": 173,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-22T01:45:12.731Z",
              "duration": 220,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-22T01:45:12.732Z",
                  "duration": 37,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-name)",
                  "startTime": "2021-10-22T01:45:12.769Z",
                  "duration": 53,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-description)",
                  "startTime": "2021-10-22T01:45:12.823Z",
                  "duration": 16,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-price)",
                  "startTime": "2021-10-22T01:45:12.840Z",
                  "duration": 36,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=4 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-22T01:45:12.877Z",
                  "duration": 74,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-22T01:45:12.951Z",
              "duration": 901,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-22T01:45:12.952Z",
                  "duration": 665,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:45:13.617Z",
                  "duration": 235,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-22T01:45:13.853Z",
              "duration": 102,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-22T01:45:13.854Z",
                  "duration": 30,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-22T01:45:13.884Z",
                  "duration": 14,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-22T01:45:13.899Z",
                  "duration": 13,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-22T01:45:13.912Z",
                  "duration": 24,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-22T01:45:13.937Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:45:13.938Z",
                  "duration": 17,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-22T01:45:13.955Z",
              "duration": 160,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-22T01:45:13.956Z",
                  "duration": 129,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:45:14.086Z",
                  "duration": 29,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-22T01:45:14.116Z",
              "duration": 487,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-22T01:45:14.117Z",
                  "duration": 114,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-22T01:45:14.231Z",
                  "duration": 74,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-22T01:45:14.305Z",
                  "duration": 189,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-22T01:45:14.495Z",
                  "duration": 82,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:45:14.578Z",
                  "duration": 25,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-22T01:45:14.603Z",
              "duration": 37,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-22T01:45:14.604Z",
                  "duration": 6,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:45:14.611Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:45:14.611Z",
                  "duration": 14,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:45:14.626Z",
                  "duration": 14,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-22T01:45:14.640Z",
              "duration": 182,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:45:14.641Z",
                  "duration": 17,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:45:14.659Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-22T01:45:14.659Z",
                  "duration": 12,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:45:14.672Z",
                  "duration": 67,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:45:14.740Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:45:14.740Z",
                  "duration": 21,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:45:14.762Z",
                  "duration": 33,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-22T01:45:14.795Z",
                  "duration": 26,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:45:14.822Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-22T01:45:14.822Z",
              "duration": 209,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-22T01:45:14.823Z",
                  "duration": 86,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:45:14.910Z",
                  "duration": 55,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:45:14.965Z",
                  "duration": 34,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:45:14.999Z",
                  "duration": 15,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-22T01:45:15.016Z",
                  "duration": 15,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:45:15.031Z",
              "duration": 76,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:45:15.095Z",
                  "duration": 12,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-c0eec8562fc3a40e1b22e4591749aca6683389a7",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "webkit-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2289,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2289,
          "startTime": "2021-10-22T01:47:28.173Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:47:28.177Z",
              "duration": 969,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:47:28.185Z",
                  "duration": 177,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-22T01:47:28.362Z",
                  "duration": 784,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-22T01:47:29.147Z",
              "duration": 278,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-22T01:47:29.426Z",
              "duration": 158,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-22T01:47:29.585Z",
              "duration": 187,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:47:29.773Z",
              "duration": 440,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:47:30.213Z",
              "duration": 249,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:47:30.459Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-25fa9a9c4b86241d5284c9158e60ca1279141fa0",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "webkit-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 5105,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 5105,
          "startTime": "2021-10-22T01:47:28.677Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:47:28.677Z",
              "duration": 1174,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:47:28.706Z",
                  "duration": 252,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-22T01:47:28.959Z",
                  "duration": 891,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-22T01:47:29.852Z",
              "duration": 1144,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-22T01:47:29.853Z",
                  "duration": 264,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-22T01:47:30.118Z",
                  "duration": 299,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-22T01:47:30.418Z",
                  "duration": 217,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:47:30.636Z",
                  "duration": 360,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-22T01:47:30.996Z",
              "duration": 384,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-22T01:47:30.997Z",
                  "duration": 27,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-name)",
                  "startTime": "2021-10-22T01:47:31.025Z",
                  "duration": 136,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-description)",
                  "startTime": "2021-10-22T01:47:31.162Z",
                  "duration": 27,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-price)",
                  "startTime": "2021-10-22T01:47:31.189Z",
                  "duration": 63,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=2 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-22T01:47:31.253Z",
                  "duration": 126,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-22T01:47:31.380Z",
              "duration": 942,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-22T01:47:31.380Z",
                  "duration": 862,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:47:32.243Z",
                  "duration": 79,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-22T01:47:32.322Z",
              "duration": 73,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-22T01:47:32.323Z",
                  "duration": 14,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-22T01:47:32.338Z",
                  "duration": 12,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-22T01:47:32.351Z",
                  "duration": 10,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-22T01:47:32.362Z",
                  "duration": 11,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-22T01:47:32.373Z",
                  "duration": 2,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:47:32.375Z",
                  "duration": 20,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-22T01:47:32.395Z",
              "duration": 171,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-22T01:47:32.396Z",
                  "duration": 123,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:47:32.519Z",
                  "duration": 47,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-22T01:47:32.566Z",
              "duration": 807,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-22T01:47:32.567Z",
                  "duration": 274,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-22T01:47:32.842Z",
                  "duration": 150,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-22T01:47:32.993Z",
                  "duration": 194,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-22T01:47:33.188Z",
                  "duration": 109,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:47:33.298Z",
                  "duration": 75,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-22T01:47:33.373Z",
              "duration": 47,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-22T01:47:33.375Z",
                  "duration": 5,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:47:33.380Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:47:33.382Z",
                  "duration": 19,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:47:33.402Z",
                  "duration": 18,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-22T01:47:33.420Z",
              "duration": 67,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:47:33.421Z",
                  "duration": 11,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:47:33.433Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-22T01:47:33.434Z",
                  "duration": 12,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:47:33.447Z",
                  "duration": 11,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:47:33.459Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:47:33.459Z",
                  "duration": 9,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:47:33.468Z",
                  "duration": 9,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-22T01:47:33.478Z",
                  "duration": 8,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:47:33.487Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-22T01:47:33.487Z",
              "duration": 217,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-22T01:47:33.488Z",
                  "duration": 120,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:47:33.608Z",
                  "duration": 47,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:47:33.656Z",
                  "duration": 15,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:47:33.672Z",
                  "duration": 8,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-22T01:47:33.680Z",
                  "duration": 24,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:47:33.705Z",
              "duration": 77,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:47:33.777Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-a810ff1211f630c880652f640ff4dad42163aa03",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "iphone-8",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2230,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2230,
          "startTime": "2021-10-22T01:49:31.540Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:49:31.540Z",
              "duration": 1026,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:49:31.559Z",
                  "duration": 284,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-22T01:49:31.843Z",
                  "duration": 722,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-22T01:49:32.567Z",
              "duration": 194,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-22T01:49:32.762Z",
              "duration": 114,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-22T01:49:32.877Z",
              "duration": 204,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:49:33.081Z",
              "duration": 301,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:49:33.382Z",
              "duration": 386,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:49:33.756Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-b3a3e18698a9fe411a33db80b5c8924fece163a5",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "iphone-8",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 4869,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 4869,
          "startTime": "2021-10-22T01:49:33.078Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:49:33.078Z",
              "duration": 1389,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:49:33.107Z",
                  "duration": 371,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-22T01:49:33.481Z",
                  "duration": 985,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-22T01:49:34.469Z",
              "duration": 961,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-22T01:49:34.504Z",
                  "duration": 343,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-22T01:49:34.848Z",
                  "duration": 180,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-22T01:49:35.029Z",
                  "duration": 155,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:49:35.185Z",
                  "duration": 245,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-22T01:49:35.430Z",
              "duration": 256,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-22T01:49:35.433Z",
                  "duration": 44,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-name)",
                  "startTime": "2021-10-22T01:49:35.477Z",
                  "duration": 71,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-description)",
                  "startTime": "2021-10-22T01:49:35.549Z",
                  "duration": 12,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-price)",
                  "startTime": "2021-10-22T01:49:35.562Z",
                  "duration": 70,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=4 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-22T01:49:35.633Z",
                  "duration": 53,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-22T01:49:35.686Z",
              "duration": 750,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-22T01:49:35.688Z",
                  "duration": 723,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:49:36.412Z",
                  "duration": 24,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-22T01:49:36.436Z",
              "duration": 59,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-22T01:49:36.437Z",
                  "duration": 22,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-22T01:49:36.460Z",
                  "duration": 10,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-22T01:49:36.470Z",
                  "duration": 7,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-22T01:49:36.478Z",
                  "duration": 7,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-22T01:49:36.486Z",
                  "duration": 0,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:49:36.487Z",
                  "duration": 8,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-22T01:49:36.495Z",
              "duration": 116,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-22T01:49:36.496Z",
                  "duration": 85,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:49:36.582Z",
                  "duration": 28,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-22T01:49:36.611Z",
              "duration": 677,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-22T01:49:36.612Z",
                  "duration": 112,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-22T01:49:36.725Z",
                  "duration": 92,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-22T01:49:36.818Z",
                  "duration": 258,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-22T01:49:37.077Z",
                  "duration": 129,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:49:37.207Z",
                  "duration": 81,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-22T01:49:37.288Z",
              "duration": 85,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-22T01:49:37.289Z",
                  "duration": 38,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:49:37.328Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:49:37.328Z",
                  "duration": 29,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:49:37.358Z",
                  "duration": 15,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-22T01:49:37.373Z",
              "duration": 77,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:49:37.374Z",
                  "duration": 13,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:49:37.388Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-22T01:49:37.388Z",
                  "duration": 11,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:49:37.400Z",
                  "duration": 16,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:49:37.417Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:49:37.417Z",
                  "duration": 8,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:49:37.426Z",
                  "duration": 12,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-22T01:49:37.440Z",
                  "duration": 9,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:49:37.450Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-22T01:49:37.450Z",
              "duration": 331,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-22T01:49:37.451Z",
                  "duration": 134,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:49:37.585Z",
                  "duration": 113,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:49:37.698Z",
                  "duration": 37,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:49:37.736Z",
                  "duration": 21,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-22T01:49:37.758Z",
                  "duration": 23,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:49:37.781Z",
              "duration": 162,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:49:37.932Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-8d8abe146621ffa6547ca1fa734f65233ce8041a",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "pixel-4",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2045,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2045,
          "startTime": "2021-10-22T01:51:20.677Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:51:20.679Z",
              "duration": 576,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:51:20.685Z",
                  "duration": 36,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-22T01:51:20.724Z",
                  "duration": 530,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-22T01:51:21.256Z",
              "duration": 100,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-22T01:51:21.358Z",
              "duration": 115,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-22T01:51:21.474Z",
              "duration": 246,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:51:21.721Z",
              "duration": 97,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:51:21.818Z",
              "duration": 904,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:51:22.686Z",
                  "duration": 32,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-de9fa7317ee1a442cc5f1090caede700bab41b86",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "pixel-4",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 3079,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 3079,
          "startTime": "2021-10-22T01:51:21.407Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:51:21.407Z",
              "duration": 717,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:51:21.414Z",
                  "duration": 72,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-22T01:51:21.486Z",
                  "duration": 637,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-22T01:51:22.124Z",
              "duration": 433,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-22T01:51:22.126Z",
                  "duration": 118,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-22T01:51:22.245Z",
                  "duration": 67,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-22T01:51:22.313Z",
                  "duration": 185,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:51:22.499Z",
                  "duration": 58,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-22T01:51:22.557Z",
              "duration": 209,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-22T01:51:22.558Z",
                  "duration": 19,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-name)",
                  "startTime": "2021-10-22T01:51:22.578Z",
                  "duration": 6,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-description)",
                  "startTime": "2021-10-22T01:51:22.585Z",
                  "duration": 12,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-price)",
                  "startTime": "2021-10-22T01:51:22.597Z",
                  "duration": 10,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=2 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-22T01:51:22.608Z",
                  "duration": 158,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-22T01:51:22.767Z",
              "duration": 871,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-22T01:51:22.767Z",
                  "duration": 853,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:51:23.621Z",
                  "duration": 17,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-22T01:51:23.638Z",
              "duration": 34,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-22T01:51:23.639Z",
                  "duration": 7,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-22T01:51:23.647Z",
                  "duration": 5,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-22T01:51:23.653Z",
                  "duration": 5,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-22T01:51:23.659Z",
                  "duration": 6,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-22T01:51:23.665Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:51:23.667Z",
                  "duration": 5,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-22T01:51:23.673Z",
              "duration": 56,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-22T01:51:23.673Z",
                  "duration": 42,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:51:23.716Z",
                  "duration": 13,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-22T01:51:23.729Z",
              "duration": 211,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-22T01:51:23.730Z",
                  "duration": 38,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-22T01:51:23.768Z",
                  "duration": 33,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-22T01:51:23.801Z",
                  "duration": 74,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-22T01:51:23.875Z",
                  "duration": 58,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:51:23.933Z",
                  "duration": 7,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-22T01:51:23.941Z",
              "duration": 17,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-22T01:51:23.941Z",
                  "duration": 3,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:51:23.945Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:51:23.946Z",
                  "duration": 5,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:51:23.951Z",
                  "duration": 6,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-22T01:51:23.958Z",
              "duration": 69,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:51:23.959Z",
                  "duration": 5,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:51:23.964Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-22T01:51:23.965Z",
                  "duration": 5,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:51:23.971Z",
                  "duration": 12,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:51:23.984Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:51:23.987Z",
                  "duration": 24,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-22T01:51:24.012Z",
                  "duration": 9,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-22T01:51:24.021Z",
                  "duration": 6,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-22T01:51:24.027Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-22T01:51:24.028Z",
              "duration": 128,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-22T01:51:24.028Z",
                  "duration": 74,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-22T01:51:24.103Z",
                  "duration": 21,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:51:24.124Z",
                  "duration": 11,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-22T01:51:24.136Z",
                  "duration": 10,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-22T01:51:24.148Z",
                  "duration": 8,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:51:24.156Z",
              "duration": 330,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:51:24.470Z",
                  "duration": 14,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    }
  ]
}