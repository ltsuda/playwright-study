{
  "fileId": "417991e8711b5ea9f7111e30f27ed53eac660ff9",
  "fileName": "e2e.spec.js",
  "tests": [
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-e343f1a265e511a7a813144b7eab79f65a92ed93",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "chromium-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 1407,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 1407,
          "startTime": "2021-11-03T02:08:21.946Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:08:21.946Z",
              "duration": 451,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:08:21.950Z",
                  "duration": 29,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-11-03T02:08:21.980Z",
                  "duration": 417,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-11-03T02:08:22.398Z",
              "duration": 95,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-11-03T02:08:22.493Z",
              "duration": 78,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-11-03T02:08:22.572Z",
              "duration": 179,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:08:22.752Z",
              "duration": 44,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:08:22.796Z",
              "duration": 557,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:08:23.342Z",
                  "duration": 10,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-c4d8a494cd5f2cbcfab28fb512530ae5bd3b2141",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "chromium-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 2696,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2696,
          "startTime": "2021-11-03T02:08:22.436Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:08:22.436Z",
              "duration": 590,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:08:22.443Z",
                  "duration": 47,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-11-03T02:08:22.491Z",
                  "duration": 535,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-11-03T02:08:23.027Z",
              "duration": 344,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-11-03T02:08:23.028Z",
                  "duration": 86,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-11-03T02:08:23.114Z",
                  "duration": 48,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-11-03T02:08:23.163Z",
                  "duration": 156,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:08:23.320Z",
                  "duration": 51,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-11-03T02:08:23.371Z",
              "duration": 406,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-11-03T02:08:23.371Z",
                  "duration": 22,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-name)",
                  "startTime": "2021-11-03T02:08:23.394Z",
                  "duration": 12,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-description)",
                  "startTime": "2021-11-03T02:08:23.406Z",
                  "duration": 9,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-price)",
                  "startTime": "2021-11-03T02:08:23.415Z",
                  "duration": 6,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=1 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-11-03T02:08:23.422Z",
                  "duration": 355,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-11-03T02:08:23.777Z",
              "duration": 732,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-11-03T02:08:23.778Z",
                  "duration": 691,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:08:24.470Z",
                  "duration": 39,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-11-03T02:08:24.509Z",
              "duration": 40,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-11-03T02:08:24.510Z",
                  "duration": 5,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-11-03T02:08:24.516Z",
                  "duration": 9,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-11-03T02:08:24.525Z",
                  "duration": 6,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-11-03T02:08:24.531Z",
                  "duration": 8,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-11-03T02:08:24.541Z",
                  "duration": 0,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:08:24.542Z",
                  "duration": 7,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-11-03T02:08:24.549Z",
              "duration": 87,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-11-03T02:08:24.550Z",
                  "duration": 73,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:08:24.623Z",
                  "duration": 13,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-11-03T02:08:24.636Z",
              "duration": 241,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-11-03T02:08:24.636Z",
                  "duration": 80,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-11-03T02:08:24.716Z",
                  "duration": 29,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-11-03T02:08:24.746Z",
                  "duration": 69,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-11-03T02:08:24.816Z",
                  "duration": 55,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:08:24.872Z",
                  "duration": 5,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-11-03T02:08:24.877Z",
              "duration": 18,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-11-03T02:08:24.877Z",
                  "duration": 3,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:08:24.881Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:08:24.881Z",
                  "duration": 5,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:08:24.886Z",
                  "duration": 9,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-11-03T02:08:24.895Z",
              "duration": 37,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:08:24.896Z",
                  "duration": 15,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:08:24.911Z",
                  "duration": 1,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-11-03T02:08:24.912Z",
                  "duration": 4,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:08:24.916Z",
                  "duration": 3,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:08:24.920Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:08:24.920Z",
                  "duration": 4,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:08:24.924Z",
                  "duration": 4,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-11-03T02:08:24.928Z",
                  "duration": 4,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:08:24.932Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-11-03T02:08:24.932Z",
              "duration": 89,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-11-03T02:08:24.932Z",
                  "duration": 58,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:08:24.990Z",
                  "duration": 17,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:08:25.007Z",
                  "duration": 5,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:08:25.012Z",
                  "duration": 4,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-11-03T02:08:25.016Z",
                  "duration": 5,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:08:25.021Z",
              "duration": 111,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:08:25.109Z",
                  "duration": 22,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-a80ddfa8a04cc2775a98bcd1501438e55eb1bd59",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "chromium-fhd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 1749,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 1749,
          "startTime": "2021-11-03T02:09:25.302Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:09:25.302Z",
              "duration": 625,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:09:25.312Z",
                  "duration": 38,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-11-03T02:09:25.350Z",
                  "duration": 577,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-11-03T02:09:25.928Z",
              "duration": 81,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-11-03T02:09:26.009Z",
              "duration": 53,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-11-03T02:09:26.062Z",
              "duration": 142,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:09:26.204Z",
              "duration": 55,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:09:26.261Z",
              "duration": 789,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:09:27.036Z",
                  "duration": 14,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-2b02f230ad4a0ea0d39491cc033acce8911e5102",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "chromium-fhd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 2579,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2579,
          "startTime": "2021-11-03T02:09:25.595Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:09:25.595Z",
              "duration": 574,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:09:25.605Z",
                  "duration": 65,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-11-03T02:09:25.670Z",
                  "duration": 498,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-11-03T02:09:26.169Z",
              "duration": 375,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-11-03T02:09:26.170Z",
                  "duration": 118,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-11-03T02:09:26.288Z",
                  "duration": 41,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-11-03T02:09:26.330Z",
                  "duration": 152,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:09:26.482Z",
                  "duration": 62,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-11-03T02:09:26.544Z",
              "duration": 385,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-11-03T02:09:26.545Z",
                  "duration": 10,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-name)",
                  "startTime": "2021-11-03T02:09:26.555Z",
                  "duration": 15,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-description)",
                  "startTime": "2021-11-03T02:09:26.570Z",
                  "duration": 4,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-price)",
                  "startTime": "2021-11-03T02:09:26.574Z",
                  "duration": 4,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=1 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-11-03T02:09:26.578Z",
                  "duration": 351,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-11-03T02:09:26.929Z",
              "duration": 695,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-11-03T02:09:26.929Z",
                  "duration": 676,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:09:27.605Z",
                  "duration": 19,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-11-03T02:09:27.624Z",
              "duration": 24,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-11-03T02:09:27.625Z",
                  "duration": 5,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-11-03T02:09:27.630Z",
                  "duration": 4,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-11-03T02:09:27.634Z",
                  "duration": 3,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-11-03T02:09:27.637Z",
                  "duration": 7,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-11-03T02:09:27.644Z",
                  "duration": 0,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:09:27.644Z",
                  "duration": 4,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-11-03T02:09:27.648Z",
              "duration": 48,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-11-03T02:09:27.649Z",
                  "duration": 40,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:09:27.690Z",
                  "duration": 6,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-11-03T02:09:27.696Z",
              "duration": 170,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-11-03T02:09:27.696Z",
                  "duration": 27,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-11-03T02:09:27.724Z",
                  "duration": 31,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-11-03T02:09:27.756Z",
                  "duration": 54,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-11-03T02:09:27.810Z",
                  "duration": 47,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:09:27.857Z",
                  "duration": 9,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-11-03T02:09:27.866Z",
              "duration": 15,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-11-03T02:09:27.867Z",
                  "duration": 2,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:09:27.870Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:09:27.870Z",
                  "duration": 7,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:09:27.878Z",
                  "duration": 3,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-11-03T02:09:27.881Z",
              "duration": 37,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:09:27.882Z",
                  "duration": 3,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:09:27.886Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-11-03T02:09:27.886Z",
                  "duration": 3,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:09:27.890Z",
                  "duration": 3,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:09:27.893Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:09:27.894Z",
                  "duration": 10,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:09:27.907Z",
                  "duration": 5,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-11-03T02:09:27.912Z",
                  "duration": 5,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:09:27.918Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-11-03T02:09:27.918Z",
              "duration": 70,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-11-03T02:09:27.918Z",
                  "duration": 47,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:09:27.966Z",
                  "duration": 10,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:09:27.976Z",
                  "duration": 5,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:09:27.981Z",
                  "duration": 3,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-11-03T02:09:27.985Z",
                  "duration": 3,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:09:27.988Z",
              "duration": 186,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:09:28.147Z",
                  "duration": 26,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-fbd5680872dae6205a882746d8fe01036dd11e9c",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "chrome-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 1676,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 1676,
          "startTime": "2021-11-03T02:10:26.157Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:10:26.157Z",
              "duration": 628,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:10:26.164Z",
                  "duration": 32,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-11-03T02:10:26.196Z",
                  "duration": 589,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-11-03T02:10:26.786Z",
              "duration": 84,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-11-03T02:10:26.871Z",
              "duration": 46,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-11-03T02:10:26.918Z",
              "duration": 134,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:10:27.053Z",
              "duration": 67,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:10:27.120Z",
              "duration": 712,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:10:27.818Z",
                  "duration": 14,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-264ec1e944800d91f600b0bd35e70c675523778b",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "chrome-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 2548,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2548,
          "startTime": "2021-11-03T02:10:26.300Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:10:26.300Z",
              "duration": 558,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:10:26.308Z",
                  "duration": 39,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-11-03T02:10:26.347Z",
                  "duration": 511,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-11-03T02:10:26.858Z",
              "duration": 314,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-11-03T02:10:26.859Z",
                  "duration": 70,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-11-03T02:10:26.930Z",
                  "duration": 41,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-11-03T02:10:26.972Z",
                  "duration": 140,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:10:27.113Z",
                  "duration": 59,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-11-03T02:10:27.172Z",
              "duration": 487,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-11-03T02:10:27.173Z",
                  "duration": 11,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-name)",
                  "startTime": "2021-11-03T02:10:27.184Z",
                  "duration": 4,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-description)",
                  "startTime": "2021-11-03T02:10:27.189Z",
                  "duration": 3,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-price)",
                  "startTime": "2021-11-03T02:10:27.192Z",
                  "duration": 4,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=4 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-11-03T02:10:27.196Z",
                  "duration": 463,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-11-03T02:10:27.659Z",
              "duration": 650,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-11-03T02:10:27.659Z",
                  "duration": 641,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:10:28.300Z",
                  "duration": 9,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-11-03T02:10:28.309Z",
              "duration": 37,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-11-03T02:10:28.310Z",
                  "duration": 4,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-11-03T02:10:28.315Z",
                  "duration": 4,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-11-03T02:10:28.319Z",
                  "duration": 12,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-11-03T02:10:28.332Z",
                  "duration": 3,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-11-03T02:10:28.335Z",
                  "duration": 0,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:10:28.336Z",
                  "duration": 10,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-11-03T02:10:28.346Z",
              "duration": 55,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-11-03T02:10:28.347Z",
                  "duration": 49,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:10:28.396Z",
                  "duration": 5,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-11-03T02:10:28.401Z",
              "duration": 211,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-11-03T02:10:28.402Z",
                  "duration": 59,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-11-03T02:10:28.461Z",
                  "duration": 29,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-11-03T02:10:28.491Z",
                  "duration": 63,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-11-03T02:10:28.555Z",
                  "duration": 52,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:10:28.607Z",
                  "duration": 5,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-11-03T02:10:28.612Z",
              "duration": 16,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-11-03T02:10:28.612Z",
                  "duration": 2,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:10:28.615Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:10:28.615Z",
                  "duration": 5,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:10:28.621Z",
                  "duration": 7,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-11-03T02:10:28.628Z",
              "duration": 29,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:10:28.628Z",
                  "duration": 4,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:10:28.632Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-11-03T02:10:28.632Z",
                  "duration": 4,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:10:28.636Z",
                  "duration": 3,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:10:28.639Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:10:28.640Z",
                  "duration": 10,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:10:28.650Z",
                  "duration": 3,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-11-03T02:10:28.653Z",
                  "duration": 3,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:10:28.657Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-11-03T02:10:28.657Z",
              "duration": 69,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-11-03T02:10:28.657Z",
                  "duration": 37,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:10:28.694Z",
                  "duration": 18,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:10:28.712Z",
                  "duration": 6,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:10:28.719Z",
                  "duration": 3,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-11-03T02:10:28.723Z",
                  "duration": 3,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:10:28.727Z",
              "duration": 121,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:10:28.821Z",
                  "duration": 25,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-e8005426fe26fe4bd8eab3a419584d64289c9a2c",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "firefox-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2204,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2204,
          "startTime": "2021-11-03T02:11:34.811Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:11:34.811Z",
              "duration": 1009,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:11:34.825Z",
                  "duration": 263,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-11-03T02:11:35.088Z",
                  "duration": 732,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-11-03T02:11:35.821Z",
              "duration": 173,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-11-03T02:11:35.995Z",
              "duration": 92,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-11-03T02:11:36.088Z",
              "duration": 216,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:11:36.305Z",
              "duration": 215,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:11:36.520Z",
              "duration": 495,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:11:36.989Z",
                  "duration": 26,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-03831aaa019090ed8eeede25f25dfa9823d8be46",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "firefox-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 4191,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 4191,
          "startTime": "2021-11-03T02:11:35.021Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:11:35.021Z",
              "duration": 1109,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:11:35.041Z",
                  "duration": 352,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-11-03T02:11:35.394Z",
                  "duration": 735,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-11-03T02:11:36.130Z",
              "duration": 794,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-11-03T02:11:36.135Z",
                  "duration": 223,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-11-03T02:11:36.359Z",
                  "duration": 220,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-11-03T02:11:36.579Z",
                  "duration": 221,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:11:36.801Z",
                  "duration": 123,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-11-03T02:11:36.924Z",
              "duration": 215,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-11-03T02:11:36.925Z",
                  "duration": 32,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-name)",
                  "startTime": "2021-11-03T02:11:36.958Z",
                  "duration": 46,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-description)",
                  "startTime": "2021-11-03T02:11:37.005Z",
                  "duration": 32,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-price)",
                  "startTime": "2021-11-03T02:11:37.037Z",
                  "duration": 18,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=5 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-11-03T02:11:37.055Z",
                  "duration": 84,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-11-03T02:11:37.139Z",
              "duration": 1111,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-11-03T02:11:37.140Z",
                  "duration": 1086,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:11:38.227Z",
                  "duration": 23,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-11-03T02:11:38.250Z",
              "duration": 64,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-11-03T02:11:38.250Z",
                  "duration": 15,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-11-03T02:11:38.266Z",
                  "duration": 8,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-11-03T02:11:38.274Z",
                  "duration": 18,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-11-03T02:11:38.293Z",
                  "duration": 12,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-11-03T02:11:38.305Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:11:38.306Z",
                  "duration": 7,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-11-03T02:11:38.314Z",
              "duration": 95,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-11-03T02:11:38.314Z",
                  "duration": 77,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:11:38.391Z",
                  "duration": 18,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-11-03T02:11:38.409Z",
              "duration": 385,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-11-03T02:11:38.410Z",
                  "duration": 66,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-11-03T02:11:38.476Z",
                  "duration": 37,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-11-03T02:11:38.513Z",
                  "duration": 135,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-11-03T02:11:38.649Z",
                  "duration": 90,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:11:38.740Z",
                  "duration": 54,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-11-03T02:11:38.794Z",
              "duration": 37,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-11-03T02:11:38.795Z",
                  "duration": 8,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:11:38.804Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:11:38.805Z",
                  "duration": 12,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:11:38.823Z",
                  "duration": 8,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-11-03T02:11:38.831Z",
              "duration": 63,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:11:38.835Z",
                  "duration": 7,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:11:38.842Z",
                  "duration": 1,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-11-03T02:11:38.843Z",
                  "duration": 7,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:11:38.851Z",
                  "duration": 15,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:11:38.867Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:11:38.867Z",
                  "duration": 10,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:11:38.877Z",
                  "duration": 9,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-11-03T02:11:38.886Z",
                  "duration": 8,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:11:38.894Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-11-03T02:11:38.894Z",
              "duration": 169,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-11-03T02:11:38.895Z",
                  "duration": 59,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:11:38.954Z",
                  "duration": 27,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:11:38.981Z",
                  "duration": 35,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:11:39.016Z",
                  "duration": 22,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-11-03T02:11:39.039Z",
                  "duration": 23,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:11:39.063Z",
              "duration": 149,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:11:39.203Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-c0eec8562fc3a40e1b22e4591749aca6683389a7",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "webkit-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2220,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2220,
          "startTime": "2021-11-03T02:12:53.937Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:12:53.937Z",
              "duration": 921,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:12:53.943Z",
                  "duration": 209,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-11-03T02:12:54.152Z",
                  "duration": 706,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-11-03T02:12:54.859Z",
              "duration": 409,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-11-03T02:12:55.268Z",
              "duration": 112,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-11-03T02:12:55.381Z",
              "duration": 167,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:12:55.548Z",
              "duration": 360,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:12:55.908Z",
              "duration": 248,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:12:56.154Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-25fa9a9c4b86241d5284c9158e60ca1279141fa0",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "webkit-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 3710,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 3710,
          "startTime": "2021-11-03T02:12:54.069Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:12:54.069Z",
              "duration": 826,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:12:54.093Z",
                  "duration": 232,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-11-03T02:12:54.326Z",
                  "duration": 568,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-11-03T02:12:54.895Z",
              "duration": 1028,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-11-03T02:12:54.896Z",
                  "duration": 211,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-11-03T02:12:55.108Z",
                  "duration": 209,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-11-03T02:12:55.317Z",
                  "duration": 211,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:12:55.529Z",
                  "duration": 394,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-11-03T02:12:55.924Z",
              "duration": 238,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-11-03T02:12:55.924Z",
                  "duration": 19,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-name)",
                  "startTime": "2021-11-03T02:12:55.944Z",
                  "duration": 102,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-description)",
                  "startTime": "2021-11-03T02:12:56.046Z",
                  "duration": 47,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-price)",
                  "startTime": "2021-11-03T02:12:56.093Z",
                  "duration": 10,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=4 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-11-03T02:12:56.103Z",
                  "duration": 59,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-11-03T02:12:56.162Z",
              "duration": 779,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-11-03T02:12:56.163Z",
                  "duration": 760,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:12:56.924Z",
                  "duration": 17,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-11-03T02:12:56.941Z",
              "duration": 47,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-11-03T02:12:56.941Z",
                  "duration": 21,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-11-03T02:12:56.962Z",
                  "duration": 8,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-11-03T02:12:56.970Z",
                  "duration": 5,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-11-03T02:12:56.976Z",
                  "duration": 5,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-11-03T02:12:56.981Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:12:56.982Z",
                  "duration": 6,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-11-03T02:12:56.988Z",
              "duration": 89,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-11-03T02:12:56.988Z",
                  "duration": 59,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:12:57.047Z",
                  "duration": 30,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-11-03T02:12:57.077Z",
              "duration": 393,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-11-03T02:12:57.078Z",
                  "duration": 73,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-11-03T02:12:57.152Z",
                  "duration": 51,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-11-03T02:12:57.204Z",
                  "duration": 135,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-11-03T02:12:57.340Z",
                  "duration": 79,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:12:57.420Z",
                  "duration": 50,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-11-03T02:12:57.470Z",
              "duration": 25,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-11-03T02:12:57.470Z",
                  "duration": 6,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:12:57.476Z",
                  "duration": 1,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:12:57.477Z",
                  "duration": 7,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:12:57.485Z",
                  "duration": 10,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-11-03T02:12:57.495Z",
              "duration": 50,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:12:57.495Z",
                  "duration": 10,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:12:57.505Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-11-03T02:12:57.506Z",
                  "duration": 6,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:12:57.513Z",
                  "duration": 9,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:12:57.522Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:12:57.523Z",
                  "duration": 6,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:12:57.529Z",
                  "duration": 9,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-11-03T02:12:57.538Z",
                  "duration": 7,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:12:57.545Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-11-03T02:12:57.546Z",
              "duration": 175,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-11-03T02:12:57.546Z",
                  "duration": 89,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:12:57.636Z",
                  "duration": 47,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:12:57.684Z",
                  "duration": 16,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:12:57.701Z",
                  "duration": 11,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-11-03T02:12:57.713Z",
                  "duration": 8,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:12:57.722Z",
              "duration": 57,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:12:57.776Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-a810ff1211f630c880652f640ff4dad42163aa03",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "iphone-8",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2059,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2059,
          "startTime": "2021-11-03T02:14:02.574Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:14:02.583Z",
              "duration": 990,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:14:02.605Z",
                  "duration": 283,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-11-03T02:14:02.889Z",
                  "duration": 684,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-11-03T02:14:03.574Z",
              "duration": 313,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-11-03T02:14:03.888Z",
              "duration": 200,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-11-03T02:14:04.088Z",
              "duration": 181,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:14:04.269Z",
              "duration": 255,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:14:04.524Z",
              "duration": 109,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:14:04.627Z",
                  "duration": 1,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-b3a3e18698a9fe411a33db80b5c8924fece163a5",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "iphone-8",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 4076,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 4076,
          "startTime": "2021-11-03T02:14:02.640Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:14:02.640Z",
              "duration": 969,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:14:02.669Z",
                  "duration": 207,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-11-03T02:14:02.877Z",
                  "duration": 732,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-11-03T02:14:03.610Z",
              "duration": 793,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-11-03T02:14:03.611Z",
                  "duration": 255,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-11-03T02:14:03.867Z",
                  "duration": 176,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-11-03T02:14:04.043Z",
                  "duration": 188,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:14:04.232Z",
                  "duration": 171,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-11-03T02:14:04.403Z",
              "duration": 311,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-11-03T02:14:04.404Z",
                  "duration": 22,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-11-03T02:14:04.426Z",
                  "duration": 9,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-11-03T02:14:04.436Z",
                  "duration": 112,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-11-03T02:14:04.548Z",
                  "duration": 9,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=0 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-11-03T02:14:04.557Z",
                  "duration": 157,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-11-03T02:14:04.715Z",
              "duration": 911,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-11-03T02:14:04.715Z",
                  "duration": 872,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:14:05.587Z",
                  "duration": 39,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-11-03T02:14:05.626Z",
              "duration": 46,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-11-03T02:14:05.627Z",
                  "duration": 21,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-11-03T02:14:05.649Z",
                  "duration": 6,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-11-03T02:14:05.655Z",
                  "duration": 5,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-11-03T02:14:05.660Z",
                  "duration": 5,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-11-03T02:14:05.666Z",
                  "duration": 0,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:14:05.666Z",
                  "duration": 6,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-11-03T02:14:05.672Z",
              "duration": 106,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-11-03T02:14:05.672Z",
                  "duration": 70,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:14:05.742Z",
                  "duration": 36,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-11-03T02:14:05.778Z",
              "duration": 505,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-11-03T02:14:05.779Z",
                  "duration": 81,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-11-03T02:14:05.861Z",
                  "duration": 78,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-11-03T02:14:05.940Z",
                  "duration": 165,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-11-03T02:14:06.106Z",
                  "duration": 99,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:14:06.206Z",
                  "duration": 77,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-11-03T02:14:06.283Z",
              "duration": 33,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-11-03T02:14:06.284Z",
                  "duration": 5,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:14:06.290Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:14:06.290Z",
                  "duration": 18,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:14:06.309Z",
                  "duration": 7,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-11-03T02:14:06.316Z",
              "duration": 53,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:14:06.317Z",
                  "duration": 16,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:14:06.333Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-11-03T02:14:06.334Z",
                  "duration": 6,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:14:06.341Z",
                  "duration": 6,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:14:06.348Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:14:06.348Z",
                  "duration": 7,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:14:06.355Z",
                  "duration": 6,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-11-03T02:14:06.362Z",
                  "duration": 6,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:14:06.369Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-11-03T02:14:06.369Z",
              "duration": 254,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-11-03T02:14:06.370Z",
                  "duration": 86,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:14:06.456Z",
                  "duration": 116,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:14:06.573Z",
                  "duration": 31,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:14:06.605Z",
                  "duration": 8,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-11-03T02:14:06.613Z",
                  "duration": 10,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:14:06.623Z",
              "duration": 93,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:14:06.714Z",
                  "duration": 1,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-8d8abe146621ffa6547ca1fa734f65233ce8041a",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "pixel-4",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 1811,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 1811,
          "startTime": "2021-11-03T02:15:10.400Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:15:10.401Z",
              "duration": 580,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:15:10.405Z",
                  "duration": 35,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-11-03T02:15:10.440Z",
                  "duration": 541,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-11-03T02:15:10.982Z",
              "duration": 104,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-11-03T02:15:11.086Z",
              "duration": 56,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-11-03T02:15:11.143Z",
              "duration": 142,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:15:11.286Z",
              "duration": 40,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:15:11.326Z",
              "duration": 885,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:15:12.175Z",
                  "duration": 32,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-de9fa7317ee1a442cc5f1090caede700bab41b86",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "pixel-4",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 2429,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2429,
          "startTime": "2021-11-03T02:15:10.848Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:15:10.848Z",
              "duration": 613,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:15:10.853Z",
                  "duration": 39,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-11-03T02:15:10.892Z",
                  "duration": 568,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-11-03T02:15:11.461Z",
              "duration": 340,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-11-03T02:15:11.467Z",
                  "duration": 122,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-11-03T02:15:11.589Z",
                  "duration": 49,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-11-03T02:15:11.638Z",
                  "duration": 138,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:15:11.777Z",
                  "duration": 24,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-11-03T02:15:11.801Z",
              "duration": 98,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-11-03T02:15:11.802Z",
                  "duration": 7,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-name)",
                  "startTime": "2021-11-03T02:15:11.809Z",
                  "duration": 8,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-description)",
                  "startTime": "2021-11-03T02:15:11.817Z",
                  "duration": 6,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-price)",
                  "startTime": "2021-11-03T02:15:11.823Z",
                  "duration": 6,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=2 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-11-03T02:15:11.830Z",
                  "duration": 69,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-11-03T02:15:11.900Z",
              "duration": 728,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-11-03T02:15:11.900Z",
                  "duration": 711,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:15:12.611Z",
                  "duration": 17,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-11-03T02:15:12.629Z",
              "duration": 51,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-11-03T02:15:12.629Z",
                  "duration": 7,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-11-03T02:15:12.637Z",
                  "duration": 6,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-11-03T02:15:12.643Z",
                  "duration": 8,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-11-03T02:15:12.657Z",
                  "duration": 17,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-11-03T02:15:12.674Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:15:12.676Z",
                  "duration": 4,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-11-03T02:15:12.680Z",
              "duration": 36,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-11-03T02:15:12.681Z",
                  "duration": 28,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:15:12.711Z",
                  "duration": 4,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-11-03T02:15:12.716Z",
              "duration": 175,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-11-03T02:15:12.716Z",
                  "duration": 33,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-11-03T02:15:12.750Z",
                  "duration": 25,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-11-03T02:15:12.775Z",
                  "duration": 54,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-11-03T02:15:12.829Z",
                  "duration": 50,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:15:12.880Z",
                  "duration": 11,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-11-03T02:15:12.891Z",
              "duration": 17,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-11-03T02:15:12.892Z",
                  "duration": 2,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:15:12.895Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:15:12.895Z",
                  "duration": 5,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:15:12.900Z",
                  "duration": 8,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-11-03T02:15:12.908Z",
              "duration": 30,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:15:12.909Z",
                  "duration": 9,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:15:12.918Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-11-03T02:15:12.919Z",
                  "duration": 3,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:15:12.923Z",
                  "duration": 4,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:15:12.927Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:15:12.927Z",
                  "duration": 4,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-11-03T02:15:12.931Z",
                  "duration": 3,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-11-03T02:15:12.934Z",
                  "duration": 3,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-11-03T02:15:12.938Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-11-03T02:15:12.938Z",
              "duration": 70,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-11-03T02:15:12.938Z",
                  "duration": 47,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-11-03T02:15:12.986Z",
                  "duration": 8,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:15:12.995Z",
                  "duration": 4,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-11-03T02:15:12.999Z",
                  "duration": 4,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-11-03T02:15:13.004Z",
                  "duration": 4,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:15:13.008Z",
              "duration": 269,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:15:13.246Z",
                  "duration": 28,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    }
  ]
}