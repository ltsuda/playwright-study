{
  "fileId": "417991e8711b5ea9f7111e30f27ed53eac660ff9",
  "fileName": "e2e.spec.js",
  "tests": [
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-e343f1a265e511a7a813144b7eab79f65a92ed93",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "chromium-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2528,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2528,
          "startTime": "2021-10-23T02:18:34.127Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-23T02:18:34.127Z",
              "duration": 664,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-23T02:18:34.131Z",
                  "duration": 43,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-23T02:18:34.175Z",
                  "duration": 616,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-23T02:18:34.792Z",
              "duration": 83,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-23T02:18:34.876Z",
              "duration": 51,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-23T02:18:34.927Z",
              "duration": 209,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-23T02:18:35.137Z",
              "duration": 59,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-23T02:18:35.196Z",
              "duration": 1459,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-23T02:18:36.617Z",
                  "duration": 37,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-c4d8a494cd5f2cbcfab28fb512530ae5bd3b2141",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "chromium-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 4218,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 4218,
          "startTime": "2021-10-23T02:18:35.329Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-23T02:18:35.329Z",
              "duration": 825,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-23T02:18:35.343Z",
                  "duration": 89,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-23T02:18:35.433Z",
                  "duration": 721,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-23T02:18:36.155Z",
              "duration": 611,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-23T02:18:36.156Z",
                  "duration": 200,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-23T02:18:36.357Z",
                  "duration": 75,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-23T02:18:36.432Z",
                  "duration": 236,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:18:36.668Z",
                  "duration": 98,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-23T02:18:36.766Z",
              "duration": 1138,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-23T02:18:36.767Z",
                  "duration": 24,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-23T02:18:36.792Z",
                  "duration": 26,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-23T02:18:36.819Z",
                  "duration": 23,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-23T02:18:36.843Z",
                  "duration": 23,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=0 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-23T02:18:36.867Z",
                  "duration": 1037,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-23T02:18:37.904Z",
              "duration": 797,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-23T02:18:37.904Z",
                  "duration": 771,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:18:38.675Z",
                  "duration": 26,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-23T02:18:38.702Z",
              "duration": 36,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-23T02:18:38.702Z",
                  "duration": 11,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-23T02:18:38.713Z",
                  "duration": 5,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-23T02:18:38.719Z",
                  "duration": 5,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-23T02:18:38.724Z",
                  "duration": 6,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-23T02:18:38.731Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:18:38.732Z",
                  "duration": 6,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-23T02:18:38.738Z",
              "duration": 72,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-23T02:18:38.739Z",
                  "duration": 62,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:18:38.801Z",
                  "duration": 9,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-23T02:18:38.810Z",
              "duration": 345,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-23T02:18:38.810Z",
                  "duration": 78,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-23T02:18:38.888Z",
                  "duration": 58,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-23T02:18:38.947Z",
                  "duration": 110,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-23T02:18:39.057Z",
                  "duration": 86,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:18:39.144Z",
                  "duration": 11,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-23T02:18:39.155Z",
              "duration": 28,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-23T02:18:39.156Z",
                  "duration": 3,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:18:39.160Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:18:39.161Z",
                  "duration": 7,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:18:39.175Z",
                  "duration": 8,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-23T02:18:39.183Z",
              "duration": 69,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:18:39.184Z",
                  "duration": 16,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:18:39.200Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-23T02:18:39.201Z",
                  "duration": 10,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:18:39.212Z",
                  "duration": 9,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:18:39.222Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:18:39.222Z",
                  "duration": 6,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:18:39.229Z",
                  "duration": 7,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-23T02:18:39.239Z",
                  "duration": 13,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:18:39.252Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-23T02:18:39.252Z",
              "duration": 122,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-23T02:18:39.253Z",
                  "duration": 71,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:18:39.325Z",
                  "duration": 23,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:18:39.348Z",
                  "duration": 8,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:18:39.357Z",
                  "duration": 9,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-23T02:18:39.366Z",
                  "duration": 8,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-23T02:18:39.374Z",
              "duration": 173,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-23T02:18:39.522Z",
                  "duration": 24,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-a80ddfa8a04cc2775a98bcd1501438e55eb1bd59",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "chromium-fhd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2159,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2159,
          "startTime": "2021-10-23T02:19:50.765Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-23T02:19:50.765Z",
              "duration": 584,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-23T02:19:50.770Z",
                  "duration": 38,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-23T02:19:50.808Z",
                  "duration": 541,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-23T02:19:51.350Z",
              "duration": 177,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-23T02:19:51.528Z",
              "duration": 82,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-23T02:19:51.611Z",
              "duration": 230,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-23T02:19:51.842Z",
              "duration": 99,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-23T02:19:51.941Z",
              "duration": 983,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-23T02:19:52.912Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-2b02f230ad4a0ea0d39491cc033acce8911e5102",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "chromium-fhd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 3536,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 3536,
          "startTime": "2021-10-23T02:19:51.397Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-23T02:19:51.397Z",
              "duration": 743,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-23T02:19:51.403Z",
                  "duration": 61,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-23T02:19:51.465Z",
                  "duration": 674,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-23T02:19:52.140Z",
              "duration": 454,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-23T02:19:52.142Z",
                  "duration": 118,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-23T02:19:52.260Z",
                  "duration": 75,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-23T02:19:52.336Z",
                  "duration": 213,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:19:52.550Z",
                  "duration": 44,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-23T02:19:52.594Z",
              "duration": 715,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-23T02:19:52.596Z",
                  "duration": 15,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-name)",
                  "startTime": "2021-10-23T02:19:52.612Z",
                  "duration": 13,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-description)",
                  "startTime": "2021-10-23T02:19:52.626Z",
                  "duration": 7,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-price)",
                  "startTime": "2021-10-23T02:19:52.634Z",
                  "duration": 7,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=5 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-23T02:19:52.642Z",
                  "duration": 667,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-23T02:19:53.309Z",
              "duration": 724,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-23T02:19:53.311Z",
                  "duration": 701,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:19:54.012Z",
                  "duration": 21,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-23T02:19:54.033Z",
              "duration": 32,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-23T02:19:54.033Z",
                  "duration": 7,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-23T02:19:54.041Z",
                  "duration": 5,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-23T02:19:54.046Z",
                  "duration": 5,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-23T02:19:54.053Z",
                  "duration": 5,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-23T02:19:54.058Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:19:54.060Z",
                  "duration": 5,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-23T02:19:54.066Z",
              "duration": 49,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-23T02:19:54.066Z",
                  "duration": 37,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:19:54.104Z",
                  "duration": 10,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-23T02:19:54.115Z",
              "duration": 359,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-23T02:19:54.116Z",
                  "duration": 57,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-23T02:19:54.174Z",
                  "duration": 69,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-23T02:19:54.244Z",
                  "duration": 109,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-23T02:19:54.354Z",
                  "duration": 110,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:19:54.465Z",
                  "duration": 9,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-23T02:19:54.474Z",
              "duration": 41,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-23T02:19:54.475Z",
                  "duration": 10,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:19:54.486Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:19:54.486Z",
                  "duration": 8,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:19:54.495Z",
                  "duration": 20,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-23T02:19:54.515Z",
              "duration": 57,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:19:54.516Z",
                  "duration": 7,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:19:54.523Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-23T02:19:54.524Z",
                  "duration": 6,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:19:54.531Z",
                  "duration": 10,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:19:54.541Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:19:54.542Z",
                  "duration": 17,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:19:54.559Z",
                  "duration": 7,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-23T02:19:54.566Z",
                  "duration": 6,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:19:54.572Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-23T02:19:54.573Z",
              "duration": 109,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-23T02:19:54.573Z",
                  "duration": 66,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:19:54.639Z",
                  "duration": 17,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:19:54.657Z",
                  "duration": 11,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:19:54.668Z",
                  "duration": 6,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-23T02:19:54.675Z",
                  "duration": 7,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-23T02:19:54.682Z",
              "duration": 251,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-23T02:19:54.905Z",
                  "duration": 22,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-fbd5680872dae6205a882746d8fe01036dd11e9c",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "chrome-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 1743,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 1743,
          "startTime": "2021-10-23T02:21:01.602Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-23T02:21:01.602Z",
              "duration": 522,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-23T02:21:01.607Z",
                  "duration": 33,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-23T02:21:01.641Z",
                  "duration": 483,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-23T02:21:02.125Z",
              "duration": 143,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-23T02:21:02.269Z",
              "duration": 135,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-23T02:21:02.405Z",
              "duration": 142,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-23T02:21:02.548Z",
              "duration": 51,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-23T02:21:02.599Z",
              "duration": 746,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-23T02:21:03.332Z",
                  "duration": 13,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-264ec1e944800d91f600b0bd35e70c675523778b",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "chrome-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 3287,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 3287,
          "startTime": "2021-10-23T02:21:02.108Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-23T02:21:02.108Z",
              "duration": 708,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-23T02:21:02.116Z",
                  "duration": 64,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-23T02:21:02.180Z",
                  "duration": 635,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-23T02:21:02.816Z",
              "duration": 354,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-23T02:21:02.820Z",
                  "duration": 93,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-23T02:21:02.914Z",
                  "duration": 54,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-23T02:21:02.969Z",
                  "duration": 159,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:21:03.130Z",
                  "duration": 40,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-23T02:21:03.170Z",
              "duration": 762,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-23T02:21:03.171Z",
                  "duration": 7,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-name)",
                  "startTime": "2021-10-23T02:21:03.179Z",
                  "duration": 6,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-description)",
                  "startTime": "2021-10-23T02:21:03.186Z",
                  "duration": 5,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-price)",
                  "startTime": "2021-10-23T02:21:03.192Z",
                  "duration": 12,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=2 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-23T02:21:03.205Z",
                  "duration": 727,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-23T02:21:03.932Z",
              "duration": 686,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-23T02:21:03.933Z",
                  "duration": 666,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:21:04.600Z",
                  "duration": 18,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-23T02:21:04.619Z",
              "duration": 83,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-23T02:21:04.620Z",
                  "duration": 18,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-23T02:21:04.639Z",
                  "duration": 10,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-23T02:21:04.649Z",
                  "duration": 16,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-23T02:21:04.665Z",
                  "duration": 7,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-23T02:21:04.673Z",
                  "duration": 0,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:21:04.673Z",
                  "duration": 29,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-23T02:21:04.702Z",
              "duration": 104,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-23T02:21:04.703Z",
                  "duration": 94,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:21:04.798Z",
                  "duration": 8,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-23T02:21:04.806Z",
              "duration": 247,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-23T02:21:04.807Z",
                  "duration": 42,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-23T02:21:04.850Z",
                  "duration": 39,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-23T02:21:04.890Z",
                  "duration": 93,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-23T02:21:04.984Z",
                  "duration": 61,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:21:05.046Z",
                  "duration": 7,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-23T02:21:05.053Z",
              "duration": 29,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-23T02:21:05.053Z",
                  "duration": 3,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:21:05.057Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:21:05.058Z",
                  "duration": 8,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:21:05.075Z",
                  "duration": 7,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-23T02:21:05.083Z",
              "duration": 40,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:21:05.083Z",
                  "duration": 7,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:21:05.090Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-23T02:21:05.091Z",
                  "duration": 6,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:21:05.097Z",
                  "duration": 6,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:21:05.103Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:21:05.104Z",
                  "duration": 5,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:21:05.110Z",
                  "duration": 5,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-23T02:21:05.115Z",
                  "duration": 7,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:21:05.123Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-23T02:21:05.123Z",
              "duration": 130,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-23T02:21:05.124Z",
                  "duration": 69,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:21:05.193Z",
                  "duration": 34,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:21:05.228Z",
                  "duration": 7,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:21:05.235Z",
                  "duration": 8,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-23T02:21:05.244Z",
                  "duration": 9,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-23T02:21:05.254Z",
              "duration": 141,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-23T02:21:05.372Z",
                  "duration": 22,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-e8005426fe26fe4bd8eab3a419584d64289c9a2c",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "firefox-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 3450,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 3450,
          "startTime": "2021-10-23T02:22:19.890Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-23T02:22:19.890Z",
              "duration": 1418,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-23T02:22:19.930Z",
                  "duration": 346,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-23T02:22:20.277Z",
                  "duration": 1031,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-23T02:22:21.309Z",
              "duration": 380,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-23T02:22:21.690Z",
              "duration": 196,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-23T02:22:21.887Z",
              "duration": 221,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-23T02:22:22.108Z",
              "duration": 430,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-23T02:22:22.538Z",
              "duration": 802,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-23T02:22:23.289Z",
                  "duration": 50,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-03831aaa019090ed8eeede25f25dfa9823d8be46",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "firefox-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 5410,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 5410,
          "startTime": "2021-10-23T02:22:19.907Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-23T02:22:19.907Z",
              "duration": 1473,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-23T02:22:19.944Z",
                  "duration": 412,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-23T02:22:20.357Z",
                  "duration": 1023,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-23T02:22:21.381Z",
              "duration": 1338,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-23T02:22:21.383Z",
                  "duration": 334,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-23T02:22:21.718Z",
                  "duration": 243,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-23T02:22:21.961Z",
                  "duration": 375,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:22:22.337Z",
                  "duration": 382,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-23T02:22:22.719Z",
              "duration": 656,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-23T02:22:22.720Z",
                  "duration": 90,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-name)",
                  "startTime": "2021-10-23T02:22:22.811Z",
                  "duration": 57,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-description)",
                  "startTime": "2021-10-23T02:22:22.869Z",
                  "duration": 251,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-price)",
                  "startTime": "2021-10-23T02:22:23.120Z",
                  "duration": 138,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=5 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-23T02:22:23.259Z",
                  "duration": 116,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-23T02:22:23.375Z",
              "duration": 818,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-23T02:22:23.376Z",
                  "duration": 624,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:22:24.000Z",
                  "duration": 193,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-23T02:22:24.193Z",
              "duration": 89,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-23T02:22:24.194Z",
                  "duration": 22,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-23T02:22:24.217Z",
                  "duration": 14,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-23T02:22:24.231Z",
                  "duration": 12,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-23T02:22:24.244Z",
                  "duration": 16,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-23T02:22:24.260Z",
                  "duration": 2,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:22:24.262Z",
                  "duration": 20,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-23T02:22:24.282Z",
              "duration": 132,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-23T02:22:24.282Z",
                  "duration": 107,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:22:24.390Z",
                  "duration": 24,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-23T02:22:24.415Z",
              "duration": 465,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-23T02:22:24.415Z",
                  "duration": 112,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-23T02:22:24.528Z",
                  "duration": 86,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-23T02:22:24.615Z",
                  "duration": 162,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-23T02:22:24.778Z",
                  "duration": 79,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:22:24.858Z",
                  "duration": 22,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-23T02:22:24.881Z",
              "duration": 65,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-23T02:22:24.881Z",
                  "duration": 9,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:22:24.891Z",
                  "duration": 1,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:22:24.892Z",
                  "duration": 14,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:22:24.908Z",
                  "duration": 38,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-23T02:22:24.947Z",
              "duration": 79,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:22:24.948Z",
                  "duration": 11,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:22:24.960Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-23T02:22:24.960Z",
                  "duration": 13,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:22:24.974Z",
                  "duration": 11,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:22:24.985Z",
                  "duration": 1,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:22:24.987Z",
                  "duration": 11,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:22:24.999Z",
                  "duration": 11,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-23T02:22:25.011Z",
                  "duration": 14,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:22:25.026Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-23T02:22:25.026Z",
              "duration": 189,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-23T02:22:25.027Z",
                  "duration": 77,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:22:25.105Z",
                  "duration": 26,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:22:25.132Z",
                  "duration": 29,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:22:25.162Z",
                  "duration": 37,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-23T02:22:25.200Z",
                  "duration": 15,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-23T02:22:25.215Z",
              "duration": 102,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-23T02:22:25.290Z",
                  "duration": 25,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-c0eec8562fc3a40e1b22e4591749aca6683389a7",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "webkit-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2346,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2346,
          "startTime": "2021-10-23T02:23:52.536Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-23T02:23:52.536Z",
              "duration": 954,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-23T02:23:52.545Z",
                  "duration": 179,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-23T02:23:52.725Z",
                  "duration": 765,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-23T02:23:53.491Z",
              "duration": 254,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-23T02:23:53.745Z",
              "duration": 363,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-23T02:23:54.108Z",
              "duration": 236,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-23T02:23:54.344Z",
              "duration": 346,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-23T02:23:54.690Z",
              "duration": 192,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-23T02:23:54.878Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-25fa9a9c4b86241d5284c9158e60ca1279141fa0",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "webkit-hd",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 4884,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 4884,
          "startTime": "2021-10-23T02:23:52.756Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-23T02:23:52.756Z",
              "duration": 1123,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-23T02:23:52.793Z",
                  "duration": 294,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-23T02:23:53.087Z",
                  "duration": 791,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-23T02:23:53.879Z",
              "duration": 1288,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-23T02:23:53.880Z",
                  "duration": 261,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-23T02:23:54.142Z",
                  "duration": 275,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-23T02:23:54.418Z",
                  "duration": 201,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:23:54.620Z",
                  "duration": 547,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-23T02:23:55.167Z",
              "duration": 339,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-23T02:23:55.167Z",
                  "duration": 88,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-name)",
                  "startTime": "2021-10-23T02:23:55.255Z",
                  "duration": 116,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-description)",
                  "startTime": "2021-10-23T02:23:55.372Z",
                  "duration": 48,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-price)",
                  "startTime": "2021-10-23T02:23:55.421Z",
                  "duration": 23,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=3 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-23T02:23:55.445Z",
                  "duration": 61,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-23T02:23:55.506Z",
              "duration": 773,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-23T02:23:55.507Z",
                  "duration": 753,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:23:56.260Z",
                  "duration": 19,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-23T02:23:56.279Z",
              "duration": 62,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-23T02:23:56.280Z",
                  "duration": 10,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-23T02:23:56.291Z",
                  "duration": 22,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-23T02:23:56.313Z",
                  "duration": 8,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-23T02:23:56.322Z",
                  "duration": 11,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-23T02:23:56.333Z",
                  "duration": 0,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:23:56.334Z",
                  "duration": 7,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-23T02:23:56.342Z",
              "duration": 105,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-23T02:23:56.342Z",
                  "duration": 77,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:23:56.419Z",
                  "duration": 28,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-23T02:23:56.447Z",
              "duration": 626,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-23T02:23:56.448Z",
                  "duration": 126,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-23T02:23:56.575Z",
                  "duration": 75,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-23T02:23:56.651Z",
                  "duration": 235,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-23T02:23:56.886Z",
                  "duration": 123,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:23:57.009Z",
                  "duration": 64,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-23T02:23:57.073Z",
              "duration": 66,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-23T02:23:57.074Z",
                  "duration": 5,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:23:57.079Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:23:57.080Z",
                  "duration": 33,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:23:57.114Z",
                  "duration": 25,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-23T02:23:57.139Z",
              "duration": 158,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:23:57.140Z",
                  "duration": 14,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:23:57.154Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-23T02:23:57.155Z",
                  "duration": 23,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:23:57.179Z",
                  "duration": 30,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:23:57.210Z",
                  "duration": 2,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:23:57.212Z",
                  "duration": 16,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:23:57.229Z",
                  "duration": 40,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-23T02:23:57.271Z",
                  "duration": 22,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:23:57.294Z",
                  "duration": 3,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-23T02:23:57.300Z",
              "duration": 272,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-23T02:23:57.301Z",
                  "duration": 159,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:23:57.461Z",
                  "duration": 50,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:23:57.511Z",
                  "duration": 26,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:23:57.537Z",
                  "duration": 19,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-23T02:23:57.557Z",
                  "duration": 15,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-23T02:23:57.572Z",
              "duration": 68,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-23T02:23:57.635Z",
                  "duration": 4,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-a810ff1211f630c880652f640ff4dad42163aa03",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "iphone-8",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2030,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2030,
          "startTime": "2021-10-23T02:25:12.623Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-23T02:25:12.623Z",
              "duration": 987,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-23T02:25:12.635Z",
                  "duration": 187,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-23T02:25:12.823Z",
                  "duration": 786,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-23T02:25:13.611Z",
              "duration": 307,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-23T02:25:13.919Z",
              "duration": 120,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-23T02:25:14.039Z",
              "duration": 151,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-23T02:25:14.190Z",
              "duration": 339,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-23T02:25:14.529Z",
              "duration": 124,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-23T02:25:14.650Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-b3a3e18698a9fe411a33db80b5c8924fece163a5",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "iphone-8",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 4834,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 4834,
          "startTime": "2021-10-23T02:25:13.033Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-23T02:25:13.033Z",
              "duration": 1244,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-23T02:25:13.059Z",
                  "duration": 258,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-23T02:25:13.318Z",
                  "duration": 959,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-23T02:25:14.278Z",
              "duration": 911,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-23T02:25:14.279Z",
                  "duration": 275,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-23T02:25:14.555Z",
                  "duration": 223,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-23T02:25:14.779Z",
                  "duration": 189,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:25:14.968Z",
                  "duration": 221,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-23T02:25:15.189Z",
              "duration": 368,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-23T02:25:15.190Z",
                  "duration": 48,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-name)",
                  "startTime": "2021-10-23T02:25:15.239Z",
                  "duration": 23,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-description)",
                  "startTime": "2021-10-23T02:25:15.263Z",
                  "duration": 87,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-price)",
                  "startTime": "2021-10-23T02:25:15.350Z",
                  "duration": 27,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=1 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-23T02:25:15.378Z",
                  "duration": 179,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-23T02:25:15.557Z",
              "duration": 839,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-23T02:25:15.558Z",
                  "duration": 801,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:25:16.360Z",
                  "duration": 36,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-23T02:25:16.397Z",
              "duration": 62,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-23T02:25:16.397Z",
                  "duration": 11,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-23T02:25:16.409Z",
                  "duration": 12,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-23T02:25:16.421Z",
                  "duration": 19,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-23T02:25:16.441Z",
                  "duration": 7,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-23T02:25:16.449Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:25:16.451Z",
                  "duration": 7,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-23T02:25:16.459Z",
              "duration": 104,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-23T02:25:16.459Z",
                  "duration": 75,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:25:16.534Z",
                  "duration": 29,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-23T02:25:16.563Z",
              "duration": 819,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-23T02:25:16.564Z",
                  "duration": 181,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-23T02:25:16.745Z",
                  "duration": 87,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-23T02:25:16.833Z",
                  "duration": 292,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-23T02:25:17.126Z",
                  "duration": 160,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:25:17.287Z",
                  "duration": 95,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-23T02:25:17.382Z",
              "duration": 90,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-23T02:25:17.383Z",
                  "duration": 29,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:25:17.413Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:25:17.414Z",
                  "duration": 34,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:25:17.456Z",
                  "duration": 16,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-23T02:25:17.472Z",
              "duration": 90,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:25:17.473Z",
                  "duration": 9,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:25:17.482Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-23T02:25:17.483Z",
                  "duration": 7,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:25:17.491Z",
                  "duration": 26,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:25:17.518Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:25:17.518Z",
                  "duration": 9,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:25:17.528Z",
                  "duration": 23,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-23T02:25:17.552Z",
                  "duration": 10,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:25:17.562Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-23T02:25:17.562Z",
              "duration": 221,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-23T02:25:17.563Z",
                  "duration": 90,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:25:17.653Z",
                  "duration": 61,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:25:17.715Z",
                  "duration": 13,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:25:17.728Z",
                  "duration": 32,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-23T02:25:17.760Z",
                  "duration": 22,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-23T02:25:17.783Z",
              "duration": 84,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-23T02:25:17.863Z",
                  "duration": 4,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-8d8abe146621ffa6547ca1fa734f65233ce8041a",
      "title": "User should be able to login with a valid credentials @e2e-login",
      "projectName": "pixel-4",
      "location": {
        "file": "e2e.spec.js",
        "line": 10,
        "column": 5
      },
      "duration": 2307,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:10",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 2307,
          "startTime": "2021-10-23T02:26:31.327Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-23T02:26:31.327Z",
              "duration": 740,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-23T02:26:31.333Z",
                  "duration": 53,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-23T02:26:31.387Z",
                  "duration": 679,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "locator.type(data-test=input-username, standard_user)",
              "startTime": "2021-10-23T02:26:32.067Z",
              "duration": 219,
              "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 61,
                "column": 32
              }
            },
            {
              "title": "locator.type(data-test=input-password, secret_sauce)",
              "startTime": "2021-10-23T02:26:32.287Z",
              "duration": 62,
              "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 69,
                "column": 32
              }
            },
            {
              "title": "locator.click(data-test=button-login)",
              "startTime": "2021-10-23T02:26:32.350Z",
              "duration": 149,
              "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/login/controller.js",
                "line": 77,
                "column": 29
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-23T02:26:32.500Z",
              "duration": 64,
              "snippet": "  15 |         await loginController.loginWithStandardUser()\n  16 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                            ^\n  17 |     })",
              "steps": [],
              "location": {
                "file": "e2e.spec.js",
                "line": 16,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-23T02:26:32.564Z",
              "duration": 1070,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-23T02:26:33.584Z",
                  "duration": 41,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "417991e8711b5ea9f7111e30f27ed53eac660ff9-de9fa7317ee1a442cc5f1090caede700bab41b86",
      "title": "User should be able to complete a purchase @e2e-purchase",
      "projectName": "pixel-4",
      "location": {
        "file": "e2e.spec.js",
        "line": 19,
        "column": 5
      },
      "duration": 3232,
      "outcome": "expected",
      "path": [
        "e2e.spec.js:19",
        "Saucedemo E2E: @e2e"
      ],
      "results": [
        {
          "duration": 3232,
          "startTime": "2021-10-23T02:26:31.875Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-23T02:26:31.876Z",
              "duration": 798,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-23T02:26:31.884Z",
                  "duration": 84,
                  "steps": []
                },
                {
                  "title": "page.goto(http://localhost:3000)",
                  "startTime": "2021-10-23T02:26:31.968Z",
                  "duration": 705,
                  "snippet": "   6 |     test.beforeEach(async ({ baseURL, page }) => {\n   7 |         await page.goto(baseURL)\n     |                    ^\n   8 |     })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 7,
                    "column": 20
                  }
                }
              ]
            },
            {
              "title": "User login with valid credential",
              "startTime": "2021-10-23T02:26:32.674Z",
              "duration": 455,
              "snippet": "  31 |\n  32 |         await test.step(\"User login with valid credential\", async () => {\n     |                    ^\n  33 |             await loginController.loginWithStandardUser()",
              "steps": [
                {
                  "title": "locator.type(data-test=input-username, standard_user)",
                  "startTime": "2021-10-23T02:26:32.676Z",
                  "duration": 127,
                  "snippet": "   60 |         const usernameSelector = this.components.usernameInput()\n   61 |         await usernameSelector.type(username)\n      |                                ^\n   62 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 61,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-password, secret_sauce)",
                  "startTime": "2021-10-23T02:26:32.804Z",
                  "duration": 79,
                  "snippet": "   68 |         const passwordSelector = this.components.passwordInput()\n   69 |         await passwordSelector.type(password)\n      |                                ^\n   70 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 69,
                    "column": 32
                  }
                },
                {
                  "title": "locator.click(data-test=button-login)",
                  "startTime": "2021-10-23T02:26:32.883Z",
                  "duration": 183,
                  "snippet": "   76 |         const loginSelector = this.components.loginButton()\n   77 |         await loginSelector.click()\n      |                             ^\n   78 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/login/controller.js",
                    "line": 77,
                    "column": 29
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:26:33.068Z",
                  "duration": 61,
                  "snippet": "  33 |             await loginController.loginWithStandardUser()\n  34 |             await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n     |                                ^\n  35 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 34,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 32,
                "column": 20
              }
            },
            {
              "title": "user login with valid credential",
              "startTime": "2021-10-23T02:26:33.129Z",
              "duration": 204,
              "snippet": "  36 |\n  37 |         await test.step(\"user login with valid credential\", async () => {\n     |                    ^\n  38 |             item = await inventoryItemController.addRandomItemToCart()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-23T02:26:33.130Z",
                  "duration": 13,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-name)",
                  "startTime": "2021-10-23T02:26:33.144Z",
                  "duration": 14,
                  "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 124,
                    "column": 83
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-description)",
                  "startTime": "2021-10-23T02:26:33.158Z",
                  "duration": 9,
                  "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 125,
                    "column": 97
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-price)",
                  "startTime": "2021-10-23T02:26:33.168Z",
                  "duration": 7,
                  "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 126,
                    "column": 83
                  }
                },
                {
                  "title": "locator.click(data-test=inventory-item >> nth=4 >> [data-test^='button-add-to-cart'])",
                  "startTime": "2021-10-23T02:26:33.176Z",
                  "duration": 157,
                  "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 130,
                    "column": 25
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 37,
                "column": 20
              }
            },
            {
              "title": "navigate to cart",
              "startTime": "2021-10-23T02:26:33.333Z",
              "duration": 862,
              "snippet": "  40 |\n  41 |         await test.step(\"navigate to cart\", async () => {\n     |                    ^\n  42 |             await cartController.navigate()",
              "steps": [
                {
                  "title": "page.goto(/cart.html)",
                  "startTime": "2021-10-23T02:26:33.334Z",
                  "duration": 834,
                  "snippet": "  27 |     async navigate() {\n  28 |         await this.page.goto(PAGES.CART, { waitUntil: \"networkidle\" })\n     |                         ^\n  29 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 28,
                    "column": 25
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:26:34.168Z",
                  "duration": 27,
                  "snippet": "  42 |             await cartController.navigate()\n  43 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CART}`)\n     |                                ^\n  44 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 43,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 41,
                "column": 20
              }
            },
            {
              "title": "validate item in cart is the same as the one added from invetory",
              "startTime": "2021-10-23T02:26:34.195Z",
              "duration": 40,
              "snippet": "  45 |\n  46 |         await test.step(\"validate item in cart is the same as the one added from invetory\", async () => {\n     |                    ^\n  47 |             const cartItems = await inventoryItemController.getItemsObject()",
              "steps": [
                {
                  "title": "locator.count(data-test=inventory-item)",
                  "startTime": "2021-10-23T02:26:34.196Z",
                  "duration": 12,
                  "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 46,
                    "column": 35
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
                  "startTime": "2021-10-23T02:26:34.209Z",
                  "duration": 6,
                  "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 95,
                    "column": 59
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
                  "startTime": "2021-10-23T02:26:34.216Z",
                  "duration": 4,
                  "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 96,
                    "column": 66
                  }
                },
                {
                  "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
                  "startTime": "2021-10-23T02:26:34.221Z",
                  "duration": 6,
                  "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 97,
                    "column": 59
                  }
                },
                {
                  "title": "expect.toStrictEqual",
                  "startTime": "2021-10-23T02:26:34.228Z",
                  "duration": 1,
                  "snippet": "  47 |             const cartItems = await inventoryItemController.getItemsObject()\n  48 |             expect(cartItems[0]).toStrictEqual(item)\n     |                                  ^\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 48,
                    "column": 34
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:26:34.229Z",
                  "duration": 6,
                  "snippet": "  48 |             expect(cartItems[0]).toStrictEqual(item)\n  49 |             await expect(await navigationBarController.components.cartBadgeText()).toHaveText(String(cartItems.length))\n     |                                                                                    ^\n  50 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 49,
                    "column": 84
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 46,
                "column": 20
              }
            },
            {
              "title": "navigate to checkout",
              "startTime": "2021-10-23T02:26:34.236Z",
              "duration": 46,
              "snippet": "  51 |\n  52 |         await test.step(\"navigate to checkout\", async () => {\n     |                    ^\n  53 |             await cartController.navigateToCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-checkout)",
                  "startTime": "2021-10-23T02:26:34.236Z",
                  "duration": 39,
                  "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/cart/controller.js",
                    "line": 52,
                    "column": 30
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:26:34.276Z",
                  "duration": 6,
                  "snippet": "  53 |             await cartController.navigateToCheckout()\n  54 |             await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n     |                                ^\n  55 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 54,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 52,
                "column": 20
              }
            },
            {
              "title": "fill in checkout's personal information and continue",
              "startTime": "2021-10-23T02:26:34.282Z",
              "duration": 225,
              "snippet": "  56 |\n  57 |         await test.step(\"fill in checkout's personal information and continue\", async () => {\n     |                    ^\n  58 |             await checkoutController.fillFirstName(PERSONAL_INFO.USER1.FIRST_NAME)",
              "steps": [
                {
                  "title": "locator.type(data-test=input-first-name, John)",
                  "startTime": "2021-10-23T02:26:34.283Z",
                  "duration": 39,
                  "snippet": "  59 |         const firstNameElement = this.components.firstNameInput()\n  60 |         await firstNameElement.type(firstName)\n     |                                ^\n  61 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 60,
                    "column": 32
                  }
                },
                {
                  "title": "locator.type(data-test=input-last-name, Doe)",
                  "startTime": "2021-10-23T02:26:34.323Z",
                  "duration": 31,
                  "snippet": "  67 |         const lastNameElement = this.components.lastNameInput()\n  68 |         await lastNameElement.type(lastName)\n     |                               ^\n  69 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 68,
                    "column": 31
                  }
                },
                {
                  "title": "locator.type(data-test=input-postal-code, 555-5555)",
                  "startTime": "2021-10-23T02:26:34.355Z",
                  "duration": 74,
                  "snippet": "  75 |         const postalCodeElement = this.components.postalCodeInput()\n  76 |         await postalCodeElement.type(postalCode)\n     |                                 ^\n  77 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 76,
                    "column": 33
                  }
                },
                {
                  "title": "locator.click(data-test=button-continue)",
                  "startTime": "2021-10-23T02:26:34.430Z",
                  "duration": 64,
                  "snippet": "  51 |         const continueElement = this.components.continueButton()\n  52 |         await continueElement.click()\n     |                               ^\n  53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/checkout/controller.js",
                    "line": 52,
                    "column": 31
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:26:34.495Z",
                  "duration": 12,
                  "snippet": "  61 |             await checkoutController.continueCheckout()\n  62 |             await expect(page).toHaveURL(`${baseURL}${PAGES.OVERVIEW}`)\n     |                                ^\n  63 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 62,
                    "column": 32
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 57,
                "column": 20
              }
            },
            {
              "title": "validate item, payment and shipping information",
              "startTime": "2021-10-23T02:26:34.507Z",
              "duration": 23,
              "snippet": "  64 |\n  65 |         await test.step(\"validate item, payment and shipping information\", async () => {\n     |                    ^\n  66 |             const overviewItems = await inventoryItemController.getNames()",
              "steps": [
                {
                  "title": "locator.allInnerTexts(data-test=inventory-item >> data-test=item-name)",
                  "startTime": "2021-10-23T02:26:34.508Z",
                  "duration": 4,
                  "snippet": "   54 |         const namesLocator = this.components.names()\n   55 |         return await namesLocator.allInnerTexts()\n      |                                   ^\n   56 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/inventoryItem/controller.js",
                    "line": 55,
                    "column": 35
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:26:34.512Z",
                  "duration": 0,
                  "snippet": "  66 |             const overviewItems = await inventoryItemController.getNames()\n  67 |             expect(overviewItems[0]).toBe(item.name)\n     |                                      ^\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 67,
                    "column": 38
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:26:34.513Z",
                  "duration": 6,
                  "snippet": "  67 |             expect(overviewItems[0]).toBe(item.name)\n  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n     |                                                                                 ^\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 68,
                    "column": 81
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:26:34.521Z",
                  "duration": 9,
                  "snippet": "  68 |             await expect(await overviewController.components.paymentInfoText()).toHaveText(MESSAGES.OVERVIEW_CARD)\n  69 |             await expect(await overviewController.components.shippingInfoText()).toHaveText(MESSAGES.OVERVIEW_SHIPMENT)\n     |                                                                                  ^\n  70 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 69,
                    "column": 82
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 65,
                "column": 20
              }
            },
            {
              "title": "validate subtotal, tax and total prices",
              "startTime": "2021-10-23T02:26:34.531Z",
              "duration": 38,
              "snippet": "  71 |\n  72 |         await test.step(\"validate subtotal, tax and total prices\", async () => {\n     |                    ^\n  73 |             const subtotal = await overviewController.getSubtotal()",
              "steps": [
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:26:34.531Z",
                  "duration": 5,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:26:34.537Z",
                  "duration": 0,
                  "snippet": "  73 |             const subtotal = await overviewController.getSubtotal()\n  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n     |                                      ^\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 74,
                    "column": 38
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-tax)",
                  "startTime": "2021-10-23T02:26:34.537Z",
                  "duration": 5,
                  "snippet": "   71 |         const taxElement = this.components.taxText()\n   72 |         let tax = await taxElement.innerText()\n      |                                    ^\n   73 |         tax = parseFloat(tax.replace(\"Tax: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 72,
                    "column": 36
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:26:34.543Z",
                  "duration": 7,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:26:34.551Z",
                  "duration": 0,
                  "snippet": "  74 |             expect(String(subtotal)).toBe(parseFloat(item.price).toFixed(2))\n  75 |             expect(await overviewController.getTax()).toBe(await overviewController.calculateTax())\n     |                                                       ^\n  76 |             const calculatedTotal = await overviewController.calculateTotal()",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 75,
                    "column": 55
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:26:34.552Z",
                  "duration": 6,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-subtotal)",
                  "startTime": "2021-10-23T02:26:34.558Z",
                  "duration": 5,
                  "snippet": "   60 |         const subtotalElement = this.components.subtotalText()\n   61 |         let subtotal = await subtotalElement.innerText()\n      |                                              ^\n   62 |         subtotal = parseFloat(subtotal.replace(\"Item total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 61,
                    "column": 46
                  }
                },
                {
                  "title": "locator.innerText(data-test=label-total)",
                  "startTime": "2021-10-23T02:26:34.563Z",
                  "duration": 5,
                  "snippet": "   82 |         const priceElement = this.components.totalPriceText()\n   83 |         let total = await priceElement.innerText()\n      |                                        ^\n   84 |         total = parseFloat(total.replace(\"Total: $\", \"\"))",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 83,
                    "column": 40
                  }
                },
                {
                  "title": "expect.toBe",
                  "startTime": "2021-10-23T02:26:34.569Z",
                  "duration": 0,
                  "snippet": "  77 |             const totalFromPage = await overviewController.getTotalPrice()\n  78 |             expect(String(totalFromPage)).toBe(calculatedTotal.toFixed(2))\n     |                                           ^\n  79 |         })",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 78,
                    "column": 43
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 72,
                "column": 20
              }
            },
            {
              "title": "finish purchase and validate completion page",
              "startTime": "2021-10-23T02:26:34.569Z",
              "duration": 94,
              "snippet": "  80 |\n  81 |         await test.step(\"finish purchase and validate completion page\", async () => {\n     |                    ^\n  82 |             await overviewController.finishCheckout()",
              "steps": [
                {
                  "title": "locator.click(data-test=button-finish)",
                  "startTime": "2021-10-23T02:26:34.570Z",
                  "duration": 65,
                  "snippet": "   51 |         const finishCheckoutButton = this.components.finishCheckoutButton()\n   52 |         await finishCheckoutButton.click()\n      |                                    ^\n   53 |     }",
                  "steps": [],
                  "location": {
                    "file": "../saucedemo/pages/overview/controller.js",
                    "line": 52,
                    "column": 36
                  }
                },
                {
                  "title": "expect.toHaveURL",
                  "startTime": "2021-10-23T02:26:34.635Z",
                  "duration": 8,
                  "snippet": "  82 |             await overviewController.finishCheckout()\n  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n     |                                ^\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 83,
                    "column": 32
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:26:34.644Z",
                  "duration": 7,
                  "snippet": "  83 |             await expect(page).toHaveURL(`${baseURL}${PAGES.COMPLETED}`)\n  84 |             await expect(await completedController.components.completedHeaderText()).toHaveText(\n     |                                                                                      ^\n  85 |                 MESSAGES.COMPLETED_THANKS",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 84,
                    "column": 86
                  }
                },
                {
                  "title": "expect.toHaveText",
                  "startTime": "2021-10-23T02:26:34.651Z",
                  "duration": 6,
                  "snippet": "  86 |             )\n  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n     |                                                                                ^\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 87,
                    "column": 80
                  }
                },
                {
                  "title": "expect.toHaveAttribute",
                  "startTime": "2021-10-23T02:26:34.658Z",
                  "duration": 5,
                  "snippet": "  87 |             await expect(await completedController.components.completedText()).toHaveText(MESSAGES.COMPLETED_DISPATCH)\n  88 |             await expect(await completedController.components.completedImage()).toHaveAttribute(\n     |                                                                                 ^\n  89 |                 \"src\",",
                  "steps": [],
                  "location": {
                    "file": "e2e.spec.js",
                    "line": 88,
                    "column": 81
                  }
                }
              ],
              "location": {
                "file": "e2e.spec.js",
                "line": 81,
                "column": 20
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-23T02:26:34.663Z",
              "duration": 444,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-23T02:26:35.077Z",
                  "duration": 30,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    }
  ]
}