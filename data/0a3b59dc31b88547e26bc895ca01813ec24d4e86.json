{
  "fileId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86",
  "fileName": "cart.spec.js",
  "tests": [
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-d47794ad39f9ea3a3d25632935105b90646e372f",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 15585,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 15585,
          "startTime": "2021-11-03T02:07:45.697Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:07:45.707Z",
              "duration": 548,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:07:46.114Z",
                  "duration": 135,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:07:46.256Z",
              "duration": 13254,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:07:59.511Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:07:59.518Z",
              "duration": 699,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-11-03T02:08:00.218Z",
              "duration": 170,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:08:00.390Z",
              "duration": 42,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:08:00.432Z",
              "duration": 850,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:08:01.274Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-acc42b565a7ff1aa51921548ffa11f08922bf6c6",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 14345,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 14345,
          "startTime": "2021-11-03T02:07:46.138Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:07:46.143Z",
              "duration": 483,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:07:46.534Z",
                  "duration": 92,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:07:46.633Z",
              "duration": 12895,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:07:59.529Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:07:59.538Z",
              "duration": 682,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-11-03T02:08:00.221Z",
              "duration": 94,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:08:00.317Z",
              "duration": 35,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:08:00.352Z",
              "duration": 131,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:08:00.469Z",
                  "duration": 14,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2544c0fc77e1836caef577646df5f7b78b5a8c88",
      "title": "should match cart badge with items in cart",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 1973,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1973,
          "startTime": "2021-11-03T02:08:00.485Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:08:00.485Z",
              "duration": 62,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:08:00.498Z",
                  "duration": 48,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:08:00.547Z",
              "duration": 1011,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:08:01.559Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:08:01.565Z",
              "duration": 750,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:08:02.316Z",
              "duration": 25,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:08:02.342Z",
              "duration": 13,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:08:02.355Z",
              "duration": 103,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:08:02.445Z",
                  "duration": 12,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-41e5c20c00860b46369bdbe6f7375aa014a99f3f",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2110,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2110,
          "startTime": "2021-11-03T02:08:01.284Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:08:01.284Z",
              "duration": 49,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:08:01.296Z",
                  "duration": 36,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:08:01.333Z",
              "duration": 971,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:08:02.305Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-11-03T02:08:02.309Z",
              "duration": 831,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:08:03.142Z",
              "duration": 13,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-name)",
              "startTime": "2021-11-03T02:08:03.156Z",
              "duration": 10,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-description)",
              "startTime": "2021-11-03T02:08:03.166Z",
              "duration": 5,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-price)",
              "startTime": "2021-11-03T02:08:03.171Z",
              "duration": 5,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=3 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-11-03T02:08:03.176Z",
              "duration": 30,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-11-03T02:08:03.208Z",
              "duration": 58,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:08:03.267Z",
              "duration": 4,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-11-03T02:08:03.271Z",
              "duration": 4,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-11-03T02:08:03.275Z",
              "duration": 4,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-11-03T02:08:03.280Z",
              "duration": 9,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-11-03T02:08:03.290Z",
              "duration": 0,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:08:03.290Z",
              "duration": 104,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:08:03.387Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-93777b7ecb90198a542835731e41677657e138dd",
      "title": "should be possible to remove product from cart",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 2031,
      "outcome": "expected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2031,
          "startTime": "2021-11-03T02:08:02.458Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:08:02.458Z",
              "duration": 101,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:08:02.468Z",
                  "duration": 91,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:08:02.559Z",
              "duration": 1028,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:08:03.587Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:08:03.593Z",
              "duration": 701,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:08:04.294Z",
              "duration": 18,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-11-03T02:08:04.312Z",
              "duration": 44,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-11-03T02:08:04.356Z",
              "duration": 9,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:08:04.365Z",
              "duration": 124,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:08:04.476Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2c17457a7770b4cbf5dc3c491ddc4caf36b01f7d",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 1936,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1936,
          "startTime": "2021-11-03T02:08:03.395Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:08:03.395Z",
              "duration": 49,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:08:03.400Z",
                  "duration": 44,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:08:03.444Z",
              "duration": 973,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:08:04.418Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:08:04.422Z",
              "duration": 716,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:08:05.139Z",
              "duration": 70,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-11-03T02:08:05.209Z",
              "duration": 7,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:08:05.216Z",
              "duration": 115,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:08:05.324Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-62bbf4f9a778e5fdb4b8d9451cad18a614ce6969",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 2956,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2956,
          "startTime": "2021-11-03T02:08:04.490Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:08:04.490Z",
              "duration": 54,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:08:04.494Z",
                  "duration": 50,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:08:04.544Z",
              "duration": 945,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:08:05.490Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:08:05.498Z",
              "duration": 690,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:08:06.189Z",
              "duration": 70,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-11-03T02:08:06.260Z",
              "duration": 8,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:08:06.269Z",
              "duration": 525,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-11-03T02:08:06.794Z",
              "duration": 38,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:08:06.832Z",
              "duration": 511,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-11-03T02:08:07.343Z",
              "duration": 7,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:08:07.350Z",
              "duration": 96,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:08:07.441Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-65ed096970af953af43478cec116855855109a2b",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 2421,
      "outcome": "expected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2421,
          "startTime": "2021-11-03T02:08:05.332Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:08:05.332Z",
              "duration": 34,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:08:05.338Z",
                  "duration": 28,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:08:05.366Z",
              "duration": 963,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:08:06.329Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:08:06.335Z",
              "duration": 654,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:08:06.989Z",
              "duration": 18,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:08:07.007Z",
              "duration": 52,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-11-03T02:08:07.059Z",
              "duration": 7,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:08:07.066Z",
              "duration": 528,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-11-03T02:08:07.594Z",
              "duration": 44,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-11-03T02:08:07.639Z",
              "duration": 7,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:08:07.646Z",
              "duration": 107,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:08:07.747Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-7f435649b4f7f49e65d4a6add3ef59922c62656d",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 2993,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2993,
          "startTime": "2021-11-03T02:08:07.447Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:08:07.447Z",
              "duration": 40,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:08:07.451Z",
                  "duration": 36,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:08:07.487Z",
              "duration": 1064,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:08:08.552Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:08:08.556Z",
              "duration": 645,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:08:09.201Z",
              "duration": 39,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-11-03T02:08:09.241Z",
              "duration": 601,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:08:09.844Z",
              "duration": 32,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:08:09.876Z",
              "duration": 564,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:08:10.435Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-0b5eb90f5c8c1286e3b954f0b979d7b99be9303c",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 1813,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1813,
          "startTime": "2021-11-03T02:08:07.754Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:08:07.754Z",
              "duration": 46,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:08:07.758Z",
                  "duration": 42,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:08:07.801Z",
              "duration": 954,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:08:08.755Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:08:08.760Z",
              "duration": 634,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:08:09.394Z",
              "duration": 65,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-11-03T02:08:09.459Z",
              "duration": 6,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:08:09.465Z",
              "duration": 102,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:08:09.559Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-bff2868541803cd672f98134b12a0e4022b5213f",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 2476,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2476,
          "startTime": "2021-11-03T02:08:09.568Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:08:09.568Z",
              "duration": 34,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:08:09.572Z",
                  "duration": 30,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:08:09.602Z",
              "duration": 1021,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:08:10.624Z",
              "duration": 11,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:08:10.636Z",
              "duration": 697,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:08:11.334Z",
              "duration": 58,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-11-03T02:08:11.393Z",
              "duration": 536,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:08:11.930Z",
              "duration": 10,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:08:11.941Z",
              "duration": 103,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:08:12.037Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-d3929f22a1ada3c7e864c7d1f1828b177f1c3a78",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 2694,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2694,
          "startTime": "2021-11-03T02:08:57.323Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:08:57.324Z",
              "duration": 379,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:08:57.579Z",
                  "duration": 115,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:08:57.705Z",
              "duration": 966,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:08:58.672Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:08:58.679Z",
              "duration": 631,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-11-03T02:08:59.311Z",
              "duration": 114,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:08:59.428Z",
              "duration": 27,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:08:59.455Z",
              "duration": 562,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:09:00.009Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-f241a8261c9c5e656d192ce7c2d95a28031a8abe",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 1914,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1914,
          "startTime": "2021-11-03T02:09:00.017Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:09:00.018Z",
              "duration": 49,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:09:00.033Z",
                  "duration": 34,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:09:00.068Z",
              "duration": 912,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:09:00.981Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:09:00.985Z",
              "duration": 710,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-11-03T02:09:01.695Z",
              "duration": 69,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:09:01.765Z",
              "duration": 9,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:09:01.774Z",
              "duration": 157,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:09:01.925Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-ea73a09ea76d88da1697c08b9399710d5669087f",
      "title": "should match cart badge with items in cart",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 1819,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1819,
          "startTime": "2021-11-03T02:09:01.934Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:09:01.935Z",
              "duration": 38,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:09:01.938Z",
                  "duration": 34,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:09:01.973Z",
              "duration": 876,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:09:02.849Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:09:02.854Z",
              "duration": 648,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:09:03.502Z",
              "duration": 23,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:09:03.525Z",
              "duration": 28,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:09:03.553Z",
              "duration": 199,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:09:03.725Z",
                  "duration": 24,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-470c6ee854ace681f98bd207338afb6e55fb4e97",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2236,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2236,
          "startTime": "2021-11-03T02:09:03.753Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:09:03.753Z",
              "duration": 57,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:09:03.757Z",
                  "duration": 52,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:09:03.810Z",
              "duration": 978,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:09:04.788Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-11-03T02:09:04.796Z",
              "duration": 807,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:09:05.604Z",
              "duration": 16,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-name)",
              "startTime": "2021-11-03T02:09:05.620Z",
              "duration": 20,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-description)",
              "startTime": "2021-11-03T02:09:05.640Z",
              "duration": 6,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-price)",
              "startTime": "2021-11-03T02:09:05.646Z",
              "duration": 10,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=2 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-11-03T02:09:05.657Z",
              "duration": 70,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-11-03T02:09:05.728Z",
              "duration": 58,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:09:05.787Z",
              "duration": 3,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-11-03T02:09:05.790Z",
              "duration": 4,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-11-03T02:09:05.795Z",
              "duration": 4,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-11-03T02:09:05.799Z",
              "duration": 4,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-11-03T02:09:05.804Z",
              "duration": 0,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:09:05.804Z",
              "duration": 184,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:09:05.977Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2933129bd736ea268e1ae39f917639420caf8f51",
      "title": "should be possible to remove product from cart",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 2475,
      "outcome": "expected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2475,
          "startTime": "2021-11-03T02:09:04.853Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:09:04.853Z",
              "duration": 405,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:09:05.184Z",
                  "duration": 73,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:09:05.259Z",
              "duration": 1068,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:09:06.328Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:09:06.335Z",
              "duration": 694,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:09:07.031Z",
              "duration": 31,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-11-03T02:09:07.063Z",
              "duration": 76,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-11-03T02:09:07.140Z",
              "duration": 6,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:09:07.146Z",
              "duration": 182,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:09:07.310Z",
                  "duration": 17,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-68211d561063745ed0a8a10a195c4c325fc2710d",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 1935,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1935,
          "startTime": "2021-11-03T02:09:05.989Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:09:05.989Z",
              "duration": 46,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:09:05.996Z",
                  "duration": 39,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:09:06.036Z",
              "duration": 923,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:09:06.959Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:09:06.964Z",
              "duration": 654,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:09:07.619Z",
              "duration": 72,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-11-03T02:09:07.692Z",
              "duration": 15,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:09:07.707Z",
              "duration": 217,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:09:07.912Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-ac5aef6d0cb9749b41cd2af60db89d0453aa66c2",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3047,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3047,
          "startTime": "2021-11-03T02:09:07.328Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:09:07.329Z",
              "duration": 38,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:09:07.338Z",
                  "duration": 29,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:09:07.368Z",
              "duration": 935,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:09:08.304Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:09:08.309Z",
              "duration": 674,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:09:08.984Z",
              "duration": 108,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-11-03T02:09:09.093Z",
              "duration": 10,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:09:09.104Z",
              "duration": 540,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-11-03T02:09:09.644Z",
              "duration": 36,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:09:09.680Z",
              "duration": 510,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-11-03T02:09:10.190Z",
              "duration": 6,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:09:10.196Z",
              "duration": 179,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:09:10.365Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-07462a1e1ee3fb5bbcd6a7dda62980f4a51de806",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 2506,
      "outcome": "expected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2506,
          "startTime": "2021-11-03T02:09:07.925Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:09:07.925Z",
              "duration": 39,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:09:07.930Z",
                  "duration": 34,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:09:07.965Z",
              "duration": 932,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:09:08.898Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:09:08.902Z",
              "duration": 668,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:09:09.570Z",
              "duration": 19,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:09:09.589Z",
              "duration": 52,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-11-03T02:09:09.642Z",
              "duration": 10,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:09:09.653Z",
              "duration": 522,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-11-03T02:09:10.175Z",
              "duration": 49,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-11-03T02:09:10.224Z",
              "duration": 5,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:09:10.229Z",
              "duration": 202,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:09:10.421Z",
                  "duration": 10,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-4c353f8683c2a7da82bf21ac75cfae12a03d9845",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3245,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3245,
          "startTime": "2021-11-03T02:09:10.376Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:09:10.376Z",
              "duration": 78,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:09:10.382Z",
                  "duration": 72,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:09:10.455Z",
              "duration": 1150,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:09:11.605Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:09:11.610Z",
              "duration": 691,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:09:12.301Z",
              "duration": 74,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-11-03T02:09:12.375Z",
              "duration": 622,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:09:12.997Z",
              "duration": 32,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:09:13.029Z",
              "duration": 592,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:09:13.596Z",
                  "duration": 22,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-67bcfe056128af936df9c71a2ff31ae3e97e7e76",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 2104,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2104,
          "startTime": "2021-11-03T02:09:10.431Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:09:10.432Z",
              "duration": 88,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:09:10.445Z",
                  "duration": 75,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:09:10.521Z",
              "duration": 1049,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:09:11.570Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:09:11.575Z",
              "duration": 683,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:09:12.258Z",
              "duration": 73,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-11-03T02:09:12.331Z",
              "duration": 7,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:09:12.338Z",
              "duration": 198,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:09:12.531Z",
                  "duration": 4,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2a5071cd9a64c8d2aa893344aa5c10e3434ac021",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 2538,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2538,
          "startTime": "2021-11-03T02:09:12.536Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:09:12.536Z",
              "duration": 41,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:09:12.545Z",
                  "duration": 32,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:09:12.577Z",
              "duration": 966,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:09:13.544Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:09:13.551Z",
              "duration": 745,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:09:14.297Z",
              "duration": 59,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-11-03T02:09:14.357Z",
              "duration": 542,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:09:14.900Z",
              "duration": 7,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:09:14.907Z",
              "duration": 167,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:09:15.069Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-08c3538c45f177e38485394bbcdcd00595886665",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 3375,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3375,
          "startTime": "2021-11-03T02:10:02.814Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:10:02.815Z",
              "duration": 643,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:10:03.296Z",
                  "duration": 162,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:10:03.461Z",
              "duration": 1272,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:10:04.734Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:10:04.742Z",
              "duration": 679,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-11-03T02:10:05.423Z",
              "duration": 171,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:10:05.595Z",
              "duration": 23,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:10:05.619Z",
              "duration": 571,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:10:06.181Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-f277fd7873880f7b85c79b54d4684e7cb90c4069",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 2310,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2310,
          "startTime": "2021-11-03T02:10:03.334Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:10:03.335Z",
              "duration": 217,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:10:03.442Z",
                  "duration": 109,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:10:03.554Z",
              "duration": 1188,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:10:04.743Z",
              "duration": 10,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:10:04.753Z",
              "duration": 690,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-11-03T02:10:05.444Z",
              "duration": 64,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:10:05.511Z",
              "duration": 15,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:10:05.526Z",
              "duration": 117,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:10:05.632Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-74b8fb413f87431a7067182f95bb79136cca942e",
      "title": "should match cart badge with items in cart",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 1759,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1759,
          "startTime": "2021-11-03T02:10:05.644Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:10:05.645Z",
              "duration": 49,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:10:05.655Z",
                  "duration": 39,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:10:05.695Z",
              "duration": 942,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:10:06.637Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:10:06.643Z",
              "duration": 632,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:10:07.276Z",
              "duration": 18,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:10:07.294Z",
              "duration": 20,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:10:07.314Z",
              "duration": 89,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:10:07.386Z",
                  "duration": 17,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-22db55b5b8f840550afcd6286e67258345240979",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 1911,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1911,
          "startTime": "2021-11-03T02:10:06.195Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:10:06.196Z",
              "duration": 42,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:10:06.204Z",
                  "duration": 34,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:10:06.238Z",
              "duration": 895,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:10:07.134Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-11-03T02:10:07.139Z",
              "duration": 737,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:10:07.877Z",
              "duration": 14,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-name)",
              "startTime": "2021-11-03T02:10:07.892Z",
              "duration": 12,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-description)",
              "startTime": "2021-11-03T02:10:07.904Z",
              "duration": 6,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-price)",
              "startTime": "2021-11-03T02:10:07.910Z",
              "duration": 6,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=3 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-11-03T02:10:07.916Z",
              "duration": 43,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-11-03T02:10:07.959Z",
              "duration": 46,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:10:08.006Z",
              "duration": 3,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-11-03T02:10:08.009Z",
              "duration": 5,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-11-03T02:10:08.014Z",
              "duration": 4,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-11-03T02:10:08.018Z",
              "duration": 4,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-11-03T02:10:08.022Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:10:08.023Z",
              "duration": 83,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:10:08.098Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-e84545cf1e4e6556b996527ef1c47d0b3523717b",
      "title": "should be possible to remove product from cart",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 1904,
      "outcome": "expected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1904,
          "startTime": "2021-11-03T02:10:07.404Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:10:07.404Z",
              "duration": 42,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:10:07.410Z",
                  "duration": 36,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:10:07.447Z",
              "duration": 1016,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:10:08.463Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:10:08.468Z",
              "duration": 668,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:10:09.137Z",
              "duration": 18,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-11-03T02:10:09.155Z",
              "duration": 55,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-11-03T02:10:09.210Z",
              "duration": 6,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:10:09.216Z",
              "duration": 92,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:10:09.302Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-c9461eb8e81e25c07203ae1b4f343bc715ca3b47",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 1757,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1757,
          "startTime": "2021-11-03T02:10:08.107Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:10:08.107Z",
              "duration": 42,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:10:08.111Z",
                  "duration": 38,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:10:08.150Z",
              "duration": 890,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:10:09.041Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:10:09.045Z",
              "duration": 638,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:10:09.684Z",
              "duration": 60,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-11-03T02:10:09.745Z",
              "duration": 5,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:10:09.750Z",
              "duration": 114,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:10:09.855Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-e206ad4ac61845f7a62ba3447ca9f789849440fd",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 2891,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2891,
          "startTime": "2021-11-03T02:10:09.309Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:10:09.309Z",
              "duration": 30,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:10:09.313Z",
                  "duration": 26,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:10:09.339Z",
              "duration": 897,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:10:10.237Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:10:10.243Z",
              "duration": 678,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:10:10.922Z",
              "duration": 65,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-11-03T02:10:10.987Z",
              "duration": 27,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:10:11.015Z",
              "duration": 525,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-11-03T02:10:11.540Z",
              "duration": 37,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:10:11.577Z",
              "duration": 511,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-11-03T02:10:12.089Z",
              "duration": 7,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:10:12.096Z",
              "duration": 104,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:10:12.192Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-1a2fc9ff27c464e86654313182abfa447a55f47f",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 2362,
      "outcome": "expected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2362,
          "startTime": "2021-11-03T02:10:09.865Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:10:09.865Z",
              "duration": 31,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:10:09.870Z",
                  "duration": 26,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:10:09.896Z",
              "duration": 929,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:10:10.825Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:10:10.830Z",
              "duration": 642,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:10:11.472Z",
              "duration": 16,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:10:11.489Z",
              "duration": 27,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-11-03T02:10:11.517Z",
              "duration": 9,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:10:11.527Z",
              "duration": 529,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-11-03T02:10:12.056Z",
              "duration": 43,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-11-03T02:10:12.100Z",
              "duration": 7,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:10:12.107Z",
              "duration": 120,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:10:12.202Z",
                  "duration": 24,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-cf8c89ec0fcfbc3165934adc2e8c3d0ad2f97e6f",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3176,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3176,
          "startTime": "2021-11-03T02:10:12.200Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:10:12.202Z",
              "duration": 56,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:10:12.206Z",
                  "duration": 52,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:10:12.259Z",
              "duration": 1074,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:10:13.333Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:10:13.338Z",
              "duration": 697,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:10:14.035Z",
              "duration": 48,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-11-03T02:10:14.084Z",
              "duration": 604,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:10:14.689Z",
              "duration": 18,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:10:14.707Z",
              "duration": 669,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:10:15.357Z",
                  "duration": 18,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-9777a997b336bc6c2cc4db538ef4b6bb546361b1",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 1967,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1967,
          "startTime": "2021-11-03T02:10:12.227Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:10:12.227Z",
              "duration": 45,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:10:12.232Z",
                  "duration": 40,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:10:12.273Z",
              "duration": 1067,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:10:13.341Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:10:13.347Z",
              "duration": 688,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:10:14.035Z",
              "duration": 49,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-11-03T02:10:14.084Z",
              "duration": 12,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:10:14.096Z",
              "duration": 97,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:10:14.188Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-e57549d4ba98887fb8587f2e9bbb3dcef6193c65",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 2324,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2324,
          "startTime": "2021-11-03T02:10:14.194Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:10:14.194Z",
              "duration": 37,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:10:14.202Z",
                  "duration": 29,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:10:14.231Z",
              "duration": 909,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:10:15.141Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:10:15.147Z",
              "duration": 646,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:10:15.793Z",
              "duration": 55,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-11-03T02:10:15.849Z",
              "duration": 555,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:10:16.404Z",
              "duration": 8,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:10:16.412Z",
              "duration": 106,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:10:16.514Z",
                  "duration": 4,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-5ac7e4d45c731cc66beac941b4618e790f106921",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 5251,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 5251,
          "startTime": "2021-11-03T02:11:01.820Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:11:01.821Z",
              "duration": 2164,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:11:03.278Z",
                  "duration": 707,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:11:03.986Z",
              "duration": 1564,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:11:05.551Z",
              "duration": 10,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:11:05.562Z",
              "duration": 865,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-11-03T02:11:06.429Z",
              "duration": 126,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:11:06.556Z",
              "duration": 88,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:11:06.644Z",
              "duration": 427,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:11:07.054Z",
                  "duration": 15,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-d1b6bd5298c17a2c5578f22dfab42e061f8b81b9",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 4809,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 4809,
          "startTime": "2021-11-03T02:11:02.154Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:11:02.155Z",
              "duration": 2141,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:11:03.566Z",
                  "duration": 729,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:11:04.297Z",
              "duration": 1466,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:11:05.764Z",
              "duration": 10,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:11:05.774Z",
              "duration": 889,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-11-03T02:11:06.664Z",
              "duration": 182,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:11:06.848Z",
              "duration": 46,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:11:06.894Z",
              "duration": 70,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:11:06.943Z",
                  "duration": 20,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-43fd61b1bec9604e54bc353eccb646339728e7e0",
      "title": "should match cart badge with items in cart",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2454,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2454,
          "startTime": "2021-11-03T02:11:06.965Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:11:06.966Z",
              "duration": 254,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:11:06.993Z",
                  "duration": 227,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:11:07.220Z",
              "duration": 1170,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:11:08.391Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:11:08.396Z",
              "duration": 848,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:11:09.245Z",
              "duration": 33,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:11:09.279Z",
              "duration": 46,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:11:09.325Z",
              "duration": 94,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:11:09.411Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-016a9cd7c91570d05e9562083720e00cb00cfd6f",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 3031,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3031,
          "startTime": "2021-11-03T02:11:07.072Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:11:07.072Z",
              "duration": 435,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:11:07.113Z",
                  "duration": 393,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:11:07.507Z",
              "duration": 1121,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:11:08.629Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-11-03T02:11:08.636Z",
              "duration": 1012,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:11:09.649Z",
              "duration": 34,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-name)",
              "startTime": "2021-11-03T02:11:09.683Z",
              "duration": 46,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-description)",
              "startTime": "2021-11-03T02:11:09.730Z",
              "duration": 16,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-price)",
              "startTime": "2021-11-03T02:11:09.746Z",
              "duration": 12,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=5 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-11-03T02:11:09.758Z",
              "duration": 81,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-11-03T02:11:09.840Z",
              "duration": 127,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:11:09.968Z",
              "duration": 6,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-11-03T02:11:09.974Z",
              "duration": 14,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-11-03T02:11:09.988Z",
              "duration": 10,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-11-03T02:11:09.999Z",
              "duration": 11,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-11-03T02:11:10.010Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:11:10.011Z",
              "duration": 92,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:11:10.095Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2d67088e6c5e56d68d56a79cf44c42f394afa7da",
      "title": "should be possible to remove product from cart",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 2511,
      "outcome": "expected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2511,
          "startTime": "2021-11-03T02:11:09.420Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:11:09.420Z",
              "duration": 206,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:11:09.435Z",
                  "duration": 191,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:11:09.627Z",
              "duration": 1086,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:11:10.714Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:11:10.721Z",
              "duration": 955,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:11:11.676Z",
              "duration": 53,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-11-03T02:11:11.729Z",
              "duration": 126,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-11-03T02:11:11.855Z",
              "duration": 17,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:11:11.872Z",
              "duration": 59,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:11:11.922Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-bf5ff46e80f9c87d764c3fd1978359aa342d54d2",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2470,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2470,
          "startTime": "2021-11-03T02:11:10.103Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:11:10.104Z",
              "duration": 255,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:11:10.128Z",
                  "duration": 231,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:11:10.360Z",
              "duration": 1025,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:11:11.386Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:11:11.393Z",
              "duration": 948,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:11:12.341Z",
              "duration": 105,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-11-03T02:11:12.446Z",
              "duration": 54,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:11:12.500Z",
              "duration": 74,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:11:12.561Z",
                  "duration": 13,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-a0013357b8a2ca505a0ad70c92b1f801c9d90c57",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3159,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3159,
          "startTime": "2021-11-03T02:11:11.933Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:11:11.933Z",
              "duration": 226,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:11:11.956Z",
                  "duration": 203,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:11:12.160Z",
              "duration": 1135,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:11:13.296Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:11:13.304Z",
              "duration": 923,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:11:14.228Z",
              "duration": 133,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-11-03T02:11:14.361Z",
              "duration": 31,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:11:14.393Z",
              "duration": 42,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-11-03T02:11:14.436Z",
              "duration": 50,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:11:14.487Z",
              "duration": 519,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-11-03T02:11:15.007Z",
              "duration": 16,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:11:15.023Z",
              "duration": 69,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:11:15.078Z",
                  "duration": 13,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-b9e853903197cb756aa4721301bdf0d3978722dd",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 2600,
      "outcome": "expected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2600,
          "startTime": "2021-11-03T02:11:12.574Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:11:12.575Z",
              "duration": 301,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:11:12.597Z",
                  "duration": 279,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:11:12.876Z",
              "duration": 1064,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:11:13.941Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:11:13.946Z",
              "duration": 861,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:11:14.807Z",
              "duration": 30,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:11:14.838Z",
              "duration": 73,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-11-03T02:11:14.911Z",
              "duration": 31,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:11:14.943Z",
              "duration": 60,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-11-03T02:11:15.004Z",
              "duration": 70,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-11-03T02:11:15.075Z",
              "duration": 20,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:11:15.095Z",
              "duration": 79,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:11:15.164Z",
                  "duration": 10,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-e17493f3904e05eaff9213797fd57459a3d4fc28",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3821,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3821,
          "startTime": "2021-11-03T02:11:15.093Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:11:15.093Z",
              "duration": 281,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:11:15.125Z",
                  "duration": 249,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:11:15.374Z",
              "duration": 1217,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:11:16.591Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:11:16.597Z",
              "duration": 944,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:11:17.542Z",
              "duration": 89,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-11-03T02:11:17.631Z",
              "duration": 695,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:11:18.327Z",
              "duration": 153,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:11:18.480Z",
              "duration": 434,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:11:18.904Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-92a6e24049168102b044c1d4ce7eb8a8765a9173",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 2777,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2777,
          "startTime": "2021-11-03T02:11:15.174Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:11:15.174Z",
              "duration": 379,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:11:15.192Z",
                  "duration": 361,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:11:15.554Z",
              "duration": 1193,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:11:16.748Z",
              "duration": 25,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:11:16.773Z",
              "duration": 983,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:11:17.757Z",
              "duration": 96,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-11-03T02:11:17.854Z",
              "duration": 27,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:11:17.881Z",
              "duration": 70,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:11:17.939Z",
                  "duration": 10,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-950ca122575112953daf74e6bbb57b54bb4f5d84",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 3272,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3272,
          "startTime": "2021-11-03T02:11:17.952Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:11:17.952Z",
              "duration": 255,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:11:17.965Z",
                  "duration": 241,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:11:18.207Z",
              "duration": 1324,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:11:19.531Z",
              "duration": 11,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:11:19.543Z",
              "duration": 924,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:11:20.468Z",
              "duration": 95,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-11-03T02:11:20.566Z",
              "duration": 577,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:11:21.144Z",
              "duration": 19,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:11:21.163Z",
              "duration": 61,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:11:21.214Z",
                  "duration": 10,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-edbea7a7833c0a848b7e9efb41c019b571fbdb6c",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 4575,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 4575,
          "startTime": "2021-11-03T02:12:24.947Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:12:24.948Z",
              "duration": 960,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:12:25.411Z",
                  "duration": 497,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:12:25.909Z",
              "duration": 2433,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:12:28.343Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:12:28.349Z",
              "duration": 709,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-11-03T02:12:29.060Z",
              "duration": 160,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:12:29.222Z",
              "duration": 177,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:12:29.400Z",
              "duration": 122,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:12:29.517Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-d591eeddf10e4f55f1ffba07a655c855c85b0fdc",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 2835,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2835,
          "startTime": "2021-11-03T02:12:26.477Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:12:26.478Z",
              "duration": 465,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:12:26.803Z",
                  "duration": 140,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:12:26.945Z",
              "duration": 1424,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:12:28.370Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:12:28.377Z",
              "duration": 690,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-11-03T02:12:29.068Z",
              "duration": 122,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:12:29.200Z",
              "duration": 53,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:12:29.257Z",
              "duration": 55,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:12:29.309Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2ce8236fa6f9d18603004ecb93e12397994c3002",
      "title": "should match cart badge with items in cart",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2355,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2355,
          "startTime": "2021-11-03T02:12:29.313Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:12:29.313Z",
              "duration": 403,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:12:29.347Z",
                  "duration": 368,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:12:29.717Z",
              "duration": 1181,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:12:30.899Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:12:30.904Z",
              "duration": 673,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:12:31.579Z",
              "duration": 17,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:12:31.597Z",
              "duration": 17,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:12:31.614Z",
              "duration": 54,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:12:31.660Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-85d94cb033c69722e4a5989fa1793736fd79c776",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2781,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2781,
          "startTime": "2021-11-03T02:12:29.523Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:12:29.523Z",
              "duration": 211,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:12:29.555Z",
                  "duration": 179,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:12:29.735Z",
              "duration": 1208,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:12:30.943Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-11-03T02:12:30.949Z",
              "duration": 890,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:12:31.840Z",
              "duration": 31,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-11-03T02:12:31.871Z",
              "duration": 65,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-11-03T02:12:31.937Z",
              "duration": 5,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-11-03T02:12:31.943Z",
              "duration": 13,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=0 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-11-03T02:12:31.957Z",
              "duration": 85,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-11-03T02:12:32.043Z",
              "duration": 155,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:12:32.199Z",
              "duration": 24,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-11-03T02:12:32.223Z",
              "duration": 8,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-11-03T02:12:32.231Z",
              "duration": 7,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-11-03T02:12:32.238Z",
              "duration": 7,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-11-03T02:12:32.246Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:12:32.247Z",
              "duration": 57,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:12:32.300Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-a9281ad6fd27826e7b628b09c4d058667be77616",
      "title": "should be possible to remove product from cart",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 2192,
      "outcome": "expected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2192,
          "startTime": "2021-11-03T02:12:31.669Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:12:31.669Z",
              "duration": 153,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:12:31.682Z",
                  "duration": 140,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:12:31.823Z",
              "duration": 1217,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:12:33.040Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:12:33.048Z",
              "duration": 643,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:12:33.691Z",
              "duration": 34,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-11-03T02:12:33.726Z",
              "duration": 62,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-11-03T02:12:33.788Z",
              "duration": 19,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:12:33.807Z",
              "duration": 53,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:12:33.855Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-bceda6d48c5351b5215247a752d3579fc11fb2fd",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2115,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2115,
          "startTime": "2021-11-03T02:12:32.304Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:12:32.304Z",
              "duration": 190,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:12:32.329Z",
                  "duration": 165,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:12:32.494Z",
              "duration": 1059,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:12:33.554Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:12:33.559Z",
              "duration": 652,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:12:34.211Z",
              "duration": 113,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-11-03T02:12:34.325Z",
              "duration": 28,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:12:34.353Z",
              "duration": 65,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:12:34.416Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-77b66b26b73f3afb87ab3fa6a80f5975302c9ad3",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3303,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3303,
          "startTime": "2021-11-03T02:12:33.862Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:12:33.862Z",
              "duration": 153,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:12:33.873Z",
                  "duration": 142,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:12:34.016Z",
              "duration": 1122,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:12:35.139Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:12:35.144Z",
              "duration": 700,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:12:35.845Z",
              "duration": 76,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-11-03T02:12:35.922Z",
              "duration": 30,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:12:35.953Z",
              "duration": 534,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-11-03T02:12:36.488Z",
              "duration": 54,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:12:36.542Z",
              "duration": 531,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-11-03T02:12:37.074Z",
              "duration": 17,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:12:37.092Z",
              "duration": 73,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:12:37.162Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-505d42db4826e616e1e73912a88161ea2de9a1ae",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 2773,
      "outcome": "expected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2773,
          "startTime": "2021-11-03T02:12:34.419Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:12:34.419Z",
              "duration": 228,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:12:34.445Z",
                  "duration": 202,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:12:34.648Z",
              "duration": 1045,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:12:35.694Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:12:35.699Z",
              "duration": 677,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:12:36.376Z",
              "duration": 35,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:12:36.412Z",
              "duration": 64,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-11-03T02:12:36.477Z",
              "duration": 43,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:12:36.520Z",
              "duration": 526,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-11-03T02:12:37.046Z",
              "duration": 62,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-11-03T02:12:37.109Z",
              "duration": 27,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:12:37.136Z",
              "duration": 56,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:12:37.190Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-6a8be8304b673e8298efb62f36f83d91380281f8",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3290,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3290,
          "startTime": "2021-11-03T02:12:37.168Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:12:37.168Z",
              "duration": 242,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:12:37.186Z",
                  "duration": 224,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:12:37.410Z",
              "duration": 1216,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:12:38.627Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:12:38.636Z",
              "duration": 705,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:12:39.342Z",
              "duration": 126,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-11-03T02:12:39.468Z",
              "duration": 663,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:12:40.131Z",
              "duration": 181,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:12:40.312Z",
              "duration": 146,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:12:40.450Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-0ee5683ec0948d144ce5d5585c69592abbb14c80",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 2180,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2180,
          "startTime": "2021-11-03T02:12:37.194Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:12:37.194Z",
              "duration": 223,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:12:37.224Z",
                  "duration": 192,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:12:37.417Z",
              "duration": 1127,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:12:38.545Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:12:38.550Z",
              "duration": 672,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:12:39.223Z",
              "duration": 59,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-11-03T02:12:39.282Z",
              "duration": 19,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:12:39.301Z",
              "duration": 73,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:12:39.371Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-ee7f1437df45d945cc9b5a174df360e064ec058f",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 2877,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2877,
          "startTime": "2021-11-03T02:12:39.375Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:12:39.375Z",
              "duration": 231,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:12:39.397Z",
                  "duration": 209,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:12:39.607Z",
              "duration": 1235,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:12:40.843Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:12:40.849Z",
              "duration": 681,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:12:41.530Z",
              "duration": 84,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-11-03T02:12:41.615Z",
              "duration": 567,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:12:42.183Z",
              "duration": 20,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:12:42.203Z",
              "duration": 49,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:12:42.249Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-56e977c66878d1c36f1c9e6136d90f131905a941",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 3067,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3067,
          "startTime": "2021-11-03T02:13:34.619Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:13:34.628Z",
              "duration": 723,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:13:35.118Z",
                  "duration": 233,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:13:35.352Z",
              "duration": 1282,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:13:36.635Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:13:36.641Z",
              "duration": 707,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-11-03T02:13:37.349Z",
              "duration": 165,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:13:37.516Z",
              "duration": 93,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:13:37.609Z",
              "duration": 77,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:13:37.682Z",
                  "duration": 4,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-b1f8e09f8d175292369ee5f7dc75675e4b7e729f",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 2666,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2666,
          "startTime": "2021-11-03T02:13:35.539Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:13:35.540Z",
              "duration": 646,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:13:35.962Z",
                  "duration": 223,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:13:36.188Z",
              "duration": 1082,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:13:37.271Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:13:37.277Z",
              "duration": 672,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-11-03T02:13:37.950Z",
              "duration": 133,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:13:38.085Z",
              "duration": 59,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:13:38.145Z",
              "duration": 60,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:13:38.201Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-41a39cff945159b813dc7aa3261745ade5db3a7f",
      "title": "should match cart badge with items in cart",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2164,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2164,
          "startTime": "2021-11-03T02:13:37.687Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:13:37.687Z",
              "duration": 174,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:13:37.701Z",
                  "duration": 159,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:13:37.861Z",
              "duration": 1227,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:13:39.088Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:13:39.093Z",
              "duration": 637,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:13:39.731Z",
              "duration": 28,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:13:39.760Z",
              "duration": 22,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:13:39.782Z",
              "duration": 69,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:13:39.849Z",
                  "duration": 1,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-cbed407a55cbac043d829e3c6ffcff6515dd07b4",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2523,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2523,
          "startTime": "2021-11-03T02:13:38.206Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:13:38.206Z",
              "duration": 244,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:13:38.228Z",
                  "duration": 221,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:13:38.451Z",
              "duration": 1028,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:13:39.479Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-11-03T02:13:39.485Z",
              "duration": 742,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:13:40.228Z",
              "duration": 21,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-name)",
              "startTime": "2021-11-03T02:13:40.249Z",
              "duration": 22,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-description)",
              "startTime": "2021-11-03T02:13:40.272Z",
              "duration": 8,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-price)",
              "startTime": "2021-11-03T02:13:40.280Z",
              "duration": 12,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=1 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-11-03T02:13:40.292Z",
              "duration": 87,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-11-03T02:13:40.380Z",
              "duration": 232,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:13:40.612Z",
              "duration": 20,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-11-03T02:13:40.632Z",
              "duration": 9,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-11-03T02:13:40.642Z",
              "duration": 25,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-11-03T02:13:40.668Z",
              "duration": 7,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-11-03T02:13:40.675Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:13:40.676Z",
              "duration": 53,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:13:40.727Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-01381a81c997a9feb6e1229afd33b5520c4d6384",
      "title": "should be possible to remove product from cart",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 2442,
      "outcome": "expected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2442,
          "startTime": "2021-11-03T02:13:39.851Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:13:39.852Z",
              "duration": 255,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:13:39.881Z",
                  "duration": 225,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:13:40.107Z",
              "duration": 1214,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:13:41.321Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:13:41.327Z",
              "duration": 762,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:13:42.089Z",
              "duration": 44,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-11-03T02:13:42.134Z",
              "duration": 71,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-11-03T02:13:42.205Z",
              "duration": 32,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:13:42.237Z",
              "duration": 55,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:13:42.289Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-c81a3fe03909ab3766f61c4d01d54003ce8f0158",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2137,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2137,
          "startTime": "2021-11-03T02:13:40.730Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:13:40.730Z",
              "duration": 225,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:13:40.757Z",
                  "duration": 197,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:13:40.955Z",
              "duration": 1030,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:13:41.985Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:13:41.990Z",
              "duration": 716,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:13:42.706Z",
              "duration": 84,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-11-03T02:13:42.790Z",
              "duration": 15,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:13:42.805Z",
              "duration": 62,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:13:42.864Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-dbcd51a8882572de9ebad44b320e562cc6792c6b",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3383,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3383,
          "startTime": "2021-11-03T02:13:42.293Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:13:42.293Z",
              "duration": 186,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:13:42.303Z",
                  "duration": 176,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:13:42.480Z",
              "duration": 1129,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:13:43.610Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:13:43.616Z",
              "duration": 681,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:13:44.298Z",
              "duration": 79,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-11-03T02:13:44.378Z",
              "duration": 24,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:13:44.403Z",
              "duration": 589,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-11-03T02:13:44.993Z",
              "duration": 33,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:13:45.027Z",
              "duration": 561,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-11-03T02:13:45.589Z",
              "duration": 11,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:13:45.600Z",
              "duration": 76,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:13:45.673Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-9956c6ff1720a418808ed2fa5a7cb5ee6ae9b361",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 2754,
      "outcome": "expected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2754,
          "startTime": "2021-11-03T02:13:42.871Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:13:42.871Z",
              "duration": 233,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:13:42.893Z",
                  "duration": 211,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:13:43.105Z",
              "duration": 991,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:13:44.096Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:13:44.101Z",
              "duration": 672,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:13:44.774Z",
              "duration": 49,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:13:44.824Z",
              "duration": 60,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-11-03T02:13:44.885Z",
              "duration": 44,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:13:44.929Z",
              "duration": 550,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-11-03T02:13:45.480Z",
              "duration": 51,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-11-03T02:13:45.531Z",
              "duration": 20,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:13:45.552Z",
              "duration": 73,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:13:45.623Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-da528b8f6d51072468991daf0ad6779fdb8e7b12",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3085,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3085,
          "startTime": "2021-11-03T02:13:45.626Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:13:45.626Z",
              "duration": 273,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:13:45.649Z",
                  "duration": 250,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:13:45.900Z",
              "duration": 1147,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:13:47.047Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:13:47.052Z",
              "duration": 694,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:13:47.746Z",
              "duration": 62,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-11-03T02:13:47.808Z",
              "duration": 701,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:13:48.511Z",
              "duration": 139,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:13:48.650Z",
              "duration": 60,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:13:48.708Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-0cdf73fab6b0b9371e1bb74ed7e325de57cb7ad6",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 2406,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2406,
          "startTime": "2021-11-03T02:13:45.677Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:13:45.677Z",
              "duration": 232,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:13:45.701Z",
                  "duration": 208,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:13:45.909Z",
              "duration": 1198,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:13:47.108Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:13:47.113Z",
              "duration": 714,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:13:47.828Z",
              "duration": 99,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-11-03T02:13:47.927Z",
              "duration": 39,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:13:47.967Z",
              "duration": 116,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:13:48.072Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-bdc370d4fb41689fb49a5b467292eb9022ef3d51",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 3046,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3046,
          "startTime": "2021-11-03T02:13:48.083Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:13:48.083Z",
              "duration": 274,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:13:48.104Z",
                  "duration": 253,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:13:48.358Z",
              "duration": 1271,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:13:49.629Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:13:49.635Z",
              "duration": 661,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:13:50.297Z",
              "duration": 61,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-11-03T02:13:50.359Z",
              "duration": 637,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:13:50.997Z",
              "duration": 15,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:13:51.013Z",
              "duration": 116,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:13:51.126Z",
                  "duration": 1,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-665ebcc7eeaa23fef3040f64fd46b7f5826cf833",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 2859,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2859,
          "startTime": "2021-11-03T02:14:45.064Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:14:45.065Z",
              "duration": 335,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:14:45.323Z",
                  "duration": 77,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:14:45.401Z",
              "duration": 1132,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:14:46.534Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:14:46.542Z",
              "duration": 627,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-11-03T02:14:47.170Z",
              "duration": 117,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:14:47.289Z",
              "duration": 26,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:14:47.315Z",
              "duration": 609,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:14:47.905Z",
                  "duration": 17,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-32d542f9aaed635033b333618aed43d810c279aa",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 2405,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2405,
          "startTime": "2021-11-03T02:14:45.409Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:14:45.410Z",
              "duration": 424,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:14:45.763Z",
                  "duration": 71,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:14:45.835Z",
              "duration": 993,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:14:46.830Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:14:46.836Z",
              "duration": 631,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-11-03T02:14:47.468Z",
              "duration": 93,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:14:47.562Z",
              "duration": 17,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:14:47.580Z",
              "duration": 234,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:14:47.789Z",
                  "duration": 24,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-3b8064df54065b033d171dab6fb131bf831ffe8b",
      "title": "should match cart badge with items in cart",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2016,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2016,
          "startTime": "2021-11-03T02:14:47.815Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:14:47.815Z",
              "duration": 50,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:14:47.822Z",
                  "duration": 42,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:14:47.865Z",
              "duration": 1090,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:14:48.956Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:14:48.960Z",
              "duration": 644,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:14:49.605Z",
              "duration": 14,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:14:49.619Z",
              "duration": 11,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:14:49.630Z",
              "duration": 201,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:14:49.822Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-9829c4b3ae406b9c28022368ac40e6dcefad8021",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2355,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2355,
          "startTime": "2021-11-03T02:14:47.925Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:14:47.926Z",
              "duration": 72,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:14:47.942Z",
                  "duration": 55,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:14:47.998Z",
              "duration": 1039,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:14:49.038Z",
              "duration": 9,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-11-03T02:14:49.048Z",
              "duration": 746,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:14:49.795Z",
              "duration": 14,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-11-03T02:14:49.810Z",
              "duration": 12,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-11-03T02:14:49.823Z",
              "duration": 23,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-11-03T02:14:49.846Z",
              "duration": 8,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=0 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-11-03T02:14:49.854Z",
              "duration": 67,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-11-03T02:14:49.922Z",
              "duration": 69,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-11-03T02:14:49.992Z",
              "duration": 6,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-11-03T02:14:49.998Z",
              "duration": 6,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-11-03T02:14:50.005Z",
              "duration": 6,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-11-03T02:14:50.011Z",
              "duration": 8,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-11-03T02:14:50.019Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:14:50.020Z",
              "duration": 260,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:14:50.259Z",
                  "duration": 20,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-6443a4bb8db97e9bdb817321f84d4130c1c2ea14",
      "title": "should be possible to remove product from cart",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 2074,
      "outcome": "expected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2074,
          "startTime": "2021-11-03T02:14:49.832Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:14:49.832Z",
              "duration": 46,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:14:49.838Z",
                  "duration": 40,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:14:49.878Z",
              "duration": 1081,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:14:50.959Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:14:50.966Z",
              "duration": 640,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:14:51.606Z",
              "duration": 18,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-11-03T02:14:51.624Z",
              "duration": 47,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-11-03T02:14:51.672Z",
              "duration": 7,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:14:51.679Z",
              "duration": 227,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:14:51.901Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-743a6c3f1d473448f36991de9b03c38fffb52613",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2073,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2073,
          "startTime": "2021-11-03T02:14:50.280Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:14:50.280Z",
              "duration": 68,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:14:50.286Z",
                  "duration": 62,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:14:50.349Z",
              "duration": 928,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:14:51.277Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:14:51.282Z",
              "duration": 640,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:14:51.923Z",
              "duration": 88,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-11-03T02:14:52.012Z",
              "duration": 15,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:14:52.027Z",
              "duration": 326,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:14:52.341Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-722c2cc67c063797371868cd5ec55dcaf80064b0",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3174,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3174,
          "startTime": "2021-11-03T02:14:51.907Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:14:51.908Z",
              "duration": 51,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:14:51.915Z",
                  "duration": 44,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:14:51.960Z",
              "duration": 1051,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:14:53.011Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:14:53.016Z",
              "duration": 635,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:14:53.652Z",
              "duration": 41,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-11-03T02:14:53.693Z",
              "duration": 8,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:14:53.702Z",
              "duration": 525,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-11-03T02:14:54.228Z",
              "duration": 38,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:14:54.267Z",
              "duration": 511,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-11-03T02:14:54.778Z",
              "duration": 8,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:14:54.786Z",
              "duration": 296,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:14:55.064Z",
                  "duration": 18,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-36ab71caae910f0aeb9a5e3bcb1b6e2a82cfed28",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 2509,
      "outcome": "expected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2509,
          "startTime": "2021-11-03T02:14:52.354Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:14:52.354Z",
              "duration": 50,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:14:52.362Z",
                  "duration": 42,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:14:52.405Z",
              "duration": 944,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:14:53.349Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:14:53.354Z",
              "duration": 641,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-11-03T02:14:53.996Z",
              "duration": 17,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:14:54.014Z",
              "duration": 44,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-11-03T02:14:54.059Z",
              "duration": 9,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-11-03T02:14:54.069Z",
              "duration": 525,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-11-03T02:14:54.595Z",
              "duration": 40,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-11-03T02:14:54.635Z",
              "duration": 8,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:14:54.643Z",
              "duration": 219,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:14:54.855Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-562907d4260fc089be8b192a24613483dd375626",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3206,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3206,
          "startTime": "2021-11-03T02:14:54.863Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:14:54.863Z",
              "duration": 51,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:14:54.868Z",
                  "duration": 46,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:14:54.914Z",
              "duration": 1094,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:14:56.009Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:14:56.013Z",
              "duration": 664,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:14:56.677Z",
              "duration": 48,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-11-03T02:14:56.725Z",
              "duration": 600,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:14:57.326Z",
              "duration": 61,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:14:57.388Z",
              "duration": 680,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:14:58.057Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-1f2ed6d4ada46d61b83503da5b156ea89061a882",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 2040,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2040,
          "startTime": "2021-11-03T02:14:55.083Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:14:55.083Z",
              "duration": 86,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:14:55.101Z",
                  "duration": 68,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:14:55.170Z",
              "duration": 996,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:14:56.167Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:14:56.173Z",
              "duration": 634,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:14:56.808Z",
              "duration": 69,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-11-03T02:14:56.877Z",
              "duration": 6,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:14:56.883Z",
              "duration": 240,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:14:57.117Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-6c71d9d727fcd39dd431c66f4860282fee74cb3f",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 2687,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2687,
          "startTime": "2021-11-03T02:14:57.125Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-11-03T02:14:57.125Z",
              "duration": 43,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-11-03T02:14:57.130Z",
                  "duration": 38,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-11-03T02:14:57.169Z",
              "duration": 1071,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-11-03T02:14:58.241Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-11-03T02:14:58.246Z",
              "duration": 707,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-11-03T02:14:58.954Z",
              "duration": 56,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-11-03T02:14:59.011Z",
              "duration": 535,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-11-03T02:14:59.546Z",
              "duration": 11,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-11-03T02:14:59.557Z",
              "duration": 255,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-11-03T02:14:59.799Z",
                  "duration": 13,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    }
  ]
}