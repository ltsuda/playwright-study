{
  "fileId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86",
  "fileName": "cart.spec.js",
  "tests": [
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-d47794ad39f9ea3a3d25632935105b90646e372f",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 20639,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 20639,
          "startTime": "2021-10-22T01:38:48.263Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:38:48.276Z",
              "duration": 712,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:38:48.823Z",
                  "duration": 163,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:38:48.995Z",
              "duration": 17726,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:39:06.723Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:39:06.731Z",
              "duration": 737,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-10-22T01:39:07.470Z",
              "duration": 184,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:39:07.657Z",
              "duration": 56,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:07.713Z",
              "duration": 1189,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:08.893Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-acc42b565a7ff1aa51921548ffa11f08922bf6c6",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 19017,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 19017,
          "startTime": "2021-10-22T01:38:48.820Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:38:48.821Z",
              "duration": 635,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:38:49.317Z",
                  "duration": 126,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:38:49.457Z",
              "duration": 17313,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:39:06.771Z",
              "duration": 11,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:39:06.783Z",
              "duration": 741,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-10-22T01:39:07.525Z",
              "duration": 123,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:39:07.650Z",
              "duration": 33,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:07.684Z",
              "duration": 153,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:07.812Z",
                  "duration": 24,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2544c0fc77e1836caef577646df5f7b78b5a8c88",
      "title": "should match cart badge with items in cart",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2251,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2251,
          "startTime": "2021-10-22T01:39:07.839Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:39:07.840Z",
              "duration": 70,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:39:07.847Z",
                  "duration": 62,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:39:07.911Z",
              "duration": 1301,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:39:09.213Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:39:09.219Z",
              "duration": 737,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:39:09.958Z",
              "duration": 18,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:39:09.977Z",
              "duration": 16,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:09.993Z",
              "duration": 97,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:10.083Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-41e5c20c00860b46369bdbe6f7375aa014a99f3f",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2550,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2550,
          "startTime": "2021-10-22T01:39:08.903Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:39:08.903Z",
              "duration": 72,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:39:08.909Z",
                  "duration": 66,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:39:08.976Z",
              "duration": 1060,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:39:10.037Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-10-22T01:39:10.050Z",
              "duration": 1072,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:39:11.124Z",
              "duration": 19,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-name)",
              "startTime": "2021-10-22T01:39:11.144Z",
              "duration": 14,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-description)",
              "startTime": "2021-10-22T01:39:11.159Z",
              "duration": 8,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-price)",
              "startTime": "2021-10-22T01:39:11.167Z",
              "duration": 6,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=3 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-10-22T01:39:11.174Z",
              "duration": 51,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-10-22T01:39:11.226Z",
              "duration": 60,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:39:11.287Z",
              "duration": 2,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-22T01:39:11.290Z",
              "duration": 7,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-22T01:39:11.297Z",
              "duration": 6,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-22T01:39:11.303Z",
              "duration": 9,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-10-22T01:39:11.313Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:11.314Z",
              "duration": 139,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:11.441Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-93777b7ecb90198a542835731e41677657e138dd",
      "title": "should be possible to remove product from cart",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 16031,
      "outcome": "unexpected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 7258,
          "startTime": "2021-10-22T01:39:10.091Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:39:10.091Z",
              "duration": 81,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:39:10.096Z",
                  "duration": 76,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:39:10.173Z",
              "duration": 1140,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:39:11.314Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:39:11.320Z",
              "duration": 841,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:39:12.162Z",
              "duration": 24,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-22T01:39:12.187Z",
              "duration": 50,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:39:12.238Z",
              "duration": 5004,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:17.243Z",
              "duration": 106,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:17.335Z",
                  "duration": 14,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n  69 |         await inventoryItemController.removeFromCart()\n> 70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n     |                                                                                ^\n  71 |     })\n  72 |\n  73 |     test(\"should be possible to open sidemenu @slow @smoke\", async ({ navigationBarController, page }) => {\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:70:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/c092b784d9c2128a8e8bec407077831d8dca172e.png"
            }
          ]
        },
        {
          "duration": 8773,
          "startTime": "2021-10-22T01:39:21.467Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:39:21.468Z",
              "duration": 60,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:39:21.475Z",
                  "duration": 53,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:39:21.529Z",
              "duration": 1217,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:39:22.747Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:39:22.754Z",
              "duration": 798,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:39:23.553Z",
              "duration": 25,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-22T01:39:23.579Z",
              "duration": 44,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:39:23.624Z",
              "duration": 5007,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:28.632Z",
              "duration": 1608,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:28.803Z",
                  "duration": 1434,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n  69 |         await inventoryItemController.removeFromCart()\n> 70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n     |                                                                                ^\n  71 |     })\n  72 |\n  73 |     test(\"should be possible to open sidemenu @slow @smoke\", async ({ navigationBarController, page }) => {\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:70:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "data/7d0541dcfb8c419f8fd918f08bb1f1be5509db9e.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "data/1e886d723d740ad52d99661bc4d2798769e78c99.zip"
            },
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/c092b784d9c2128a8e8bec407077831d8dca172e.png"
            }
          ]
        }
      ],
      "ok": false
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2c17457a7770b4cbf5dc3c491ddc4caf36b01f7d",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2019,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2019,
          "startTime": "2021-10-22T01:39:11.454Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:39:11.454Z",
              "duration": 74,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:39:11.460Z",
                  "duration": 68,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:39:11.529Z",
              "duration": 1051,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:39:12.581Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:39:12.586Z",
              "duration": 697,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:39:13.284Z",
              "duration": 55,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-22T01:39:13.340Z",
              "duration": 8,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:13.348Z",
              "duration": 125,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:13.468Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-62bbf4f9a778e5fdb4b8d9451cad18a614ce6969",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3107,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3107,
          "startTime": "2021-10-22T01:39:13.474Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:39:13.474Z",
              "duration": 54,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:39:13.482Z",
                  "duration": 46,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:39:13.528Z",
              "duration": 1013,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:39:14.542Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:39:14.548Z",
              "duration": 707,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:39:15.256Z",
              "duration": 65,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:39:15.322Z",
              "duration": 12,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:39:15.336Z",
              "duration": 534,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-10-22T01:39:15.871Z",
              "duration": 38,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:39:15.910Z",
              "duration": 510,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-10-22T01:39:16.421Z",
              "duration": 10,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:16.431Z",
              "duration": 150,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:16.553Z",
                  "duration": 28,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-65ed096970af953af43478cec116855855109a2b",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 16948,
      "outcome": "unexpected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 7603,
          "startTime": "2021-10-22T01:39:16.583Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:39:16.583Z",
              "duration": 43,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:39:16.588Z",
                  "duration": 38,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:39:16.627Z",
              "duration": 1020,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:39:17.647Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:39:17.653Z",
              "duration": 758,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:39:18.412Z",
              "duration": 31,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:39:18.444Z",
              "duration": 54,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:39:18.498Z",
              "duration": 10,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:39:18.509Z",
              "duration": 527,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-22T01:39:19.037Z",
              "duration": 43,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:39:19.081Z",
              "duration": 5004,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:24.086Z",
              "duration": 100,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:24.178Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n  113 |         await navigationBarController.resetState()\n> 114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })\n  116 |\n  117 |     test(\"should back at Invetory page when clicking at the all items link on menu\", async ({\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:114:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/cacdd7afbb42a5c0be338ed359c4179d3db54f41.png"
            }
          ]
        },
        {
          "duration": 9345,
          "startTime": "2021-10-22T01:39:26.927Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:39:26.928Z",
              "duration": 50,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:39:26.935Z",
                  "duration": 43,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:39:26.979Z",
              "duration": 1287,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:39:28.266Z",
              "duration": 12,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:39:28.278Z",
              "duration": 733,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:39:29.013Z",
              "duration": 31,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:39:29.044Z",
              "duration": 93,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:39:29.138Z",
              "duration": 34,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:39:29.173Z",
              "duration": 677,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-22T01:39:29.851Z",
              "duration": 113,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:39:29.964Z",
              "duration": 5010,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:34.975Z",
              "duration": 1297,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:35.219Z",
                  "duration": 1050,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n  113 |         await navigationBarController.resetState()\n> 114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })\n  116 |\n  117 |     test(\"should back at Invetory page when clicking at the all items link on menu\", async ({\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:114:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "data/ba608c058e9b89319afb11c8d2efa8baf836a787.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "data/5a1cf88a2805a93980e6719cc2c94e6170a24c70.zip"
            },
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/cacdd7afbb42a5c0be338ed359c4179d3db54f41.png"
            }
          ]
        }
      ],
      "ok": false
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-7f435649b4f7f49e65d4a6add3ef59922c62656d",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3598,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3598,
          "startTime": "2021-10-22T01:39:17.868Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:39:17.869Z",
              "duration": 352,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:39:18.153Z",
                  "duration": 68,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:39:18.225Z",
              "duration": 1033,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:39:19.260Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:39:19.267Z",
              "duration": 690,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:39:19.959Z",
              "duration": 68,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-10-22T01:39:20.028Z",
              "duration": 621,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:39:20.653Z",
              "duration": 39,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:20.693Z",
              "duration": 773,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:21.455Z",
                  "duration": 10,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-0b5eb90f5c8c1286e3b954f0b979d7b99be9303c",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 2255,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2255,
          "startTime": "2021-10-22T01:39:24.671Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:39:24.672Z",
              "duration": 310,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:39:24.922Z",
                  "duration": 60,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:39:24.985Z",
              "duration": 1018,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:39:26.004Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:39:26.012Z",
              "duration": 686,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:39:26.700Z",
              "duration": 77,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-10-22T01:39:26.779Z",
              "duration": 12,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:26.791Z",
              "duration": 135,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:26.917Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-bff2868541803cd672f98134b12a0e4022b5213f",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 2794,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2794,
          "startTime": "2021-10-22T01:39:30.748Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:39:30.748Z",
              "duration": 314,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:39:30.995Z",
                  "duration": 67,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:39:31.068Z",
              "duration": 1006,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:39:32.075Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:39:32.083Z",
              "duration": 696,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:39:32.780Z",
              "duration": 60,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-10-22T01:39:32.842Z",
              "duration": 554,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:39:33.399Z",
              "duration": 12,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:39:33.412Z",
              "duration": 130,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:39:33.530Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-d3929f22a1ada3c7e864c7d1f1828b177f1c3a78",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 3354,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3354,
          "startTime": "2021-10-22T01:40:45.070Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:40:45.070Z",
              "duration": 472,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:40:45.380Z",
                  "duration": 162,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:40:45.556Z",
              "duration": 1034,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:40:46.591Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:40:46.599Z",
              "duration": 669,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-10-22T01:40:47.269Z",
              "duration": 146,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:40:47.417Z",
              "duration": 39,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:40:47.457Z",
              "duration": 966,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:40:48.413Z",
                  "duration": 10,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-f241a8261c9c5e656d192ce7c2d95a28031a8abe",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 2146,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2146,
          "startTime": "2021-10-22T01:40:48.425Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:40:48.425Z",
              "duration": 52,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:40:48.431Z",
                  "duration": 45,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:40:48.477Z",
              "duration": 1077,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:40:49.554Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:40:49.560Z",
              "duration": 693,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-10-22T01:40:50.254Z",
              "duration": 83,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:40:50.338Z",
              "duration": 11,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:40:50.349Z",
              "duration": 221,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:40:50.561Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-ea73a09ea76d88da1697c08b9399710d5669087f",
      "title": "should match cart badge with items in cart",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2072,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2072,
          "startTime": "2021-10-22T01:40:50.571Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:40:50.572Z",
              "duration": 45,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:40:50.578Z",
                  "duration": 38,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:40:50.618Z",
              "duration": 1002,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:40:51.620Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:40:51.626Z",
              "duration": 752,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:40:52.380Z",
              "duration": 17,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:40:52.398Z",
              "duration": 25,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:40:52.423Z",
              "duration": 220,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:40:52.632Z",
                  "duration": 10,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-470c6ee854ace681f98bd207338afb6e55fb4e97",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2681,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2681,
          "startTime": "2021-10-22T01:40:53.100Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:40:53.100Z",
              "duration": 400,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:40:53.404Z",
                  "duration": 96,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:40:53.504Z",
              "duration": 1021,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:40:54.527Z",
              "duration": 13,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-10-22T01:40:54.541Z",
              "duration": 819,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:40:55.361Z",
              "duration": 18,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-name)",
              "startTime": "2021-10-22T01:40:55.380Z",
              "duration": 17,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-description)",
              "startTime": "2021-10-22T01:40:55.397Z",
              "duration": 8,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-price)",
              "startTime": "2021-10-22T01:40:55.405Z",
              "duration": 6,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=4 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-10-22T01:40:55.413Z",
              "duration": 60,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-10-22T01:40:55.475Z",
              "duration": 57,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:40:55.536Z",
              "duration": 4,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-22T01:40:55.541Z",
              "duration": 7,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-22T01:40:55.548Z",
              "duration": 14,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-22T01:40:55.562Z",
              "duration": 5,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-10-22T01:40:55.569Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:40:55.571Z",
              "duration": 210,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:40:55.769Z",
                  "duration": 10,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2933129bd736ea268e1ae39f917639420caf8f51",
      "title": "should be possible to remove product from cart",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 16053,
      "outcome": "unexpected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 7346,
          "startTime": "2021-10-22T01:40:52.742Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:40:52.742Z",
              "duration": 53,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:40:52.750Z",
                  "duration": 45,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:40:52.795Z",
              "duration": 1217,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:40:54.015Z",
              "duration": 12,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:40:54.029Z",
              "duration": 703,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:40:54.733Z",
              "duration": 56,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-22T01:40:54.790Z",
              "duration": 80,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:40:54.871Z",
              "duration": 5004,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:40:59.876Z",
              "duration": 212,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:41:00.081Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n  69 |         await inventoryItemController.removeFromCart()\n> 70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n     |                                                                                ^\n  71 |     })\n  72 |\n  73 |     test(\"should be possible to open sidemenu @slow @smoke\", async ({ navigationBarController, page }) => {\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:70:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/28452731134ffb030135af3454507c8da19d15f1.png"
            }
          ]
        },
        {
          "duration": 8707,
          "startTime": "2021-10-22T01:41:01.150Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:41:01.150Z",
              "duration": 150,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:41:01.160Z",
                  "duration": 140,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:41:01.300Z",
              "duration": 1434,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:41:02.735Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:41:02.742Z",
              "duration": 747,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:41:03.490Z",
              "duration": 32,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-22T01:41:03.523Z",
              "duration": 51,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:41:03.574Z",
              "duration": 5008,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:41:08.582Z",
              "duration": 1275,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:41:09.037Z",
                  "duration": 816,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n  69 |         await inventoryItemController.removeFromCart()\n> 70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n     |                                                                                ^\n  71 |     })\n  72 |\n  73 |     test(\"should be possible to open sidemenu @slow @smoke\", async ({ navigationBarController, page }) => {\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:70:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "data/4d1f1c2469d1495500f0c05de0ee2c42b78bf7d0.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "data/6fd4f95ff0be484d6bca7ede9a56206bbffd14f5.zip"
            },
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/28452731134ffb030135af3454507c8da19d15f1.png"
            }
          ]
        }
      ],
      "ok": false
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-68211d561063745ed0a8a10a195c4c325fc2710d",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2112,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2112,
          "startTime": "2021-10-22T01:40:55.782Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:40:55.783Z",
              "duration": 57,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:40:55.788Z",
                  "duration": 52,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:40:55.841Z",
              "duration": 1005,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:40:56.846Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:40:56.852Z",
              "duration": 746,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:40:57.599Z",
              "duration": 57,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-22T01:40:57.657Z",
              "duration": 9,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:40:57.666Z",
              "duration": 228,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:40:57.883Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-ac5aef6d0cb9749b41cd2af60db89d0453aa66c2",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3254,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3254,
          "startTime": "2021-10-22T01:40:57.895Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:40:57.895Z",
              "duration": 45,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:40:57.901Z",
                  "duration": 39,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:40:57.940Z",
              "duration": 1018,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:40:58.958Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:40:58.966Z",
              "duration": 691,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:40:59.657Z",
              "duration": 64,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:40:59.722Z",
              "duration": 11,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:40:59.734Z",
              "duration": 540,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-10-22T01:41:00.274Z",
              "duration": 33,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:41:00.308Z",
              "duration": 525,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-10-22T01:41:00.834Z",
              "duration": 13,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:41:00.847Z",
              "duration": 302,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:41:01.143Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-07462a1e1ee3fb5bbcd6a7dda62980f4a51de806",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 18158,
      "outcome": "unexpected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 8473,
          "startTime": "2021-10-22T01:41:00.599Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:41:00.600Z",
              "duration": 353,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:41:00.855Z",
                  "duration": 98,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:41:00.954Z",
              "duration": 1368,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:41:02.323Z",
              "duration": 14,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:41:02.337Z",
              "duration": 689,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:41:03.028Z",
              "duration": 41,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:41:03.070Z",
              "duration": 66,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:41:03.137Z",
              "duration": 10,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:41:03.148Z",
              "duration": 534,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-22T01:41:03.684Z",
              "duration": 41,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:41:03.726Z",
              "duration": 5005,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:41:08.732Z",
              "duration": 340,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:41:09.051Z",
                  "duration": 20,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n  113 |         await navigationBarController.resetState()\n> 114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })\n  116 |\n  117 |     test(\"should back at Invetory page when clicking at the all items link on menu\", async ({\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:114:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/57cfda7e885d452e7d92dc9baf12cbfac05af831.png"
            }
          ]
        },
        {
          "duration": 9685,
          "startTime": "2021-10-22T01:41:10.596Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:41:10.597Z",
              "duration": 387,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:41:10.906Z",
                  "duration": 78,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:41:10.986Z",
              "duration": 1302,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:41:12.289Z",
              "duration": 10,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:41:12.300Z",
              "duration": 765,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:41:13.067Z",
              "duration": 41,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:41:13.109Z",
              "duration": 76,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:41:13.186Z",
              "duration": 23,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:41:13.210Z",
              "duration": 578,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-22T01:41:13.791Z",
              "duration": 83,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:41:13.876Z",
              "duration": 5015,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:41:18.891Z",
              "duration": 1390,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:41:19.333Z",
                  "duration": 945,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n  113 |         await navigationBarController.resetState()\n> 114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })\n  116 |\n  117 |     test(\"should back at Invetory page when clicking at the all items link on menu\", async ({\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:114:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "data/6a57a75a0401e4d6ed275ec7afa321d93b1045f4.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "data/af264a4794a3c890c00b763adc79ffe77af01b17.zip"
            },
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/57cfda7e885d452e7d92dc9baf12cbfac05af831.png"
            }
          ]
        }
      ],
      "ok": false
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-4c353f8683c2a7da82bf21ac75cfae12a03d9845",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 4408,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 4408,
          "startTime": "2021-10-22T01:41:09.624Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:41:09.624Z",
              "duration": 460,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:41:09.974Z",
                  "duration": 103,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:41:10.085Z",
              "duration": 1220,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:41:11.306Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:41:11.315Z",
              "duration": 739,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:41:12.056Z",
              "duration": 67,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-10-22T01:41:12.124Z",
              "duration": 631,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:41:12.757Z",
              "duration": 27,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:41:12.784Z",
              "duration": 1248,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:41:14.014Z",
                  "duration": 17,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-67bcfe056128af936df9c71a2ff31ae3e97e7e76",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 2071,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2071,
          "startTime": "2021-10-22T01:41:14.033Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:41:14.033Z",
              "duration": 56,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:41:14.044Z",
                  "duration": 44,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:41:14.089Z",
              "duration": 1028,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:41:15.117Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:41:15.123Z",
              "duration": 689,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:41:15.813Z",
              "duration": 55,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-10-22T01:41:15.869Z",
              "duration": 10,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:41:15.879Z",
              "duration": 224,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:41:16.094Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2a5071cd9a64c8d2aa893344aa5c10e3434ac021",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 2633,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2633,
          "startTime": "2021-10-22T01:41:16.104Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:41:16.105Z",
              "duration": 50,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:41:16.110Z",
                  "duration": 45,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:41:16.156Z",
              "duration": 986,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:41:17.143Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:41:17.148Z",
              "duration": 737,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:41:17.886Z",
              "duration": 64,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-10-22T01:41:17.951Z",
              "duration": 564,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:41:18.516Z",
              "duration": 9,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:41:18.525Z",
              "duration": 212,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:41:18.730Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-08c3538c45f177e38485394bbcdcd00595886665",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 3827,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3827,
          "startTime": "2021-10-22T01:42:33.273Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:42:33.273Z",
              "duration": 708,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:42:33.804Z",
                  "duration": 176,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:42:33.982Z",
              "duration": 1215,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:42:35.199Z",
              "duration": 9,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:42:35.208Z",
              "duration": 751,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-10-22T01:42:35.960Z",
              "duration": 180,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:42:36.142Z",
              "duration": 37,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:42:36.180Z",
              "duration": 920,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:42:37.090Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-f277fd7873880f7b85c79b54d4684e7cb90c4069",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 2672,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2672,
          "startTime": "2021-10-22T01:42:33.586Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:42:33.592Z",
              "duration": 388,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:42:33.805Z",
                  "duration": 175,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:42:33.991Z",
              "duration": 1224,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:42:35.216Z",
              "duration": 12,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:42:35.228Z",
              "duration": 723,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-10-22T01:42:35.953Z",
              "duration": 82,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:42:36.037Z",
              "duration": 19,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:42:36.057Z",
              "duration": 201,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:42:36.231Z",
                  "duration": 26,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-74b8fb413f87431a7067182f95bb79136cca942e",
      "title": "should match cart badge with items in cart",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 1961,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1961,
          "startTime": "2021-10-22T01:42:36.259Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:42:36.259Z",
              "duration": 79,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:42:36.269Z",
                  "duration": 68,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:42:36.338Z",
              "duration": 990,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:42:37.328Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:42:37.334Z",
              "duration": 736,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:42:38.071Z",
              "duration": 16,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:42:38.088Z",
              "duration": 13,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:42:38.101Z",
              "duration": 119,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:42:38.193Z",
                  "duration": 26,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-22db55b5b8f840550afcd6286e67258345240979",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2329,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2329,
          "startTime": "2021-10-22T01:42:37.103Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:42:37.103Z",
              "duration": 49,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:42:37.112Z",
                  "duration": 40,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:42:37.153Z",
              "duration": 1004,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:42:38.158Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-10-22T01:42:38.164Z",
              "duration": 915,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:42:39.080Z",
              "duration": 18,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-22T01:42:39.099Z",
              "duration": 16,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-22T01:42:39.115Z",
              "duration": 8,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-22T01:42:39.123Z",
              "duration": 8,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=0 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-10-22T01:42:39.132Z",
              "duration": 116,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-10-22T01:42:39.249Z",
              "duration": 58,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:42:39.308Z",
              "duration": 6,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-22T01:42:39.314Z",
              "duration": 5,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-22T01:42:39.320Z",
              "duration": 5,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-22T01:42:39.325Z",
              "duration": 6,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-10-22T01:42:39.331Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:42:39.332Z",
              "duration": 100,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:42:39.421Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-e84545cf1e4e6556b996527ef1c47d0b3523717b",
      "title": "should be possible to remove product from cart",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 15589,
      "outcome": "unexpected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 7150,
          "startTime": "2021-10-22T01:42:38.220Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:42:38.221Z",
              "duration": 53,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:42:38.226Z",
                  "duration": 47,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:42:38.274Z",
              "duration": 1094,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:42:39.369Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:42:39.375Z",
              "duration": 833,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:42:40.209Z",
              "duration": 21,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-22T01:42:40.230Z",
              "duration": 31,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:42:40.262Z",
              "duration": 5005,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:42:45.267Z",
              "duration": 103,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:42:45.358Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n  69 |         await inventoryItemController.removeFromCart()\n> 70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n     |                                                                                ^\n  71 |     })\n  72 |\n  73 |     test(\"should be possible to open sidemenu @slow @smoke\", async ({ navigationBarController, page }) => {\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:70:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/c092b784d9c2128a8e8bec407077831d8dca172e.png"
            }
          ]
        },
        {
          "duration": 8439,
          "startTime": "2021-10-22T01:42:49.115Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:42:49.116Z",
              "duration": 57,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:42:49.122Z",
                  "duration": 51,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:42:49.174Z",
              "duration": 1149,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:42:50.324Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:42:50.330Z",
              "duration": 769,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:42:51.099Z",
              "duration": 24,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-22T01:42:51.124Z",
              "duration": 46,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:42:51.171Z",
              "duration": 5007,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:42:56.179Z",
              "duration": 1375,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:42:56.383Z",
                  "duration": 1168,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n  69 |         await inventoryItemController.removeFromCart()\n> 70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n     |                                                                                ^\n  71 |     })\n  72 |\n  73 |     test(\"should be possible to open sidemenu @slow @smoke\", async ({ navigationBarController, page }) => {\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:70:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "data/143eb47d7f9f79bd6d9e75ad6d24335006f11f56.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "data/293ce9efa3a1caf51242c97ab03713af180471e5.zip"
            },
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/c092b784d9c2128a8e8bec407077831d8dca172e.png"
            }
          ]
        }
      ],
      "ok": false
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-c9461eb8e81e25c07203ae1b4f343bc715ca3b47",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2001,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2001,
          "startTime": "2021-10-22T01:42:39.433Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:42:39.433Z",
              "duration": 76,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:42:39.439Z",
                  "duration": 70,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:42:39.509Z",
              "duration": 1054,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:42:40.563Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:42:40.569Z",
              "duration": 673,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:42:41.242Z",
              "duration": 55,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-22T01:42:41.298Z",
              "duration": 8,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:42:41.306Z",
              "duration": 128,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:42:41.427Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-e206ad4ac61845f7a62ba3447ca9f789849440fd",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3000,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3000,
          "startTime": "2021-10-22T01:42:41.436Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:42:41.436Z",
              "duration": 48,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:42:41.440Z",
                  "duration": 44,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:42:41.485Z",
              "duration": 961,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:42:42.447Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:42:42.452Z",
              "duration": 722,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:42:43.175Z",
              "duration": 53,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:42:43.229Z",
              "duration": 9,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:42:43.238Z",
              "duration": 523,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-10-22T01:42:43.761Z",
              "duration": 40,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:42:43.801Z",
              "duration": 509,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-10-22T01:42:44.310Z",
              "duration": 8,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:42:44.319Z",
              "duration": 117,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:42:44.428Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-1a2fc9ff27c464e86654313182abfa447a55f47f",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 16441,
      "outcome": "unexpected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 7550,
          "startTime": "2021-10-22T01:42:44.436Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:42:44.436Z",
              "duration": 43,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:42:44.444Z",
                  "duration": 35,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:42:44.480Z",
              "duration": 983,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:42:45.464Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:42:45.470Z",
              "duration": 725,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:42:46.196Z",
              "duration": 38,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:42:46.235Z",
              "duration": 49,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:42:46.284Z",
              "duration": 24,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:42:46.309Z",
              "duration": 519,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-22T01:42:46.829Z",
              "duration": 41,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:42:46.871Z",
              "duration": 5005,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:42:51.876Z",
              "duration": 110,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:42:51.968Z",
                  "duration": 17,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n  113 |         await navigationBarController.resetState()\n> 114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })\n  116 |\n  117 |     test(\"should back at Invetory page when clicking at the all items link on menu\", async ({\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:114:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/cacdd7afbb42a5c0be338ed359c4179d3db54f41.png"
            }
          ]
        },
        {
          "duration": 8891,
          "startTime": "2021-10-22T01:42:54.508Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:42:54.509Z",
              "duration": 50,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:42:54.520Z",
                  "duration": 39,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:42:54.560Z",
              "duration": 1181,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:42:55.742Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:42:55.749Z",
              "duration": 717,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:42:56.467Z",
              "duration": 29,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:42:56.496Z",
              "duration": 58,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:42:56.555Z",
              "duration": 35,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:42:56.591Z",
              "duration": 524,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-22T01:42:57.115Z",
              "duration": 70,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:42:57.186Z",
              "duration": 5015,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:43:02.202Z",
              "duration": 1197,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:43:02.435Z",
                  "duration": 962,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n  113 |         await navigationBarController.resetState()\n> 114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })\n  116 |\n  117 |     test(\"should back at Invetory page when clicking at the all items link on menu\", async ({\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:114:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "data/ec37635c7d108abaec26b9a7bcc28e1347b98fe1.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "data/dce24de77eb22bec0d9f0b64fc7888e49bbfa91e.zip"
            },
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/cacdd7afbb42a5c0be338ed359c4179d3db54f41.png"
            }
          ]
        }
      ],
      "ok": false
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-cf8c89ec0fcfbc3165934adc2e8c3d0ad2f97e6f",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3207,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3207,
          "startTime": "2021-10-22T01:42:45.908Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:42:45.908Z",
              "duration": 156,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:42:46.021Z",
                  "duration": 42,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:42:46.069Z",
              "duration": 989,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:42:47.060Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:42:47.067Z",
              "duration": 665,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:42:47.733Z",
              "duration": 66,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-10-22T01:42:47.800Z",
              "duration": 606,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:42:48.408Z",
              "duration": 29,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:42:48.437Z",
              "duration": 678,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:42:49.107Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-9777a997b336bc6c2cc4db538ef4b6bb546361b1",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 2021,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2021,
          "startTime": "2021-10-22T01:42:52.486Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:42:52.487Z",
              "duration": 155,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:42:52.602Z",
                  "duration": 40,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:42:52.644Z",
              "duration": 978,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:42:53.624Z",
              "duration": 10,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:42:53.634Z",
              "duration": 671,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:42:54.307Z",
              "duration": 53,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-10-22T01:42:54.362Z",
              "duration": 11,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:42:54.373Z",
              "duration": 134,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:42:54.492Z",
                  "duration": 13,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-e57549d4ba98887fb8587f2e9bbb3dcef6193c65",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 2648,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2648,
          "startTime": "2021-10-22T01:42:58.045Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:42:58.046Z",
              "duration": 162,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:42:58.167Z",
                  "duration": 40,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:42:58.209Z",
              "duration": 978,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:42:59.188Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:42:59.196Z",
              "duration": 703,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:42:59.900Z",
              "duration": 63,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-10-22T01:42:59.964Z",
              "duration": 557,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:43:00.525Z",
              "duration": 18,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:43:00.543Z",
              "duration": 150,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:43:00.674Z",
                  "duration": 16,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-5ac7e4d45c731cc66beac941b4618e790f106921",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 6483,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 6483,
          "startTime": "2021-10-22T01:44:08.854Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:44:08.855Z",
              "duration": 2915,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:44:10.691Z",
                  "duration": 1079,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:44:11.773Z",
              "duration": 1796,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:44:13.570Z",
              "duration": 10,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:44:13.581Z",
              "duration": 943,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-10-22T01:44:14.526Z",
              "duration": 197,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:44:14.725Z",
              "duration": 102,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:44:14.827Z",
              "duration": 510,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:44:15.314Z",
                  "duration": 18,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-d1b6bd5298c17a2c5578f22dfab42e061f8b81b9",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 5987,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 5987,
          "startTime": "2021-10-22T01:44:09.368Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:44:09.368Z",
              "duration": 2986,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:44:11.363Z",
                  "duration": 990,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:44:12.357Z",
              "duration": 1671,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:44:14.029Z",
              "duration": 16,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:44:14.046Z",
              "duration": 974,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-10-22T01:44:15.021Z",
              "duration": 189,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:44:15.212Z",
              "duration": 28,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:44:15.240Z",
              "duration": 115,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:44:15.322Z",
                  "duration": 32,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-43fd61b1bec9604e54bc353eccb646339728e7e0",
      "title": "should match cart badge with items in cart",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2816,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2816,
          "startTime": "2021-10-22T01:44:15.339Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:44:15.340Z",
              "duration": 348,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:44:15.366Z",
                  "duration": 321,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:44:15.689Z",
              "duration": 1264,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:44:16.953Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:44:16.961Z",
              "duration": 1018,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:44:17.980Z",
              "duration": 42,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:44:18.022Z",
              "duration": 51,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:44:18.073Z",
              "duration": 82,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:44:18.141Z",
                  "duration": 13,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-016a9cd7c91570d05e9562083720e00cb00cfd6f",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 3402,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3402,
          "startTime": "2021-10-22T01:44:15.356Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:44:15.356Z",
              "duration": 410,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:44:15.407Z",
                  "duration": 358,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:44:15.767Z",
              "duration": 1339,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:44:17.106Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-10-22T01:44:17.114Z",
              "duration": 1112,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:44:18.228Z",
              "duration": 23,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-name)",
              "startTime": "2021-10-22T01:44:18.252Z",
              "duration": 30,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-description)",
              "startTime": "2021-10-22T01:44:18.282Z",
              "duration": 15,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-price)",
              "startTime": "2021-10-22T01:44:18.297Z",
              "duration": 21,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=1 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-10-22T01:44:18.319Z",
              "duration": 118,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-10-22T01:44:18.438Z",
              "duration": 122,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:44:18.567Z",
              "duration": 17,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-22T01:44:18.584Z",
              "duration": 39,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-22T01:44:18.624Z",
              "duration": 20,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-22T01:44:18.644Z",
              "duration": 20,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-10-22T01:44:18.665Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:44:18.666Z",
              "duration": 92,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:44:18.741Z",
                  "duration": 17,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2d67088e6c5e56d68d56a79cf44c42f394afa7da",
      "title": "should be possible to remove product from cart",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 18709,
      "outcome": "unexpected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 8109,
          "startTime": "2021-10-22T01:44:18.156Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:44:18.157Z",
              "duration": 341,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:44:18.180Z",
                  "duration": 318,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:44:18.499Z",
              "duration": 1482,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:44:19.981Z",
              "duration": 11,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:44:19.993Z",
              "duration": 1055,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:44:21.048Z",
              "duration": 38,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-22T01:44:21.087Z",
              "duration": 87,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:44:21.174Z",
              "duration": 5006,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:44:26.181Z",
              "duration": 84,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:44:26.250Z",
                  "duration": 15,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n  69 |         await inventoryItemController.removeFromCart()\n> 70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n     |                                                                                ^\n  71 |     })\n  72 |\n  73 |     test(\"should be possible to open sidemenu @slow @smoke\", async ({ navigationBarController, page }) => {\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:70:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/8805a135e1d1aafded7443d25ea14bab37237cd9.png"
            }
          ]
        },
        {
          "duration": 10600,
          "startTime": "2021-10-22T01:44:32.466Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:44:32.466Z",
              "duration": 280,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:44:32.504Z",
                  "duration": 241,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:44:32.747Z",
              "duration": 1658,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:44:34.406Z",
              "duration": 56,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:44:34.463Z",
              "duration": 747,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:44:35.215Z",
              "duration": 131,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-22T01:44:35.347Z",
              "duration": 241,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:44:35.589Z",
              "duration": 5017,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:44:40.606Z",
              "duration": 2460,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:44:41.592Z",
                  "duration": 1469,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n  69 |         await inventoryItemController.removeFromCart()\n> 70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n     |                                                                                ^\n  71 |     })\n  72 |\n  73 |     test(\"should be possible to open sidemenu @slow @smoke\", async ({ navigationBarController, page }) => {\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:70:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "data/42f3dd35b48550c807c6622f3d450bc167c7f1ad.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "data/62876f63005c7055b82bd8d2b60635939acb3bfe.zip"
            },
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/8805a135e1d1aafded7443d25ea14bab37237cd9.png"
            }
          ]
        }
      ],
      "ok": false
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-bf5ff46e80f9c87d764c3fd1978359aa342d54d2",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2963,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2963,
          "startTime": "2021-10-22T01:44:18.759Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:44:18.759Z",
              "duration": 405,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:44:18.812Z",
                  "duration": 352,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:44:19.165Z",
              "duration": 1340,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:44:20.506Z",
              "duration": 17,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:44:20.524Z",
              "duration": 1004,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:44:21.529Z",
              "duration": 81,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-22T01:44:21.611Z",
              "duration": 34,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:44:21.645Z",
              "duration": 77,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:44:21.710Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-a0013357b8a2ca505a0ad70c92b1f801c9d90c57",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3173,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3173,
          "startTime": "2021-10-22T01:44:21.722Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:44:21.723Z",
              "duration": 253,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:44:21.746Z",
                  "duration": 230,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:44:21.977Z",
              "duration": 1134,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:44:23.111Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:44:23.120Z",
              "duration": 911,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:44:24.032Z",
              "duration": 99,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:44:24.132Z",
              "duration": 36,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:44:24.169Z",
              "duration": 51,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-10-22T01:44:24.220Z",
              "duration": 67,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:44:24.287Z",
              "duration": 519,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-10-22T01:44:24.807Z",
              "duration": 17,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:44:24.824Z",
              "duration": 71,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:44:24.883Z",
                  "duration": 12,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-b9e853903197cb756aa4721301bdf0d3978722dd",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 20070,
      "outcome": "unexpected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 8126,
          "startTime": "2021-10-22T01:44:24.896Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:44:24.896Z",
              "duration": 249,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:44:24.922Z",
                  "duration": 223,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:44:25.146Z",
              "duration": 1167,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:44:26.314Z",
              "duration": 10,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:44:26.324Z",
              "duration": 1118,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:44:27.443Z",
              "duration": 37,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:44:27.480Z",
              "duration": 114,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:44:27.595Z",
              "duration": 65,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:44:27.661Z",
              "duration": 60,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-22T01:44:27.722Z",
              "duration": 96,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:44:27.819Z",
              "duration": 5006,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:44:32.826Z",
              "duration": 196,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:44:32.973Z",
                  "duration": 48,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n  113 |         await navigationBarController.resetState()\n> 114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })\n  116 |\n  117 |     test(\"should back at Invetory page when clicking at the all items link on menu\", async ({\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:114:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/962897d07f6a700d7531691d35735158cca0f4d2.png"
            }
          ]
        },
        {
          "duration": 11944,
          "startTime": "2021-10-22T01:44:39.848Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:44:39.849Z",
              "duration": 341,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:44:39.882Z",
                  "duration": 308,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:44:40.192Z",
              "duration": 1781,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:44:41.973Z",
              "duration": 41,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:44:42.015Z",
              "duration": 1214,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:44:43.230Z",
              "duration": 97,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:44:43.328Z",
              "duration": 256,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:44:43.585Z",
              "duration": 74,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:44:43.659Z",
              "duration": 471,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-22T01:44:44.130Z",
              "duration": 148,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:44:44.279Z",
              "duration": 5013,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:44:49.293Z",
              "duration": 2499,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:44:50.261Z",
                  "duration": 1528,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n  113 |         await navigationBarController.resetState()\n> 114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })\n  116 |\n  117 |     test(\"should back at Invetory page when clicking at the all items link on menu\", async ({\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:114:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "data/f66d46faa307496e028e134d26b230303fe8444d.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "data/e73392e6ac46d9fc7081a29e7b6afb20c665d25e.zip"
            },
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/962897d07f6a700d7531691d35735158cca0f4d2.png"
            }
          ]
        }
      ],
      "ok": false
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-e17493f3904e05eaff9213797fd57459a3d4fc28",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 4879,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 4879,
          "startTime": "2021-10-22T01:44:27.586Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:44:27.587Z",
              "duration": 1871,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:44:28.844Z",
                  "duration": 614,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:44:29.459Z",
              "duration": 1345,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:44:30.805Z",
              "duration": 14,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:44:30.820Z",
              "duration": 917,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:44:31.738Z",
              "duration": 101,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-10-22T01:44:31.840Z",
              "duration": 132,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:44:31.976Z",
              "duration": 89,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:44:32.065Z",
              "duration": 400,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:44:32.441Z",
                  "duration": 23,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-92a6e24049168102b044c1d4ce7eb8a8765a9173",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 5052,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 5052,
          "startTime": "2021-10-22T01:44:34.795Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:44:34.796Z",
              "duration": 2339,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:44:36.434Z",
                  "duration": 700,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:44:37.138Z",
              "duration": 1434,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:44:38.573Z",
              "duration": 15,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:44:38.589Z",
              "duration": 968,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:44:39.559Z",
              "duration": 136,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-10-22T01:44:39.697Z",
              "duration": 55,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:44:39.752Z",
              "duration": 95,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:44:39.826Z",
                  "duration": 21,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-950ca122575112953daf74e6bbb57b54bb4f5d84",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 5421,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 5421,
          "startTime": "2021-10-22T01:44:44.415Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:44:44.416Z",
              "duration": 2063,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:44:45.882Z",
                  "duration": 597,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:44:46.481Z",
              "duration": 1422,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:44:47.905Z",
              "duration": 10,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:44:47.915Z",
              "duration": 1002,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:44:48.918Z",
              "duration": 120,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-10-22T01:44:49.039Z",
              "duration": 633,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:44:49.675Z",
              "duration": 35,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:44:49.711Z",
              "duration": 125,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:44:49.816Z",
                  "duration": 20,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-edbea7a7833c0a848b7e9efb41c019b571fbdb6c",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 6202,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 6202,
          "startTime": "2021-10-22T01:46:33.687Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:46:33.687Z",
              "duration": 1109,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:46:34.291Z",
                  "duration": 505,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:46:34.798Z",
              "duration": 3394,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:46:38.193Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:46:38.201Z",
              "duration": 883,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-10-22T01:46:39.086Z",
              "duration": 278,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:46:39.368Z",
              "duration": 303,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:46:39.671Z",
              "duration": 218,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:46:39.881Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-d591eeddf10e4f55f1ffba07a655c855c85b0fdc",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 3856,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3856,
          "startTime": "2021-10-22T01:46:35.384Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:46:35.385Z",
              "duration": 593,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:46:35.792Z",
                  "duration": 186,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:46:35.980Z",
              "duration": 2213,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:46:38.194Z",
              "duration": 10,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:46:38.205Z",
              "duration": 796,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-10-22T01:46:39.003Z",
              "duration": 134,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:46:39.139Z",
              "duration": 41,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:46:39.180Z",
              "duration": 60,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:46:39.235Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2ce8236fa6f9d18603004ecb93e12397994c3002",
      "title": "should match cart badge with items in cart",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2773,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2773,
          "startTime": "2021-10-22T01:46:39.246Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:46:39.247Z",
              "duration": 284,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:46:39.270Z",
                  "duration": 259,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:46:39.532Z",
              "duration": 1569,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:46:41.102Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:46:41.107Z",
              "duration": 725,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:46:41.834Z",
              "duration": 76,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:46:41.911Z",
              "duration": 45,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:46:41.956Z",
              "duration": 63,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:46:42.014Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-85d94cb033c69722e4a5989fa1793736fd79c776",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2910,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2910,
          "startTime": "2021-10-22T01:46:39.890Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:46:39.890Z",
              "duration": 284,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:46:39.918Z",
                  "duration": 256,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:46:40.175Z",
              "duration": 1207,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:46:41.382Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-10-22T01:46:41.388Z",
              "duration": 813,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:46:42.203Z",
              "duration": 34,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-name)",
              "startTime": "2021-10-22T01:46:42.238Z",
              "duration": 28,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-description)",
              "startTime": "2021-10-22T01:46:42.266Z",
              "duration": 85,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-price)",
              "startTime": "2021-10-22T01:46:42.351Z",
              "duration": 24,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=2 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-10-22T01:46:42.376Z",
              "duration": 92,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-10-22T01:46:42.469Z",
              "duration": 195,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:46:42.665Z",
              "duration": 30,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-22T01:46:42.695Z",
              "duration": 11,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-22T01:46:42.707Z",
              "duration": 18,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-22T01:46:42.726Z",
              "duration": 14,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-10-22T01:46:42.741Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:46:42.742Z",
              "duration": 58,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:46:42.796Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-a9281ad6fd27826e7b628b09c4d058667be77616",
      "title": "should be possible to remove product from cart",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 16151,
      "outcome": "unexpected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 7587,
          "startTime": "2021-10-22T01:46:42.020Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:46:42.020Z",
              "duration": 204,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:46:42.031Z",
                  "duration": 193,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:46:42.225Z",
              "duration": 1418,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:46:43.644Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:46:43.650Z",
              "duration": 717,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:46:44.368Z",
              "duration": 43,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-22T01:46:44.412Z",
              "duration": 108,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:46:44.521Z",
              "duration": 5005,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:46:49.526Z",
              "duration": 81,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:46:49.583Z",
                  "duration": 18,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n  69 |         await inventoryItemController.removeFromCart()\n> 70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n     |                                                                                ^\n  71 |     })\n  72 |\n  73 |     test(\"should be possible to open sidemenu @slow @smoke\", async ({ navigationBarController, page }) => {\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:70:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/464cdcc61f2a644519edd2010b07d078091227e7.png"
            }
          ]
        },
        {
          "duration": 8564,
          "startTime": "2021-10-22T01:46:50.878Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:46:50.879Z",
              "duration": 812,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:46:51.449Z",
                  "duration": 239,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:46:51.693Z",
              "duration": 1422,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:46:53.116Z",
              "duration": 10,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:46:53.127Z",
              "duration": 736,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:46:53.866Z",
              "duration": 103,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-22T01:46:53.970Z",
              "duration": 134,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:46:54.104Z",
              "duration": 5058,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:46:59.163Z",
              "duration": 279,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:46:59.412Z",
                  "duration": 26,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n  69 |         await inventoryItemController.removeFromCart()\n> 70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n     |                                                                                ^\n  71 |     })\n  72 |\n  73 |     test(\"should be possible to open sidemenu @slow @smoke\", async ({ navigationBarController, page }) => {\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:70:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "data/e25c5e9e146140cba08b8324a11df346552d72be.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "data/26be48c530a5e990e128172cd9e2095961e18a23.zip"
            },
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/464cdcc61f2a644519edd2010b07d078091227e7.png"
            }
          ]
        }
      ],
      "ok": false
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-bceda6d48c5351b5215247a752d3579fc11fb2fd",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 10704,
      "outcome": "flaky",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 7327,
          "startTime": "2021-10-22T01:46:42.801Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:46:42.801Z",
              "duration": 255,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:46:42.820Z",
                  "duration": 236,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:46:43.057Z",
              "duration": 1223,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:46:44.280Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:46:44.286Z",
              "duration": 685,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:46:44.972Z",
              "duration": 64,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-22T01:46:45.037Z",
              "duration": 5006,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              },
              "error": "expect(received).toBeVisible()\n\nCall log:\n  - waiting for selector \".bm-menu-wrap\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:46:50.043Z",
              "duration": 85,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:46:50.116Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toBeVisible()\n\nCall log:\n  - waiting for selector \".bm-menu-wrap\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n  -   selector resolved to <div id=\"\" hidden=\"true\" aria-hidden=\"false\" class=\"b…>…</div>\n  -   unexpected value \"false\"\n\n\n  77 |         })\n  78 |         await navigationBarController.openMenu()\n> 79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n     |                                                                           ^\n  80 |     })\n  81 |\n  82 |     test(\"should be possible to close sidemenu clicking at the X button @slow\", async ({\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:79:75\n    at runMicrotasks (<anonymous>)\n    at runNextTicks (internal/process/task_queues.js:60:5)\n    at processImmediate (internal/timers.js:437:9)\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/464cdcc61f2a644519edd2010b07d078091227e7.png"
            }
          ]
        },
        {
          "duration": 3377,
          "startTime": "2021-10-22T01:46:54.833Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:46:54.833Z",
              "duration": 194,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:46:54.842Z",
                  "duration": 184,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:46:55.027Z",
              "duration": 1204,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:46:56.232Z",
              "duration": 10,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:46:56.243Z",
              "duration": 795,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:46:57.039Z",
              "duration": 217,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-22T01:46:57.257Z",
              "duration": 707,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:46:57.964Z",
              "duration": 246,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:46:58.150Z",
                  "duration": 57,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "data/aa3a150fc399127f004514923fa8c20798f0ead2.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "data/933301435487c14cc73dd923911b823e7a9a9cba.zip"
            }
          ]
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-77b66b26b73f3afb87ab3fa6a80f5975302c9ad3",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 4642,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 4642,
          "startTime": "2021-10-22T01:46:50.190Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:46:50.191Z",
              "duration": 799,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:46:50.701Z",
                  "duration": 288,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:46:50.995Z",
              "duration": 1543,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:46:52.539Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:46:52.547Z",
              "duration": 802,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:46:53.351Z",
              "duration": 134,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:46:53.486Z",
              "duration": 32,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:46:53.520Z",
              "duration": 66,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-10-22T01:46:53.588Z",
              "duration": 578,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:46:54.166Z",
              "duration": 569,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-10-22T01:46:54.737Z",
              "duration": 19,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:46:54.757Z",
              "duration": 74,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:46:54.822Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-505d42db4826e616e1e73912a88161ea2de9a1ae",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 17326,
      "outcome": "unexpected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 8244,
          "startTime": "2021-10-22T01:46:58.211Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:46:58.211Z",
              "duration": 279,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:46:58.241Z",
                  "duration": 249,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:46:58.491Z",
              "duration": 1341,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:46:59.832Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:46:59.839Z",
              "duration": 748,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:47:00.588Z",
              "duration": 34,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:47:00.623Z",
              "duration": 96,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:47:00.719Z",
              "duration": 40,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:47:00.759Z",
              "duration": 529,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-22T01:47:01.288Z",
              "duration": 85,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:47:01.373Z",
              "duration": 5008,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:47:06.382Z",
              "duration": 73,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:47:06.445Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n  113 |         await navigationBarController.resetState()\n> 114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })\n  116 |\n  117 |     test(\"should back at Invetory page when clicking at the all items link on menu\", async ({\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:114:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/65df906c32d2e67f0a4f52b05266f9b3d785c617.png"
            }
          ]
        },
        {
          "duration": 9082,
          "startTime": "2021-10-22T01:47:09.940Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:47:09.941Z",
              "duration": 333,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:47:09.975Z",
                  "duration": 299,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:47:10.275Z",
              "duration": 1348,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:47:11.624Z",
              "duration": 10,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:47:11.635Z",
              "duration": 798,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:47:12.433Z",
              "duration": 42,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:47:12.476Z",
              "duration": 212,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:47:12.688Z",
              "duration": 758,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:47:13.447Z",
              "duration": 81,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-22T01:47:13.529Z",
              "duration": 108,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:47:13.637Z",
              "duration": 5101,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:47:18.738Z",
              "duration": 284,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:47:18.976Z",
                  "duration": 43,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n  113 |         await navigationBarController.resetState()\n> 114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })\n  116 |\n  117 |     test(\"should back at Invetory page when clicking at the all items link on menu\", async ({\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:114:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "data/f58d941f7847c61089800dbbcf254148f3591f4e.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "data/10c567e9ecac8d87f632c671e07993b77e3b5453.zip"
            },
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "data/65df906c32d2e67f0a4f52b05266f9b3d785c617.png"
            }
          ]
        }
      ],
      "ok": false
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-6a8be8304b673e8298efb62f36f83d91380281f8",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 4001,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 4001,
          "startTime": "2021-10-22T01:46:59.993Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:46:59.993Z",
              "duration": 705,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:47:00.497Z",
                  "duration": 200,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:47:00.702Z",
              "duration": 1379,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:47:02.082Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:47:02.089Z",
              "duration": 681,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:47:02.772Z",
              "duration": 84,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-10-22T01:47:02.857Z",
              "duration": 688,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:47:03.547Z",
              "duration": 275,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:47:03.823Z",
              "duration": 171,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:47:03.983Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-0ee5683ec0948d144ce5d5585c69592abbb14c80",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 2479,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2479,
          "startTime": "2021-10-22T01:47:03.995Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:47:03.996Z",
              "duration": 249,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:47:04.013Z",
                  "duration": 232,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:47:04.246Z",
              "duration": 1235,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:47:05.481Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:47:05.488Z",
              "duration": 767,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:47:06.256Z",
              "duration": 120,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-10-22T01:47:06.376Z",
              "duration": 36,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:47:06.412Z",
              "duration": 62,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:47:06.471Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-ee7f1437df45d945cc9b5a174df360e064ec058f",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 3534,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3534,
          "startTime": "2021-10-22T01:47:06.482Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:47:06.482Z",
              "duration": 306,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:47:06.507Z",
                  "duration": 281,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:47:06.789Z",
              "duration": 1520,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:47:08.309Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:47:08.315Z",
              "duration": 794,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:47:09.110Z",
              "duration": 126,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-10-22T01:47:09.237Z",
              "duration": 662,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:47:09.900Z",
              "duration": 47,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:47:09.947Z",
              "duration": 69,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:47:10.013Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-56e977c66878d1c36f1c9e6136d90f131905a941",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 3440,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3440,
          "startTime": "2021-10-22T01:48:33.901Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:48:33.902Z",
              "duration": 995,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:48:34.429Z",
                  "duration": 467,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:48:34.899Z",
              "duration": 1336,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:48:36.236Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:48:36.243Z",
              "duration": 702,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-10-22T01:48:36.947Z",
              "duration": 142,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:48:37.092Z",
              "duration": 120,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:48:37.213Z",
              "duration": 128,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:48:37.331Z",
                  "duration": 10,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-b1f8e09f8d175292369ee5f7dc75675e4b7e729f",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 3247,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3247,
          "startTime": "2021-10-22T01:48:34.420Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:48:34.420Z",
              "duration": 830,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:48:34.932Z",
                  "duration": 318,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:48:35.263Z",
              "duration": 1375,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:48:36.639Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:48:36.646Z",
              "duration": 703,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-10-22T01:48:37.350Z",
              "duration": 178,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:48:37.530Z",
              "duration": 35,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:48:37.566Z",
              "duration": 101,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:48:37.654Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-41a39cff945159b813dc7aa3261745ade5db3a7f",
      "title": "should match cart badge with items in cart",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2464,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2464,
          "startTime": "2021-10-22T01:48:37.342Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:48:37.343Z",
              "duration": 337,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:48:37.357Z",
                  "duration": 322,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:48:37.680Z",
              "duration": 1265,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:48:38.946Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:48:38.951Z",
              "duration": 734,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:48:39.686Z",
              "duration": 23,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:48:39.710Z",
              "duration": 27,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:48:39.737Z",
              "duration": 69,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:48:39.803Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-cbed407a55cbac043d829e3c6ffcff6515dd07b4",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 3239,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3239,
          "startTime": "2021-10-22T01:48:37.668Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:48:37.669Z",
              "duration": 368,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:48:37.705Z",
                  "duration": 331,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:48:38.038Z",
              "duration": 1210,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:48:39.248Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-10-22T01:48:39.254Z",
              "duration": 841,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:48:40.096Z",
              "duration": 120,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-22T01:48:40.217Z",
              "duration": 37,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-22T01:48:40.254Z",
              "duration": 25,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-22T01:48:40.280Z",
              "duration": 14,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=0 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-10-22T01:48:40.295Z",
              "duration": 150,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-10-22T01:48:40.445Z",
              "duration": 269,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:48:40.715Z",
              "duration": 45,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-22T01:48:40.761Z",
              "duration": 31,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-22T01:48:40.793Z",
              "duration": 14,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-22T01:48:40.808Z",
              "duration": 25,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-10-22T01:48:40.833Z",
              "duration": 2,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:48:40.835Z",
              "duration": 72,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:48:40.903Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-01381a81c997a9feb6e1229afd33b5520c4d6384",
      "title": "should be possible to remove product from cart",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 15790,
      "outcome": "unexpected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 7500,
          "startTime": "2021-10-22T01:48:39.807Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:48:39.807Z",
              "duration": 299,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:48:39.838Z",
                  "duration": 268,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:48:40.106Z",
              "duration": 1330,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:48:41.437Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:48:41.444Z",
              "duration": 681,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:48:42.126Z",
              "duration": 27,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-22T01:48:42.154Z",
              "duration": 65,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:48:42.219Z",
              "duration": 5006,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:48:47.225Z",
              "duration": 82,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:48:47.294Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n  69 |         await inventoryItemController.removeFromCart()\n> 70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n     |                                                                                ^\n  71 |     })\n  72 |\n  73 |     test(\"should be possible to open sidemenu @slow @smoke\", async ({ navigationBarController, page }) => {\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:70:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-be-possible-to-remove-product-from-cart-iphone-8/test-failed-1.png"
            }
          ]
        },
        {
          "duration": 8290,
          "startTime": "2021-10-22T01:48:51.694Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:48:51.694Z",
              "duration": 326,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:48:51.721Z",
                  "duration": 295,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:48:52.020Z",
              "duration": 1289,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:48:53.309Z",
              "duration": 28,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:48:53.337Z",
              "duration": 862,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:48:54.200Z",
              "duration": 67,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-22T01:48:54.268Z",
              "duration": 110,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:48:54.378Z",
              "duration": 5028,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:48:59.407Z",
              "duration": 577,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:48:59.604Z",
                  "duration": 377,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n  69 |         await inventoryItemController.removeFromCart()\n> 70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n     |                                                                                ^\n  71 |     })\n  72 |\n  73 |     test(\"should be possible to open sidemenu @slow @smoke\", async ({ navigationBarController, page }) => {\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:70:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-be-possible-to-remove-product-from-cart-iphone-8-retry1/ca5c54d2271f046ee3270ec935d10e92.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-be-possible-to-remove-product-from-cart-iphone-8-retry1/trace.zip"
            },
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-be-possible-to-remove-product-from-cart-iphone-8-retry1/test-failed-1.png"
            }
          ]
        }
      ],
      "ok": false
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-c81a3fe03909ab3766f61c4d01d54003ce8f0158",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2402,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2402,
          "startTime": "2021-10-22T01:48:40.908Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:48:40.909Z",
              "duration": 282,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:48:40.952Z",
                  "duration": 239,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:48:41.192Z",
              "duration": 1245,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:48:42.437Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:48:42.443Z",
              "duration": 688,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:48:43.131Z",
              "duration": 81,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-22T01:48:43.212Z",
              "duration": 24,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:48:43.236Z",
              "duration": 74,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:48:43.303Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-dbcd51a8882572de9ebad44b320e562cc6792c6b",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3493,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3493,
          "startTime": "2021-10-22T01:48:43.311Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:48:43.312Z",
              "duration": 242,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:48:43.320Z",
                  "duration": 234,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:48:43.555Z",
              "duration": 1158,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:48:44.714Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:48:44.719Z",
              "duration": 712,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:48:45.431Z",
              "duration": 86,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:48:45.517Z",
              "duration": 27,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:48:45.545Z",
              "duration": 580,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-10-22T01:48:46.126Z",
              "duration": 62,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:48:46.189Z",
              "duration": 538,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-10-22T01:48:46.728Z",
              "duration": 13,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:48:46.741Z",
              "duration": 63,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:48:46.801Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-9956c6ff1720a418808ed2fa5a7cb5ee6ae9b361",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 39207,
      "outcome": "unexpected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 30118,
          "startTime": "2021-10-22T01:48:46.805Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:48:46.805Z",
              "duration": 211,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:48:46.816Z",
                  "duration": 200,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:48:47.017Z",
              "duration": 1180,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:48:48.198Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:48:48.203Z",
              "duration": 843,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:48:49.047Z",
              "duration": 45,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:48:49.092Z",
              "duration": 77,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:48:49.169Z",
              "duration": 19,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:48:49.189Z",
              "duration": 89,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-22T01:48:49.279Z",
              "duration": 27643,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              },
              "error": "locator.click: Target closed\n=========================== logs ===========================\nwaiting for selector \"data-test=link-reset-state\"\n  selector resolved to hidden <a href=\"#\" tabindex=\"0\" id=\"reset_sidebar_link\" cl…>Reset App State</a>\nattempting click action\n  waiting for element to be visible, enabled and stable\n    element is not visible - waiting...\n============================================================"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:49:16.820Z",
              "duration": 103,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:49:16.916Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Timeout of 30000ms exceeded.\nPending operations:\n  - locator.click at saucedemo/pages/navigationBar/controller.js:68:32\n\nlocator.click: Target closed\n=========================== logs ===========================\nwaiting for selector \"data-test=link-reset-state\"\n  selector resolved to hidden <a href=\"#\" tabindex=\"0\" id=\"reset_sidebar_link\" cl…>Reset App State</a>\nattempting click action\n  waiting for element to be visible, enabled and stable\n    element is not visible - waiting...\n============================================================\n\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n> 113 |         await navigationBarController.resetState()\n      |                                       ^\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n  115 |     })\n  116 |\n\n    at NavigationBarController.resetState (/home/runner/work/playwright-study/playwright-study/saucedemo/pages/navigationBar/controller.js:68:32)\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:113:39\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "timedOut",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-remove-cart-items-when-clicking-at-the-reset-state-link-on-menu-iphone-8/test-failed-1.png"
            }
          ]
        },
        {
          "duration": 9089,
          "startTime": "2021-10-22T01:49:17.944Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:49:17.944Z",
              "duration": 330,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:49:17.972Z",
                  "duration": 302,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:49:18.276Z",
              "duration": 1429,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:49:19.705Z",
              "duration": 10,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:49:19.715Z",
              "duration": 760,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:49:20.475Z",
              "duration": 32,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:49:20.507Z",
              "duration": 120,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:49:20.628Z",
              "duration": 37,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:49:20.666Z",
              "duration": 591,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-22T01:49:21.258Z",
              "duration": 144,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:49:21.402Z",
              "duration": 5017,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:49:26.420Z",
              "duration": 613,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:49:26.639Z",
                  "duration": 392,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n  113 |         await navigationBarController.resetState()\n> 114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })\n  116 |\n  117 |     test(\"should back at Invetory page when clicking at the all items link on menu\", async ({\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:114:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-remove-cart-items-when-clicking-at-the-reset-state-link-on-menu-iphone-8-retry1/3b7dbaa104a8bb0fc2160c618ee97acb.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-remove-cart-items-when-clicking-at-the-reset-state-link-on-menu-iphone-8-retry1/trace.zip"
            },
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-remove-cart-items-when-clicking-at-the-reset-state-link-on-menu-iphone-8-retry1/test-failed-1.png"
            }
          ]
        }
      ],
      "ok": false
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-da528b8f6d51072468991daf0ad6779fdb8e7b12",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3835,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3835,
          "startTime": "2021-10-22T01:48:47.858Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:48:47.859Z",
              "duration": 662,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:48:48.249Z",
                  "duration": 272,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:48:48.523Z",
              "duration": 1201,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:48:49.726Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:48:49.733Z",
              "duration": 805,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:48:50.539Z",
              "duration": 119,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-10-22T01:48:50.659Z",
              "duration": 711,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:48:51.372Z",
              "duration": 161,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:48:51.533Z",
              "duration": 159,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:48:51.679Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-0cdf73fab6b0b9371e1bb74ed7e325de57cb7ad6",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 3246,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3246,
          "startTime": "2021-10-22T01:49:00.525Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:49:00.526Z",
              "duration": 950,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:49:01.140Z",
                  "duration": 336,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:49:01.496Z",
              "duration": 1252,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:49:02.749Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:49:02.756Z",
              "duration": 697,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:49:03.455Z",
              "duration": 133,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-10-22T01:49:03.604Z",
              "duration": 38,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:49:03.642Z",
              "duration": 129,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:49:03.757Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-bdc370d4fb41689fb49a5b467292eb9022ef3d51",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 3306,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3306,
          "startTime": "2021-10-22T01:49:03.774Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:49:03.782Z",
              "duration": 302,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:49:03.794Z",
                  "duration": 290,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:49:04.085Z",
              "duration": 1256,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:49:05.342Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:49:05.348Z",
              "duration": 786,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:49:06.134Z",
              "duration": 120,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-10-22T01:49:06.254Z",
              "duration": 654,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:49:06.909Z",
              "duration": 57,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:49:06.966Z",
              "duration": 114,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:49:07.075Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-665ebcc7eeaa23fef3040f64fd46b7f5826cf833",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 3529,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3529,
          "startTime": "2021-10-22T01:50:37.471Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:50:37.471Z",
              "duration": 417,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:50:37.788Z",
                  "duration": 100,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:50:37.890Z",
              "duration": 1280,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:50:39.171Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:50:39.179Z",
              "duration": 669,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-10-22T01:50:39.850Z",
              "duration": 144,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:50:39.996Z",
              "duration": 42,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:50:40.038Z",
              "duration": 962,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:50:40.979Z",
                  "duration": 19,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-32d542f9aaed635033b333618aed43d810c279aa",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 2672,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2672,
          "startTime": "2021-10-22T01:50:37.919Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:50:37.921Z",
              "duration": 492,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:50:38.319Z",
                  "duration": 93,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:50:38.414Z",
              "duration": 1067,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:50:39.482Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:50:39.490Z",
              "duration": 683,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-10-22T01:50:40.175Z",
              "duration": 95,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:50:40.272Z",
              "duration": 19,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:50:40.291Z",
              "duration": 300,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:50:40.559Z",
                  "duration": 32,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-3b8064df54065b033d171dab6fb131bf831ffe8b",
      "title": "should match cart badge with items in cart",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2315,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2315,
          "startTime": "2021-10-22T01:50:40.592Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:50:40.593Z",
              "duration": 62,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:50:40.603Z",
                  "duration": 52,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:50:40.656Z",
              "duration": 1266,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:50:41.923Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:50:41.929Z",
              "duration": 694,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:50:42.624Z",
              "duration": 18,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:50:42.642Z",
              "duration": 15,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:50:42.658Z",
              "duration": 249,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:50:42.899Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-9829c4b3ae406b9c28022368ac40e6dcefad8021",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2719,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2719,
          "startTime": "2021-10-22T01:50:41.004Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:50:41.004Z",
              "duration": 93,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:50:41.010Z",
                  "duration": 86,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:50:41.098Z",
              "duration": 1072,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:50:42.171Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-10-22T01:50:42.178Z",
              "duration": 781,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:50:42.960Z",
              "duration": 26,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-name)",
              "startTime": "2021-10-22T01:50:42.989Z",
              "duration": 45,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-description)",
              "startTime": "2021-10-22T01:50:43.035Z",
              "duration": 12,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-price)",
              "startTime": "2021-10-22T01:50:43.048Z",
              "duration": 26,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=2 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-10-22T01:50:43.075Z",
              "duration": 63,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-10-22T01:50:43.140Z",
              "duration": 263,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-22T01:50:43.403Z",
              "duration": 4,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-22T01:50:43.407Z",
              "duration": 6,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-22T01:50:43.414Z",
              "duration": 6,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-22T01:50:43.420Z",
              "duration": 6,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-10-22T01:50:43.426Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:50:43.427Z",
              "duration": 295,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:50:43.714Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-6443a4bb8db97e9bdb817321f84d4130c1c2ea14",
      "title": "should be possible to remove product from cart",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 15575,
      "outcome": "unexpected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 7344,
          "startTime": "2021-10-22T01:50:42.912Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:50:42.912Z",
              "duration": 44,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:50:42.918Z",
                  "duration": 38,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:50:42.957Z",
              "duration": 1153,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:50:44.111Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:50:44.119Z",
              "duration": 751,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:50:44.872Z",
              "duration": 38,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-22T01:50:44.911Z",
              "duration": 54,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:50:44.966Z",
              "duration": 5004,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:50:49.971Z",
              "duration": 285,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:50:50.244Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n  69 |         await inventoryItemController.removeFromCart()\n> 70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n     |                                                                                ^\n  71 |     })\n  72 |\n  73 |     test(\"should be possible to open sidemenu @slow @smoke\", async ({ navigationBarController, page }) => {\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:70:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-be-possible-to-remove-product-from-cart-pixel-4/test-failed-1.png"
            }
          ]
        },
        {
          "duration": 8231,
          "startTime": "2021-10-22T01:50:54.225Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:50:54.226Z",
              "duration": 59,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:50:54.237Z",
                  "duration": 48,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:50:54.286Z",
              "duration": 1219,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:50:55.507Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:50:55.515Z",
              "duration": 772,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:50:56.288Z",
              "duration": 26,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-22T01:50:56.314Z",
              "duration": 55,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:50:56.369Z",
              "duration": 5010,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:51:01.380Z",
              "duration": 1076,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:51:01.852Z",
                  "duration": 601,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n  69 |         await inventoryItemController.removeFromCart()\n> 70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n     |                                                                                ^\n  71 |     })\n  72 |\n  73 |     test(\"should be possible to open sidemenu @slow @smoke\", async ({ navigationBarController, page }) => {\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:70:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-be-possible-to-remove-product-from-cart-pixel-4-retry1/cc6beade7ab73e3feb786ac2eef6f648.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-be-possible-to-remove-product-from-cart-pixel-4-retry1/trace.zip"
            },
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-be-possible-to-remove-product-from-cart-pixel-4-retry1/test-failed-1.png"
            }
          ]
        }
      ],
      "ok": false
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-743a6c3f1d473448f36991de9b03c38fffb52613",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2231,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2231,
          "startTime": "2021-10-22T01:50:43.724Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:50:43.725Z",
              "duration": 57,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:50:43.729Z",
                  "duration": 53,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:50:43.783Z",
              "duration": 1059,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:50:44.842Z",
              "duration": 9,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:50:44.852Z",
              "duration": 713,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:50:45.566Z",
              "duration": 65,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-22T01:50:45.632Z",
              "duration": 9,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:50:45.641Z",
              "duration": 314,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:50:45.946Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-722c2cc67c063797371868cd5ec55dcaf80064b0",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3245,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3245,
          "startTime": "2021-10-22T01:50:45.956Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:50:45.956Z",
              "duration": 51,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:50:45.962Z",
                  "duration": 45,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:50:46.008Z",
              "duration": 994,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:50:47.003Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:50:47.009Z",
              "duration": 747,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:50:47.756Z",
              "duration": 57,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:50:47.813Z",
              "duration": 12,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:50:47.827Z",
              "duration": 532,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-10-22T01:50:48.360Z",
              "duration": 40,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:50:48.401Z",
              "duration": 507,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-10-22T01:50:48.909Z",
              "duration": 9,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:50:48.918Z",
              "duration": 283,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:50:49.193Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-36ab71caae910f0aeb9a5e3bcb1b6e2a82cfed28",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 16661,
      "outcome": "unexpected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 7743,
          "startTime": "2021-10-22T01:50:49.201Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:50:49.202Z",
              "duration": 49,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:50:49.207Z",
                  "duration": 44,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:50:49.251Z",
              "duration": 1000,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:50:50.251Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:50:50.260Z",
              "duration": 747,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:50:51.008Z",
              "duration": 35,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:50:51.043Z",
              "duration": 54,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:50:51.098Z",
              "duration": 15,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:50:51.114Z",
              "duration": 529,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-22T01:50:51.643Z",
              "duration": 43,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:50:51.687Z",
              "duration": 5004,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:50:56.692Z",
              "duration": 252,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:50:56.935Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n  113 |         await navigationBarController.resetState()\n> 114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })\n  116 |\n  117 |     test(\"should back at Invetory page when clicking at the all items link on menu\", async ({\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:114:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-remove-cart-items-when-clicking-at-the-reset-state-link-on-menu-pixel-4/test-failed-1.png"
            }
          ]
        },
        {
          "duration": 8918,
          "startTime": "2021-10-22T01:50:59.900Z",
          "retry": 1,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:50:59.900Z",
              "duration": 53,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:50:59.909Z",
                  "duration": 44,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:50:59.954Z",
              "duration": 1276,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:51:01.230Z",
              "duration": 9,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:51:01.239Z",
              "duration": 768,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-22T01:51:02.008Z",
              "duration": 30,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:51:02.038Z",
              "duration": 70,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-22T01:51:02.109Z",
              "duration": 39,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-22T01:51:02.149Z",
              "duration": 497,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-22T01:51:02.647Z",
              "duration": 69,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-22T01:51:02.716Z",
              "duration": 5009,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              },
              "error": "expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n"
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:51:07.726Z",
              "duration": 1092,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:51:08.245Z",
                  "duration": 570,
                  "steps": []
                }
              ]
            }
          ],
          "error": "Error: expect(received).toHaveCount(expected) // deep equality\n\nExpected: 0\nReceived: undefined\n\nCall log:\n  - waiting for selector \"data-test=cart-badge\"\n  -   selector resolved to 0 elements\n\n\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n  113 |         await navigationBarController.resetState()\n> 114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })\n  116 |\n  117 |     test(\"should back at Invetory page when clicking at the all items link on menu\", async ({\n\n    at /home/runner/work/playwright-study/playwright-study/tests/cart.spec.js:114:80\n    at WorkerRunner._runTestWithBeforeHooks (/home/runner/work/playwright-study/playwright-study/node_modules/@playwright/test/lib/workerRunner.js:478:7)",
          "status": "failed",
          "attachments": [
            {
              "name": "video",
              "contentType": "video/webm",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-remove-cart-items-when-clicking-at-the-reset-state-link-on-menu-pixel-4-retry1/432b31e0b601dce5df6b110020621591.webm"
            },
            {
              "name": "trace",
              "contentType": "application/zip",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-remove-cart-items-when-clicking-at-the-reset-state-link-on-menu-pixel-4-retry1/trace.zip"
            },
            {
              "name": "screenshot",
              "contentType": "image/png",
              "path": "/home/runner/work/playwright-study/playwright-study/test-results/cart-Saucedemo-CartPage-cart-should-remove-cart-items-when-clicking-at-the-reset-state-link-on-menu-pixel-4-retry1/test-failed-1.png"
            }
          ]
        }
      ],
      "ok": false
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-562907d4260fc089be8b192a24613483dd375626",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3438,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3438,
          "startTime": "2021-10-22T01:50:50.786Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:50:50.786Z",
              "duration": 347,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:50:51.036Z",
                  "duration": 97,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:50:51.135Z",
              "duration": 993,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:50:52.130Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:50:52.138Z",
              "duration": 681,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:50:52.820Z",
              "duration": 77,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-10-22T01:50:52.899Z",
              "duration": 608,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:50:53.510Z",
              "duration": 20,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:50:53.530Z",
              "duration": 694,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:50:54.211Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-1f2ed6d4ada46d61b83503da5b156ea89061a882",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 2451,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2451,
          "startTime": "2021-10-22T01:50:57.449Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:50:57.449Z",
              "duration": 315,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:50:57.702Z",
                  "duration": 62,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:50:57.766Z",
              "duration": 1014,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:50:58.782Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:50:58.790Z",
              "duration": 685,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:50:59.477Z",
              "duration": 73,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-10-22T01:50:59.553Z",
              "duration": 14,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:50:59.567Z",
              "duration": 332,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:50:59.887Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-6c71d9d727fcd39dd431c66f4860282fee74cb3f",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 2906,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2906,
          "startTime": "2021-10-22T01:51:03.053Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-22T01:51:03.054Z",
              "duration": 303,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-22T01:51:03.290Z",
                  "duration": 66,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-22T01:51:03.359Z",
              "duration": 988,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-22T01:51:04.348Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-22T01:51:04.356Z",
              "duration": 667,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-22T01:51:05.025Z",
              "duration": 70,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-10-22T01:51:05.096Z",
              "duration": 563,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-22T01:51:05.661Z",
              "duration": 12,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-22T01:51:05.673Z",
              "duration": 286,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-22T01:51:05.950Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    }
  ]
}