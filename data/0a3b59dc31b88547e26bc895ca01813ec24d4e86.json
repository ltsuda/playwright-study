{
  "fileId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86",
  "fileName": "cart.spec.js",
  "tests": [
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-d47794ad39f9ea3a3d25632935105b90646e372f",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 17800,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 17800,
          "startTime": "2021-10-28T01:23:54.612Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:23:54.613Z",
              "duration": 783,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:23:55.230Z",
                  "duration": 162,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:23:55.400Z",
              "duration": 15089,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:24:10.490Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:24:10.497Z",
              "duration": 740,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-10-28T01:24:11.239Z",
              "duration": 243,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:24:11.490Z",
              "duration": 31,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:24:11.521Z",
              "duration": 891,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:24:12.403Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-acc42b565a7ff1aa51921548ffa11f08922bf6c6",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 16092,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 16092,
          "startTime": "2021-10-28T01:23:55.473Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:23:55.474Z",
              "duration": 401,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:23:55.763Z",
                  "duration": 112,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:23:55.876Z",
              "duration": 14625,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:24:10.502Z",
              "duration": 10,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:24:10.512Z",
              "duration": 797,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-10-28T01:24:11.310Z",
              "duration": 83,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:24:11.395Z",
              "duration": 18,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:24:11.413Z",
              "duration": 152,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:24:11.547Z",
                  "duration": 17,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2544c0fc77e1836caef577646df5f7b78b5a8c88",
      "title": "should match cart badge with items in cart",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 1914,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1914,
          "startTime": "2021-10-28T01:24:11.567Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:24:11.568Z",
              "duration": 65,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:24:11.582Z",
                  "duration": 51,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:24:11.634Z",
              "duration": 999,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:24:12.634Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:24:12.641Z",
              "duration": 711,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:24:13.353Z",
              "duration": 16,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:24:13.370Z",
              "duration": 13,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:24:13.384Z",
              "duration": 97,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:24:13.474Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-41e5c20c00860b46369bdbe6f7375aa014a99f3f",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2272,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2272,
          "startTime": "2021-10-28T01:24:12.413Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:24:12.413Z",
              "duration": 57,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:24:12.419Z",
                  "duration": 50,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:24:12.470Z",
              "duration": 1037,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:24:13.509Z",
              "duration": 9,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-10-28T01:24:13.520Z",
              "duration": 883,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:24:14.404Z",
              "duration": 18,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-name)",
              "startTime": "2021-10-28T01:24:14.423Z",
              "duration": 12,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-description)",
              "startTime": "2021-10-28T01:24:14.435Z",
              "duration": 6,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=3 >> data-test=item-price)",
              "startTime": "2021-10-28T01:24:14.441Z",
              "duration": 7,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=3 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-10-28T01:24:14.448Z",
              "duration": 56,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-10-28T01:24:14.505Z",
              "duration": 55,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:24:14.561Z",
              "duration": 6,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-28T01:24:14.567Z",
              "duration": 6,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-28T01:24:14.573Z",
              "duration": 5,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-28T01:24:14.579Z",
              "duration": 4,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-10-28T01:24:14.584Z",
              "duration": 0,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:24:14.585Z",
              "duration": 100,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:24:14.675Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-93777b7ecb90198a542835731e41677657e138dd",
      "title": "should be possible to remove product from cart",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 2138,
      "outcome": "expected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2138,
          "startTime": "2021-10-28T01:24:13.482Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:24:13.482Z",
              "duration": 64,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:24:13.488Z",
                  "duration": 58,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:24:13.546Z",
              "duration": 1092,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:24:14.639Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:24:14.645Z",
              "duration": 802,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:24:15.448Z",
              "duration": 20,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-28T01:24:15.469Z",
              "duration": 30,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-28T01:24:15.500Z",
              "duration": 7,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:24:15.507Z",
              "duration": 112,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:24:15.611Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2c17457a7770b4cbf5dc3c491ddc4caf36b01f7d",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2047,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2047,
          "startTime": "2021-10-28T01:24:14.693Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:24:14.694Z",
              "duration": 79,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:24:14.699Z",
                  "duration": 74,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:24:14.774Z",
              "duration": 1025,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:24:15.799Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:24:15.806Z",
              "duration": 738,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:24:16.545Z",
              "duration": 58,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-28T01:24:16.603Z",
              "duration": 8,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:24:16.611Z",
              "duration": 130,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:24:16.733Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-62bbf4f9a778e5fdb4b8d9451cad18a614ce6969",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3155,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3155,
          "startTime": "2021-10-28T01:24:15.620Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:24:15.620Z",
              "duration": 48,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:24:15.629Z",
                  "duration": 38,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:24:15.668Z",
              "duration": 1026,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:24:16.695Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:24:16.703Z",
              "duration": 782,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:24:17.486Z",
              "duration": 66,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-28T01:24:17.553Z",
              "duration": 11,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:24:17.565Z",
              "duration": 537,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-10-28T01:24:18.103Z",
              "duration": 39,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:24:18.143Z",
              "duration": 509,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-10-28T01:24:18.653Z",
              "duration": 8,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:24:18.661Z",
              "duration": 113,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:24:18.763Z",
                  "duration": 10,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-65ed096970af953af43478cec116855855109a2b",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 2609,
      "outcome": "expected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2609,
          "startTime": "2021-10-28T01:24:16.741Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:24:16.742Z",
              "duration": 78,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:24:16.751Z",
                  "duration": 69,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:24:16.820Z",
              "duration": 1022,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:24:17.842Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:24:17.847Z",
              "duration": 679,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:24:18.527Z",
              "duration": 23,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:24:18.550Z",
              "duration": 54,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-28T01:24:18.604Z",
              "duration": 9,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:24:18.617Z",
              "duration": 536,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-28T01:24:19.153Z",
              "duration": 49,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-28T01:24:19.203Z",
              "duration": 9,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:24:19.213Z",
              "duration": 137,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:24:19.342Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-7f435649b4f7f49e65d4a6add3ef59922c62656d",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3243,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3243,
          "startTime": "2021-10-28T01:24:18.775Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:24:18.775Z",
              "duration": 42,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:24:18.780Z",
                  "duration": 37,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:24:18.818Z",
              "duration": 979,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:24:19.798Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:24:19.804Z",
              "duration": 707,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:24:20.511Z",
              "duration": 84,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-10-28T01:24:20.595Z",
              "duration": 635,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:24:21.231Z",
              "duration": 35,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:24:21.266Z",
              "duration": 751,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:24:22.008Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-0b5eb90f5c8c1286e3b954f0b979d7b99be9303c",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 1968,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1968,
          "startTime": "2021-10-28T01:24:19.351Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:24:19.351Z",
              "duration": 59,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:24:19.356Z",
                  "duration": 54,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:24:19.413Z",
              "duration": 980,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:24:20.393Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:24:20.399Z",
              "duration": 663,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:24:21.062Z",
              "duration": 77,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-10-28T01:24:21.140Z",
              "duration": 11,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:24:21.151Z",
              "duration": 169,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:24:21.299Z",
                  "duration": 19,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-bff2868541803cd672f98134b12a0e4022b5213f",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "chromium-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 2657,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2657,
          "startTime": "2021-10-28T01:24:21.320Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:24:21.321Z",
              "duration": 51,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:24:21.326Z",
                  "duration": 46,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:24:21.373Z",
              "duration": 1066,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:24:22.440Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:24:22.445Z",
              "duration": 723,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:24:23.169Z",
              "duration": 94,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-10-28T01:24:23.263Z",
              "duration": 571,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:24:23.835Z",
              "duration": 24,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:24:23.859Z",
              "duration": 119,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:24:23.960Z",
                  "duration": 17,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-d3929f22a1ada3c7e864c7d1f1828b177f1c3a78",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 3245,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3245,
          "startTime": "2021-10-28T01:25:15.440Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:25:15.441Z",
              "duration": 568,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:25:15.905Z",
                  "duration": 100,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:25:16.014Z",
              "duration": 1121,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:25:17.136Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:25:17.144Z",
              "duration": 778,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-10-28T01:25:17.925Z",
              "duration": 145,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:25:18.072Z",
              "duration": 23,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:25:18.096Z",
              "duration": 589,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:25:18.675Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-f241a8261c9c5e656d192ce7c2d95a28031a8abe",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 2034,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2034,
          "startTime": "2021-10-28T01:25:18.686Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:25:18.687Z",
              "duration": 53,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:25:18.693Z",
                  "duration": 47,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:25:18.742Z",
              "duration": 960,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:25:19.703Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:25:19.709Z",
              "duration": 713,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-10-28T01:25:20.423Z",
              "duration": 69,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:25:20.493Z",
              "duration": 11,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:25:20.504Z",
              "duration": 216,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:25:20.714Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-ea73a09ea76d88da1697c08b9399710d5669087f",
      "title": "should match cart badge with items in cart",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2003,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2003,
          "startTime": "2021-10-28T01:25:20.721Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:25:20.722Z",
              "duration": 49,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:25:20.735Z",
                  "duration": 36,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:25:20.772Z",
              "duration": 1004,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:25:21.776Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:25:21.782Z",
              "duration": 664,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:25:22.447Z",
              "duration": 24,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:25:22.471Z",
              "duration": 15,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:25:22.487Z",
              "duration": 237,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:25:22.706Z",
                  "duration": 14,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-470c6ee854ace681f98bd207338afb6e55fb4e97",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2567,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2567,
          "startTime": "2021-10-28T01:25:22.726Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:25:22.726Z",
              "duration": 64,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:25:22.731Z",
                  "duration": 59,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:25:22.791Z",
              "duration": 1112,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:25:23.904Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-10-28T01:25:23.910Z",
              "duration": 979,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:25:24.890Z",
              "duration": 24,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-name)",
              "startTime": "2021-10-28T01:25:24.917Z",
              "duration": 11,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-description)",
              "startTime": "2021-10-28T01:25:24.929Z",
              "duration": 5,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=1 >> data-test=item-price)",
              "startTime": "2021-10-28T01:25:24.934Z",
              "duration": 5,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=1 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-10-28T01:25:24.939Z",
              "duration": 47,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-10-28T01:25:24.987Z",
              "duration": 51,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:25:25.039Z",
              "duration": 4,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-28T01:25:25.043Z",
              "duration": 7,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-28T01:25:25.051Z",
              "duration": 4,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-28T01:25:25.056Z",
              "duration": 6,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-10-28T01:25:25.062Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:25:25.063Z",
              "duration": 229,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:25:25.277Z",
                  "duration": 15,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2933129bd736ea268e1ae39f917639420caf8f51",
      "title": "should be possible to remove product from cart",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 2595,
      "outcome": "expected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2595,
          "startTime": "2021-10-28T01:25:23.820Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:25:23.821Z",
              "duration": 388,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:25:24.118Z",
                  "duration": 91,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:25:24.210Z",
              "duration": 1054,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:25:25.266Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:25:25.274Z",
              "duration": 796,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:25:26.072Z",
              "duration": 34,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-28T01:25:26.107Z",
              "duration": 51,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-28T01:25:26.158Z",
              "duration": 11,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:25:26.169Z",
              "duration": 246,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:25:26.393Z",
                  "duration": 21,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-68211d561063745ed0a8a10a195c4c325fc2710d",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2620,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2620,
          "startTime": "2021-10-28T01:25:25.293Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:25:25.293Z",
              "duration": 80,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:25:25.299Z",
                  "duration": 74,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:25:25.373Z",
              "duration": 1490,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:25:26.864Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:25:26.869Z",
              "duration": 728,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:25:27.597Z",
              "duration": 87,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-28T01:25:27.685Z",
              "duration": 16,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:25:27.701Z",
              "duration": 212,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:25:27.904Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-ac5aef6d0cb9749b41cd2af60db89d0453aa66c2",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3849,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3849,
          "startTime": "2021-10-28T01:25:26.417Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:25:26.417Z",
              "duration": 60,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:25:26.433Z",
                  "duration": 44,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:25:26.482Z",
              "duration": 1571,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:25:28.054Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:25:28.062Z",
              "duration": 845,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:25:28.908Z",
              "duration": 58,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-28T01:25:28.967Z",
              "duration": 12,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:25:28.979Z",
              "duration": 520,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-10-28T01:25:29.500Z",
              "duration": 39,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:25:29.539Z",
              "duration": 510,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-10-28T01:25:30.050Z",
              "duration": 14,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:25:30.064Z",
              "duration": 202,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:25:30.259Z",
                  "duration": 4,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-07462a1e1ee3fb5bbcd6a7dda62980f4a51de806",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 2853,
      "outcome": "expected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2853,
          "startTime": "2021-10-28T01:25:27.914Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:25:27.914Z",
              "duration": 42,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:25:27.918Z",
                  "duration": 38,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:25:27.957Z",
              "duration": 1183,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:25:29.140Z",
              "duration": 9,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:25:29.150Z",
              "duration": 727,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:25:29.877Z",
              "duration": 20,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:25:29.897Z",
              "duration": 35,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-28T01:25:29.933Z",
              "duration": 7,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:25:29.941Z",
              "duration": 525,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-28T01:25:30.467Z",
              "duration": 56,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-28T01:25:30.523Z",
              "duration": 10,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:25:30.533Z",
              "duration": 235,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:25:30.740Z",
                  "duration": 27,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-4c353f8683c2a7da82bf21ac75cfae12a03d9845",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3292,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3292,
          "startTime": "2021-10-28T01:25:30.267Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:25:30.267Z",
              "duration": 47,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:25:30.271Z",
                  "duration": 42,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:25:30.314Z",
              "duration": 969,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:25:31.283Z",
              "duration": 11,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:25:31.295Z",
              "duration": 679,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:25:31.975Z",
              "duration": 76,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-10-28T01:25:32.051Z",
              "duration": 671,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:25:32.722Z",
              "duration": 42,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:25:32.764Z",
              "duration": 794,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:25:33.545Z",
                  "duration": 13,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-67bcfe056128af936df9c71a2ff31ae3e97e7e76",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 2034,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2034,
          "startTime": "2021-10-28T01:25:30.769Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:25:30.769Z",
              "duration": 65,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:25:30.776Z",
                  "duration": 58,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:25:30.835Z",
              "duration": 971,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:25:31.806Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:25:31.812Z",
              "duration": 656,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:25:32.469Z",
              "duration": 65,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-10-28T01:25:32.534Z",
              "duration": 7,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:25:32.541Z",
              "duration": 262,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:25:32.775Z",
                  "duration": 27,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2a5071cd9a64c8d2aa893344aa5c10e3434ac021",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "chromium-fhd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 2823,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2823,
          "startTime": "2021-10-28T01:25:32.803Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:25:32.804Z",
              "duration": 73,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:25:32.819Z",
                  "duration": 58,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:25:32.878Z",
              "duration": 1080,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:25:33.958Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:25:33.966Z",
              "duration": 747,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:25:34.713Z",
              "duration": 88,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-10-28T01:25:34.802Z",
              "duration": 564,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:25:35.366Z",
              "duration": 11,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:25:35.377Z",
              "duration": 249,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:25:35.604Z",
                  "duration": 22,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-08c3538c45f177e38485394bbcdcd00595886665",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 3852,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3852,
          "startTime": "2021-10-28T01:26:31.694Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:26:31.694Z",
              "duration": 667,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:26:32.218Z",
                  "duration": 143,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:26:32.363Z",
              "duration": 1202,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:26:33.566Z",
              "duration": 22,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:26:33.589Z",
              "duration": 716,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-10-28T01:26:34.306Z",
              "duration": 165,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:26:34.472Z",
              "duration": 49,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:26:34.521Z",
              "duration": 1024,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:26:35.535Z",
                  "duration": 10,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-f277fd7873880f7b85c79b54d4684e7cb90c4069",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 2525,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2525,
          "startTime": "2021-10-28T01:26:32.064Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:26:32.065Z",
              "duration": 299,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:26:32.223Z",
                  "duration": 140,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:26:32.365Z",
              "duration": 1199,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:26:33.565Z",
              "duration": 9,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:26:33.574Z",
              "duration": 755,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-10-28T01:26:34.331Z",
              "duration": 81,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:26:34.413Z",
              "duration": 23,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:26:34.437Z",
              "duration": 152,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:26:34.572Z",
                  "duration": 15,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-74b8fb413f87431a7067182f95bb79136cca942e",
      "title": "should match cart badge with items in cart",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2168,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2168,
          "startTime": "2021-10-28T01:26:34.591Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:26:34.591Z",
              "duration": 90,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:26:34.611Z",
                  "duration": 68,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:26:34.682Z",
              "duration": 1210,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:26:35.892Z",
              "duration": 9,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:26:35.901Z",
              "duration": 700,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:26:36.602Z",
              "duration": 15,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:26:36.618Z",
              "duration": 25,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:26:36.643Z",
              "duration": 115,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:26:36.746Z",
                  "duration": 12,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-22db55b5b8f840550afcd6286e67258345240979",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2148,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2148,
          "startTime": "2021-10-28T01:26:35.546Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:26:35.546Z",
              "duration": 74,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:26:35.562Z",
                  "duration": 57,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:26:35.621Z",
              "duration": 987,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:26:36.609Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-10-28T01:26:36.616Z",
              "duration": 816,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:26:37.433Z",
              "duration": 15,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-name)",
              "startTime": "2021-10-28T01:26:37.449Z",
              "duration": 14,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-description)",
              "startTime": "2021-10-28T01:26:37.464Z",
              "duration": 12,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-price)",
              "startTime": "2021-10-28T01:26:37.476Z",
              "duration": 5,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=5 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-10-28T01:26:37.482Z",
              "duration": 51,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-10-28T01:26:37.534Z",
              "duration": 49,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:26:37.583Z",
              "duration": 6,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-28T01:26:37.589Z",
              "duration": 5,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-28T01:26:37.595Z",
              "duration": 4,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-28T01:26:37.599Z",
              "duration": 4,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-10-28T01:26:37.603Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:26:37.604Z",
              "duration": 90,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:26:37.687Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-e84545cf1e4e6556b996527ef1c47d0b3523717b",
      "title": "should be possible to remove product from cart",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 2096,
      "outcome": "expected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2096,
          "startTime": "2021-10-28T01:26:36.760Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:26:36.760Z",
              "duration": 104,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:26:36.768Z",
                  "duration": 96,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:26:36.865Z",
              "duration": 1038,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:26:37.903Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:26:37.910Z",
              "duration": 737,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:26:38.648Z",
              "duration": 20,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-28T01:26:38.668Z",
              "duration": 44,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-28T01:26:38.713Z",
              "duration": 7,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:26:38.720Z",
              "duration": 135,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:26:38.835Z",
                  "duration": 18,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-c9461eb8e81e25c07203ae1b4f343bc715ca3b47",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 1984,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1984,
          "startTime": "2021-10-28T01:26:37.695Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:26:37.695Z",
              "duration": 53,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:26:37.699Z",
                  "duration": 48,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:26:37.748Z",
              "duration": 996,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:26:38.745Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:26:38.753Z",
              "duration": 751,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:26:39.504Z",
              "duration": 37,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-28T01:26:39.542Z",
              "duration": 7,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:26:39.549Z",
              "duration": 129,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:26:39.670Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-e206ad4ac61845f7a62ba3447ca9f789849440fd",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3042,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3042,
          "startTime": "2021-10-28T01:26:38.856Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:26:38.856Z",
              "duration": 59,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:26:38.861Z",
                  "duration": 53,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:26:38.915Z",
              "duration": 996,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:26:39.911Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:26:39.916Z",
              "duration": 716,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:26:40.633Z",
              "duration": 45,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-28T01:26:40.678Z",
              "duration": 9,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:26:40.688Z",
              "duration": 525,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-10-28T01:26:41.214Z",
              "duration": 38,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:26:41.253Z",
              "duration": 509,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-10-28T01:26:41.763Z",
              "duration": 7,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:26:41.770Z",
              "duration": 128,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:26:41.886Z",
                  "duration": 11,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-1a2fc9ff27c464e86654313182abfa447a55f47f",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 2510,
      "outcome": "expected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2510,
          "startTime": "2021-10-28T01:26:39.679Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:26:39.679Z",
              "duration": 37,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:26:39.685Z",
                  "duration": 31,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:26:39.716Z",
              "duration": 1003,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:26:40.719Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:26:40.724Z",
              "duration": 666,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:26:41.391Z",
              "duration": 20,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:26:41.411Z",
              "duration": 33,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-28T01:26:41.445Z",
              "duration": 8,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:26:41.454Z",
              "duration": 528,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-28T01:26:41.982Z",
              "duration": 41,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-28T01:26:42.024Z",
              "duration": 16,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:26:42.040Z",
              "duration": 149,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:26:42.182Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-cf8c89ec0fcfbc3165934adc2e8c3d0ad2f97e6f",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3144,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3144,
          "startTime": "2021-10-28T01:26:41.899Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:26:41.900Z",
              "duration": 37,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:26:41.904Z",
                  "duration": 32,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:26:41.938Z",
              "duration": 1168,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:26:43.106Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:26:43.111Z",
              "duration": 661,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:26:43.773Z",
              "duration": 54,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-10-28T01:26:43.828Z",
              "duration": 626,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:26:44.454Z",
              "duration": 35,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:26:44.489Z",
              "duration": 554,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:26:45.033Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-9777a997b336bc6c2cc4db538ef4b6bb546361b1",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 1946,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 1946,
          "startTime": "2021-10-28T01:26:42.190Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:26:42.190Z",
              "duration": 75,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:26:42.196Z",
                  "duration": 69,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:26:42.267Z",
              "duration": 998,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:26:43.265Z",
              "duration": 15,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:26:43.281Z",
              "duration": 674,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:26:43.955Z",
              "duration": 59,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-10-28T01:26:44.014Z",
              "duration": 8,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:26:44.022Z",
              "duration": 115,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:26:44.132Z",
                  "duration": 4,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-e57549d4ba98887fb8587f2e9bbb3dcef6193c65",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "chrome-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 2531,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2531,
          "startTime": "2021-10-28T01:26:44.141Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:26:44.141Z",
              "duration": 50,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:26:44.152Z",
                  "duration": 39,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:26:44.192Z",
              "duration": 998,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:26:45.190Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:26:45.196Z",
              "duration": 765,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:26:45.962Z",
              "duration": 51,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-10-28T01:26:46.013Z",
              "duration": 539,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:26:46.552Z",
              "duration": 14,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:26:46.566Z",
              "duration": 105,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:26:46.666Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-5ac7e4d45c731cc66beac941b4618e790f106921",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 6329,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 6329,
          "startTime": "2021-10-28T01:27:35.390Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:27:35.390Z",
              "duration": 2816,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:27:37.326Z",
                  "duration": 880,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:27:38.210Z",
              "duration": 1749,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:27:39.960Z",
              "duration": 9,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:27:39.970Z",
              "duration": 988,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-10-28T01:27:40.959Z",
              "duration": 193,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:27:41.154Z",
              "duration": 117,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:27:41.271Z",
              "duration": 448,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:27:41.699Z",
                  "duration": 18,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-d1b6bd5298c17a2c5578f22dfab42e061f8b81b9",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 5734,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 5734,
          "startTime": "2021-10-28T01:27:35.850Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:27:35.851Z",
              "duration": 2307,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:27:37.317Z",
                  "duration": 841,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:27:38.163Z",
              "duration": 1926,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:27:40.090Z",
              "duration": 9,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:27:40.100Z",
              "duration": 1007,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-10-28T01:27:41.108Z",
              "duration": 302,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:27:41.412Z",
              "duration": 47,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:27:41.460Z",
              "duration": 124,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:27:41.552Z",
                  "duration": 30,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-43fd61b1bec9604e54bc353eccb646339728e7e0",
      "title": "should match cart badge with items in cart",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2812,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2812,
          "startTime": "2021-10-28T01:27:41.585Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:27:41.586Z",
              "duration": 338,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:27:41.622Z",
                  "duration": 302,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:27:41.925Z",
              "duration": 1303,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:27:43.228Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:27:43.237Z",
              "duration": 982,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:27:44.220Z",
              "duration": 50,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:27:44.271Z",
              "duration": 50,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:27:44.321Z",
              "duration": 76,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:27:44.386Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-016a9cd7c91570d05e9562083720e00cb00cfd6f",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 3553,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3553,
          "startTime": "2021-10-28T01:27:41.720Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:27:41.720Z",
              "duration": 426,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:27:41.745Z",
                  "duration": 400,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:27:42.146Z",
              "duration": 1204,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:27:43.351Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-10-28T01:27:43.359Z",
              "duration": 1119,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:27:44.479Z",
              "duration": 27,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-28T01:27:44.507Z",
              "duration": 40,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-28T01:27:44.547Z",
              "duration": 22,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-28T01:27:44.569Z",
              "duration": 17,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=0 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-10-28T01:27:44.587Z",
              "duration": 152,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-10-28T01:27:44.739Z",
              "duration": 234,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:27:44.974Z",
              "duration": 31,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-28T01:27:45.005Z",
              "duration": 118,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-28T01:27:45.124Z",
              "duration": 45,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-28T01:27:45.170Z",
              "duration": 34,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-10-28T01:27:45.204Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:27:45.205Z",
              "duration": 67,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:27:45.259Z",
                  "duration": 13,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2d67088e6c5e56d68d56a79cf44c42f394afa7da",
      "title": "should be possible to remove product from cart",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 3073,
      "outcome": "expected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3073,
          "startTime": "2021-10-28T01:27:44.400Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:27:44.401Z",
              "duration": 318,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:27:44.427Z",
                  "duration": 291,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:27:44.719Z",
              "duration": 1346,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:27:46.066Z",
              "duration": 18,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:27:46.085Z",
              "duration": 1112,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:27:47.197Z",
              "duration": 39,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-28T01:27:47.236Z",
              "duration": 142,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-28T01:27:47.379Z",
              "duration": 23,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:27:47.402Z",
              "duration": 71,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:27:47.460Z",
                  "duration": 12,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-bf5ff46e80f9c87d764c3fd1978359aa342d54d2",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2902,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2902,
          "startTime": "2021-10-28T01:27:45.273Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:27:45.274Z",
              "duration": 387,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:27:45.304Z",
                  "duration": 357,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:27:45.661Z",
              "duration": 1192,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:27:46.854Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:27:46.861Z",
              "duration": 952,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:27:47.814Z",
              "duration": 184,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-28T01:27:47.998Z",
              "duration": 66,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:27:48.064Z",
              "duration": 111,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:27:48.156Z",
                  "duration": 19,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-a0013357b8a2ca505a0ad70c92b1f801c9d90c57",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 4253,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 4253,
          "startTime": "2021-10-28T01:27:47.474Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:27:47.474Z",
              "duration": 267,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:27:47.492Z",
                  "duration": 249,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:27:47.742Z",
              "duration": 1427,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:27:49.170Z",
              "duration": 9,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:27:49.180Z",
              "duration": 1079,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:27:50.261Z",
              "duration": 156,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-28T01:27:50.418Z",
              "duration": 35,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:27:50.453Z",
              "duration": 520,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-10-28T01:27:50.974Z",
              "duration": 71,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:27:51.045Z",
              "duration": 527,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-10-28T01:27:51.573Z",
              "duration": 37,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:27:51.610Z",
              "duration": 118,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:27:51.709Z",
                  "duration": 18,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-b9e853903197cb756aa4721301bdf0d3978722dd",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 3092,
      "outcome": "expected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3092,
          "startTime": "2021-10-28T01:27:48.178Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:27:48.178Z",
              "duration": 328,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:27:48.208Z",
                  "duration": 298,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:27:48.507Z",
              "duration": 1300,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:27:49.808Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:27:49.817Z",
              "duration": 1012,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:27:50.829Z",
              "duration": 32,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:27:50.861Z",
              "duration": 68,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-28T01:27:50.929Z",
              "duration": 65,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:27:50.994Z",
              "duration": 79,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-28T01:27:51.073Z",
              "duration": 96,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-28T01:27:51.170Z",
              "duration": 20,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:27:51.190Z",
              "duration": 79,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:27:51.252Z",
                  "duration": 16,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-e17493f3904e05eaff9213797fd57459a3d4fc28",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3586,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3586,
          "startTime": "2021-10-28T01:27:51.283Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:27:51.283Z",
              "duration": 370,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:27:51.305Z",
                  "duration": 348,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:27:51.654Z",
              "duration": 1474,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:27:53.129Z",
              "duration": 7,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:27:53.137Z",
              "duration": 959,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:27:54.097Z",
              "duration": 99,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-10-28T01:27:54.200Z",
              "duration": 160,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:27:54.361Z",
              "duration": 95,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:27:54.457Z",
              "duration": 411,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:27:54.849Z",
                  "duration": 19,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-92a6e24049168102b044c1d4ce7eb8a8765a9173",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 3082,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3082,
          "startTime": "2021-10-28T01:27:51.728Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:27:51.728Z",
              "duration": 449,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:27:51.758Z",
                  "duration": 419,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:27:52.178Z",
              "duration": 1316,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:27:53.495Z",
              "duration": 17,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:27:53.513Z",
              "duration": 1028,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:27:54.541Z",
              "duration": 146,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-10-28T01:27:54.687Z",
              "duration": 54,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:27:54.741Z",
              "duration": 68,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:27:54.793Z",
                  "duration": 16,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-950ca122575112953daf74e6bbb57b54bb4f5d84",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "firefox-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 3020,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3020,
          "startTime": "2021-10-28T01:27:54.811Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:27:54.812Z",
              "duration": 378,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:27:54.839Z",
                  "duration": 351,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:27:55.190Z",
              "duration": 1334,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:27:56.525Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:27:56.532Z",
              "duration": 972,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:27:57.504Z",
              "duration": 85,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-10-28T01:27:57.590Z",
              "duration": 132,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:27:57.723Z",
              "duration": 30,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:27:57.754Z",
              "duration": 76,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:27:57.821Z",
                  "duration": 9,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-edbea7a7833c0a848b7e9efb41c019b571fbdb6c",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 5145,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 5145,
          "startTime": "2021-10-28T01:29:12.711Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:29:12.711Z",
              "duration": 1009,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:29:13.196Z",
                  "duration": 523,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:29:13.721Z",
              "duration": 2758,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:29:16.480Z",
              "duration": 9,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:29:16.489Z",
              "duration": 788,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-10-28T01:29:17.279Z",
              "duration": 202,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:29:17.483Z",
              "duration": 217,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:29:17.701Z",
              "duration": 155,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:29:17.849Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-d591eeddf10e4f55f1ffba07a655c855c85b0fdc",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 2839,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2839,
          "startTime": "2021-10-28T01:29:15.331Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:29:15.331Z",
              "duration": 754,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:29:15.830Z",
                  "duration": 255,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:29:16.089Z",
              "duration": 1070,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:29:17.161Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:29:17.168Z",
              "duration": 734,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-10-28T01:29:17.903Z",
              "duration": 145,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:29:18.050Z",
              "duration": 65,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:29:18.115Z",
              "duration": 55,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:29:18.165Z",
                  "duration": 4,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-2ce8236fa6f9d18603004ecb93e12397994c3002",
      "title": "should match cart badge with items in cart",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2314,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2314,
          "startTime": "2021-10-28T01:29:17.857Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:29:17.858Z",
              "duration": 244,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:29:17.873Z",
                  "duration": 229,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:29:18.103Z",
              "duration": 1225,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:29:19.329Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:29:19.335Z",
              "duration": 723,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:29:20.059Z",
              "duration": 39,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:29:20.098Z",
              "duration": 20,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:29:20.118Z",
              "duration": 53,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:29:20.166Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-85d94cb033c69722e4a5989fa1793736fd79c776",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2793,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2793,
          "startTime": "2021-10-28T01:29:18.171Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:29:18.171Z",
              "duration": 280,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:29:18.217Z",
                  "duration": 234,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:29:18.452Z",
              "duration": 1124,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:29:19.577Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-10-28T01:29:19.583Z",
              "duration": 817,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:29:20.402Z",
              "duration": 38,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-name)",
              "startTime": "2021-10-28T01:29:20.441Z",
              "duration": 45,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-description)",
              "startTime": "2021-10-28T01:29:20.487Z",
              "duration": 9,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=5 >> data-test=item-price)",
              "startTime": "2021-10-28T01:29:20.501Z",
              "duration": 38,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=5 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-10-28T01:29:20.539Z",
              "duration": 72,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-10-28T01:29:20.612Z",
              "duration": 214,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:29:20.827Z",
              "duration": 39,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-28T01:29:20.866Z",
              "duration": 12,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-28T01:29:20.879Z",
              "duration": 21,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-28T01:29:20.901Z",
              "duration": 8,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-10-28T01:29:20.909Z",
              "duration": 2,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:29:20.911Z",
              "duration": 52,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:29:20.960Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-a9281ad6fd27826e7b628b09c4d058667be77616",
      "title": "should be possible to remove product from cart",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 2465,
      "outcome": "expected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2465,
          "startTime": "2021-10-28T01:29:20.172Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:29:20.172Z",
              "duration": 177,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:29:20.187Z",
                  "duration": 162,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:29:20.349Z",
              "duration": 1288,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:29:21.638Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:29:21.644Z",
              "duration": 750,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:29:22.395Z",
              "duration": 32,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-28T01:29:22.428Z",
              "duration": 106,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-28T01:29:22.535Z",
              "duration": 48,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:29:22.583Z",
              "duration": 53,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:29:22.633Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-bceda6d48c5351b5215247a752d3579fc11fb2fd",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2331,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2331,
          "startTime": "2021-10-28T01:29:20.964Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:29:20.964Z",
              "duration": 244,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:29:20.986Z",
                  "duration": 222,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:29:21.209Z",
              "duration": 1123,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:29:22.332Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:29:22.338Z",
              "duration": 717,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:29:23.055Z",
              "duration": 93,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-28T01:29:23.149Z",
              "duration": 43,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:29:23.192Z",
              "duration": 102,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:29:23.289Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-77b66b26b73f3afb87ab3fa6a80f5975302c9ad3",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3512,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3512,
          "startTime": "2021-10-28T01:29:22.637Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:29:22.638Z",
              "duration": 195,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:29:22.651Z",
                  "duration": 182,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:29:22.837Z",
              "duration": 1194,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:29:24.032Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:29:24.038Z",
              "duration": 727,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:29:24.766Z",
              "duration": 108,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-28T01:29:24.875Z",
              "duration": 49,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:29:24.926Z",
              "duration": 539,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-10-28T01:29:25.466Z",
              "duration": 62,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:29:25.529Z",
              "duration": 541,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-10-28T01:29:26.071Z",
              "duration": 11,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:29:26.082Z",
              "duration": 68,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:29:26.146Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-505d42db4826e616e1e73912a88161ea2de9a1ae",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 3063,
      "outcome": "expected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3063,
          "startTime": "2021-10-28T01:29:23.298Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:29:23.298Z",
              "duration": 245,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:29:23.320Z",
                  "duration": 223,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:29:23.544Z",
              "duration": 1174,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:29:24.718Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:29:24.724Z",
              "duration": 775,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:29:25.500Z",
              "duration": 60,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:29:25.561Z",
              "duration": 62,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-28T01:29:25.624Z",
              "duration": 55,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:29:25.679Z",
              "duration": 539,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-28T01:29:26.218Z",
              "duration": 48,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-28T01:29:26.266Z",
              "duration": 29,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:29:26.295Z",
              "duration": 67,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:29:26.359Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-6a8be8304b673e8298efb62f36f83d91380281f8",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3451,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3451,
          "startTime": "2021-10-28T01:29:26.150Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:29:26.150Z",
              "duration": 264,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:29:26.167Z",
                  "duration": 247,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:29:26.414Z",
              "duration": 1232,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:29:27.647Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:29:27.652Z",
              "duration": 706,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:29:28.358Z",
              "duration": 87,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-10-28T01:29:28.446Z",
              "duration": 703,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:29:29.150Z",
              "duration": 305,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:29:29.455Z",
              "duration": 147,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:29:29.597Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-0ee5683ec0948d144ce5d5585c69592abbb14c80",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 2428,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2428,
          "startTime": "2021-10-28T01:29:26.362Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:29:26.362Z",
              "duration": 270,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:29:26.391Z",
                  "duration": 241,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:29:26.633Z",
              "duration": 1137,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:29:27.770Z",
              "duration": 13,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:29:27.783Z",
              "duration": 725,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:29:28.509Z",
              "duration": 111,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-10-28T01:29:28.621Z",
              "duration": 46,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:29:28.667Z",
              "duration": 123,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:29:28.787Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-ee7f1437df45d945cc9b5a174df360e064ec058f",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "webkit-hd",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 3147,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3147,
          "startTime": "2021-10-28T01:29:28.790Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:29:28.791Z",
              "duration": 248,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:29:28.807Z",
                  "duration": 232,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:29:29.040Z",
              "duration": 1356,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:29:30.397Z",
              "duration": 9,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:29:30.407Z",
              "duration": 712,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:29:31.119Z",
              "duration": 87,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-10-28T01:29:31.207Z",
              "duration": 656,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:29:31.864Z",
              "duration": 23,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:29:31.887Z",
              "duration": 51,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:29:31.935Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-56e977c66878d1c36f1c9e6136d90f131905a941",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 3565,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3565,
          "startTime": "2021-10-28T01:30:29.660Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:30:29.661Z",
              "duration": 928,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:30:30.174Z",
                  "duration": 414,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:30:30.590Z",
              "duration": 1206,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:30:31.797Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:30:31.803Z",
              "duration": 675,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-10-28T01:30:32.479Z",
              "duration": 150,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:30:32.631Z",
              "duration": 181,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:30:32.813Z",
              "duration": 412,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:30:33.215Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-b1f8e09f8d175292369ee5f7dc75675e4b7e729f",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 3032,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3032,
          "startTime": "2021-10-28T01:30:30.079Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:30:30.079Z",
              "duration": 810,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:30:30.556Z",
                  "duration": 332,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:30:30.892Z",
              "duration": 1248,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:30:32.141Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:30:32.147Z",
              "duration": 688,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-10-28T01:30:32.836Z",
              "duration": 155,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:30:32.993Z",
              "duration": 44,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:30:33.037Z",
              "duration": 73,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:30:33.105Z",
                  "duration": 5,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-41a39cff945159b813dc7aa3261745ade5db3a7f",
      "title": "should match cart badge with items in cart",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2580,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2580,
          "startTime": "2021-10-28T01:30:33.111Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:30:33.112Z",
              "duration": 377,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:30:33.141Z",
                  "duration": 347,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:30:33.490Z",
              "duration": 1265,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:30:34.756Z",
              "duration": 9,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:30:34.766Z",
              "duration": 821,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:30:35.588Z",
              "duration": 21,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:30:35.610Z",
              "duration": 18,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:30:35.628Z",
              "duration": 63,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:30:35.685Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-cbed407a55cbac043d829e3c6ffcff6515dd07b4",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 3226,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3226,
          "startTime": "2021-10-28T01:30:33.226Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:30:33.228Z",
              "duration": 280,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:30:33.259Z",
                  "duration": 248,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:30:33.509Z",
              "duration": 1249,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:30:34.758Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-10-28T01:30:34.765Z",
              "duration": 891,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:30:35.657Z",
              "duration": 21,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-name)",
              "startTime": "2021-10-28T01:30:35.679Z",
              "duration": 132,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-description)",
              "startTime": "2021-10-28T01:30:35.811Z",
              "duration": 7,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=2 >> data-test=item-price)",
              "startTime": "2021-10-28T01:30:35.818Z",
              "duration": 9,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=2 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-10-28T01:30:35.830Z",
              "duration": 118,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-10-28T01:30:35.949Z",
              "duration": 336,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:30:36.285Z",
              "duration": 35,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-28T01:30:36.320Z",
              "duration": 25,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-28T01:30:36.346Z",
              "duration": 8,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-28T01:30:36.354Z",
              "duration": 8,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-10-28T01:30:36.363Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:30:36.364Z",
              "duration": 89,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:30:36.450Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-01381a81c997a9feb6e1229afd33b5520c4d6384",
      "title": "should be possible to remove product from cart",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 2526,
      "outcome": "expected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2526,
          "startTime": "2021-10-28T01:30:35.692Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:30:35.692Z",
              "duration": 377,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:30:35.707Z",
                  "duration": 362,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:30:36.070Z",
              "duration": 1311,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:30:37.381Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:30:37.387Z",
              "duration": 651,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:30:38.039Z",
              "duration": 25,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-28T01:30:38.065Z",
              "duration": 75,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-28T01:30:38.140Z",
              "duration": 20,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:30:38.160Z",
              "duration": 59,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:30:38.215Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-c81a3fe03909ab3766f61c4d01d54003ce8f0158",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2223,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2223,
          "startTime": "2021-10-28T01:30:36.453Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:30:36.453Z",
              "duration": 254,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:30:36.484Z",
                  "duration": 223,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:30:36.707Z",
              "duration": 1078,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:30:37.785Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:30:37.791Z",
              "duration": 688,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:30:38.480Z",
              "duration": 102,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-28T01:30:38.583Z",
              "duration": 32,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:30:38.615Z",
              "duration": 61,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:30:38.673Z",
                  "duration": 2,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-dbcd51a8882572de9ebad44b320e562cc6792c6b",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3496,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3496,
          "startTime": "2021-10-28T01:30:38.222Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:30:38.222Z",
              "duration": 185,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:30:38.230Z",
                  "duration": 177,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:30:38.408Z",
              "duration": 1271,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:30:39.680Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:30:39.685Z",
              "duration": 630,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:30:40.316Z",
              "duration": 75,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-28T01:30:40.392Z",
              "duration": 25,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:30:40.417Z",
              "duration": 579,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-10-28T01:30:40.997Z",
              "duration": 53,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:30:41.051Z",
              "duration": 573,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-10-28T01:30:41.625Z",
              "duration": 31,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:30:41.656Z",
              "duration": 62,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:30:41.715Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-9956c6ff1720a418808ed2fa5a7cb5ee6ae9b361",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 2936,
      "outcome": "expected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2936,
          "startTime": "2021-10-28T01:30:38.677Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:30:38.677Z",
              "duration": 241,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:30:38.708Z",
                  "duration": 210,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:30:38.918Z",
              "duration": 1086,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:30:40.005Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:30:40.010Z",
              "duration": 695,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:30:40.706Z",
              "duration": 58,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:30:40.764Z",
              "duration": 65,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-28T01:30:40.829Z",
              "duration": 28,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:30:40.858Z",
              "duration": 569,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-28T01:30:41.428Z",
              "duration": 103,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-28T01:30:41.531Z",
              "duration": 15,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:30:41.546Z",
              "duration": 66,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:30:41.609Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-da528b8f6d51072468991daf0ad6779fdb8e7b12",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3307,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3307,
          "startTime": "2021-10-28T01:30:41.612Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:30:41.613Z",
              "duration": 333,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:30:41.644Z",
                  "duration": 302,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:30:41.946Z",
              "duration": 1210,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:30:43.156Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:30:43.161Z",
              "duration": 669,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:30:43.830Z",
              "duration": 65,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-10-28T01:30:43.896Z",
              "duration": 700,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:30:44.596Z",
              "duration": 194,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:30:44.790Z",
              "duration": 129,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:30:44.916Z",
                  "duration": 3,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-0cdf73fab6b0b9371e1bb74ed7e325de57cb7ad6",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 2565,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2565,
          "startTime": "2021-10-28T01:30:41.719Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:30:41.719Z",
              "duration": 261,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:30:41.747Z",
                  "duration": 233,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:30:41.981Z",
              "duration": 1281,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:30:43.263Z",
              "duration": 19,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:30:43.283Z",
              "duration": 720,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:30:44.003Z",
              "duration": 98,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-10-28T01:30:44.101Z",
              "duration": 64,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:30:44.166Z",
              "duration": 117,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:30:44.279Z",
                  "duration": 4,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-bdc370d4fb41689fb49a5b467292eb9022ef3d51",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "iphone-8",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 3155,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3155,
          "startTime": "2021-10-28T01:30:44.284Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:30:44.284Z",
              "duration": 341,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:30:44.299Z",
                  "duration": 326,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:30:44.626Z",
              "duration": 1254,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:30:45.881Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:30:45.887Z",
              "duration": 676,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:30:46.563Z",
              "duration": 90,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-10-28T01:30:46.653Z",
              "duration": 661,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:30:47.314Z",
              "duration": 55,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:30:47.369Z",
              "duration": 70,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:30:47.435Z",
                  "duration": 4,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-665ebcc7eeaa23fef3040f64fd46b7f5826cf833",
      "title": "should be back at Inventory page when click at the continue shopping button",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 7,
        "column": 5
      },
      "duration": 3095,
      "outcome": "expected",
      "path": [
        "cart.spec.js:7",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3095,
          "startTime": "2021-10-28T01:31:45.499Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:31:45.500Z",
              "duration": 419,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:31:45.800Z",
                  "duration": 119,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:31:45.920Z",
              "duration": 1151,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:31:47.073Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:31:47.079Z",
              "duration": 646,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-continue-shopping)",
              "startTime": "2021-10-28T01:31:47.726Z",
              "duration": 124,
              "snippet": "  43 |         const continueButton = this.components.continueShoppingButton()\n  44 |         await continueButton.click()\n     |                              ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 44,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:31:47.852Z",
              "duration": 32,
              "snippet": "   16 |         await cartController.continueShopping()\n   17 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n   18 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 17,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:31:47.885Z",
              "duration": 710,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:31:48.575Z",
                  "duration": 19,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-32d542f9aaed635033b333618aed43d810c279aa",
      "title": "should be at Checkout page when click at the checkout button",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 20,
        "column": 5
      },
      "duration": 2572,
      "outcome": "expected",
      "path": [
        "cart.spec.js:20",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2572,
          "startTime": "2021-10-28T01:31:45.839Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:31:45.841Z",
              "duration": 492,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:31:46.255Z",
                  "duration": 78,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:31:46.334Z",
              "duration": 1027,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:31:47.363Z",
              "duration": 6,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:31:47.370Z",
              "duration": 654,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(data-test=button-checkout)",
              "startTime": "2021-10-28T01:31:48.025Z",
              "duration": 97,
              "snippet": "  51 |         const checkoutButton = this.components.checkoutButton()\n  52 |         await checkoutButton.click()\n     |                              ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/cart/controller.js",
                "line": 52,
                "column": 30
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:31:48.124Z",
              "duration": 19,
              "snippet": "   25 |         await cartController.navigateToCheckout()\n   26 |         await expect(page).toHaveURL(`${baseURL}${PAGES.CHECKOUT}`)\n      |                            ^\n   27 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 26,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:31:48.143Z",
              "duration": 267,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:31:48.383Z",
                  "duration": 27,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-3b8064df54065b033d171dab6fb131bf831ffe8b",
      "title": "should match cart badge with items in cart",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 29,
        "column": 5
      },
      "duration": 2231,
      "outcome": "expected",
      "path": [
        "cart.spec.js:29",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2231,
          "startTime": "2021-10-28T01:31:48.411Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:31:48.412Z",
              "duration": 75,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:31:48.424Z",
                  "duration": 62,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:31:48.487Z",
              "duration": 1209,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:31:49.697Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:31:49.703Z",
              "duration": 673,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:31:50.378Z",
              "duration": 18,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:31:50.397Z",
              "duration": 12,
              "snippet": "   39 |         const itemsCount = String(await inventoryItemController.getItemsCount())\n   40 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(itemsCount)\n      |                                                                                ^\n   41 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 40,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:31:50.409Z",
              "duration": 233,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:31:50.631Z",
                  "duration": 10,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-9829c4b3ae406b9c28022368ac40e6dcefad8021",
      "title": "should be possible to add an item into the cart @smoke",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 43,
        "column": 5
      },
      "duration": 2609,
      "outcome": "expected",
      "path": [
        "cart.spec.js:43",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2609,
          "startTime": "2021-10-28T01:31:48.601Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:31:48.602Z",
              "duration": 71,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:31:48.620Z",
                  "duration": 52,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:31:48.673Z",
              "duration": 1068,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:31:49.742Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/inventory.html)",
              "startTime": "2021-10-28T01:31:49.748Z",
              "duration": 790,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:31:50.540Z",
              "duration": 15,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-name)",
              "startTime": "2021-10-28T01:31:50.556Z",
              "duration": 13,
              "snippet": "  123 |         const randomItemLocator = this.components.item(picker)\n  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n      |                                                                                   ^\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 124,
                "column": 83
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-description)",
              "startTime": "2021-10-28T01:31:50.570Z",
              "duration": 8,
              "snippet": "  124 |         const name = await randomItemLocator.locator(this.selectors.itemNameText).innerText()\n  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n      |                                                                                                 ^\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 125,
                "column": 97
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=4 >> data-test=item-price)",
              "startTime": "2021-10-28T01:31:50.578Z",
              "duration": 7,
              "snippet": "  125 |         const description = await randomItemLocator.locator(this.selectors.itemDescriptionText).innerText()\n  126 |         var price = await randomItemLocator.locator(this.selectors.itemPriceText).innerText()\n      |                                                                                   ^\n  127 |         price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 126,
                "column": 83
              }
            },
            {
              "title": "locator.click(data-test=inventory-item >> nth=4 >> [data-test^='button-add-to-cart'])",
              "startTime": "2021-10-28T01:31:50.585Z",
              "duration": 85,
              "snippet": "  129 |         const addButton = randomItemLocator.locator(this.selectors.addToCartButton)\n  130 |         await addButton.click()\n      |                         ^\n  131 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 130,
                "column": 25
              }
            },
            {
              "title": "locator.click(data-test=link-cart)",
              "startTime": "2021-10-28T01:31:50.671Z",
              "duration": 240,
              "snippet": "  75 |         const cartButtonLocator = this.components.cartLink()\n  76 |         await cartButtonLocator.click()\n     |                                 ^\n  77 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 76,
                "column": 33
              }
            },
            {
              "title": "locator.count(data-test=inventory-item)",
              "startTime": "2021-10-28T01:31:50.912Z",
              "duration": 3,
              "snippet": "   45 |         const itemsLocator = this.components.items()\n   46 |         return await itemsLocator.count()\n      |                                   ^\n   47 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 46,
                "column": 35
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-name)",
              "startTime": "2021-10-28T01:31:50.916Z",
              "duration": 19,
              "snippet": "   94 |             const item = this.components.item(picker)\n   95 |             const name = await item.locator(nameSelector).innerText()\n      |                                                           ^\n   96 |             const description = await item.locator(descSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 95,
                "column": 59
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-description)",
              "startTime": "2021-10-28T01:31:50.936Z",
              "duration": 12,
              "snippet": "   95 |             const name = await item.locator(nameSelector).innerText()\n   96 |             const description = await item.locator(descSelector).innerText()\n      |                                                                  ^\n   97 |             let price = await item.locator(priceSelector).innerText()",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 96,
                "column": 66
              }
            },
            {
              "title": "locator.innerText(data-test=inventory-item >> nth=0 >> data-test=item-price)",
              "startTime": "2021-10-28T01:31:50.948Z",
              "duration": 7,
              "snippet": "   96 |             const description = await item.locator(descSelector).innerText()\n   97 |             let price = await item.locator(priceSelector).innerText()\n      |                                                           ^\n   98 |             price = price.replace(\"$\", \"\")",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 97,
                "column": 59
              }
            },
            {
              "title": "expect.toStrictEqual",
              "startTime": "2021-10-28T01:31:50.956Z",
              "duration": 1,
              "snippet": "   54 |         const itemsInCart = await inventoryItemController.getItemsObject()\n   55 |         expect(itemsInCart[0]).toStrictEqual(addedItem)\n      |                                ^\n   56 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 55,
                "column": 32
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:31:50.957Z",
              "duration": 253,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:31:51.202Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-6443a4bb8db97e9bdb817321f84d4130c1c2ea14",
      "title": "should be possible to remove product from cart",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 58,
        "column": 5
      },
      "duration": 2138,
      "outcome": "expected",
      "path": [
        "cart.spec.js:58",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2138,
          "startTime": "2021-10-28T01:31:50.643Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:31:50.643Z",
              "duration": 63,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:31:50.654Z",
                  "duration": 52,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:31:50.706Z",
              "duration": 1054,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:31:51.760Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:31:51.765Z",
              "duration": 670,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:31:52.435Z",
              "duration": 21,
              "snippet": "   67 |         })\n   68 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"1\")\n      |                                                                                ^\n   69 |         await inventoryItemController.removeFromCart()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 68,
                "column": 80
              }
            },
            {
              "title": "locator.click([data-test^='button-remove'] >> nth=0)",
              "startTime": "2021-10-28T01:31:52.457Z",
              "duration": 43,
              "snippet": "  159 |         const removeFromLocator = this.components.removeItemsButton()\n  160 |         await removeFromLocator.first().click()\n      |                                         ^\n  161 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/inventoryItem/controller.js",
                "line": 160,
                "column": 41
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-28T01:31:52.500Z",
              "duration": 7,
              "snippet": "   69 |         await inventoryItemController.removeFromCart()\n   70 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n   71 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 70,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:31:52.507Z",
              "duration": 274,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:31:52.773Z",
                  "duration": 6,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-743a6c3f1d473448f36991de9b03c38fffb52613",
      "title": "should be possible to open sidemenu @slow @smoke",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 73,
        "column": 5
      },
      "duration": 2133,
      "outcome": "expected",
      "path": [
        "cart.spec.js:73",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2133,
          "startTime": "2021-10-28T01:31:51.211Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:31:51.211Z",
              "duration": 68,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:31:51.223Z",
                  "duration": 56,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:31:51.280Z",
              "duration": 943,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:31:52.223Z",
              "duration": 8,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:31:52.232Z",
              "duration": 652,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:31:52.884Z",
              "duration": 91,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toBeVisible",
              "startTime": "2021-10-28T01:31:52.976Z",
              "duration": 29,
              "snippet": "   78 |         await navigationBarController.openMenu()\n   79 |         await expect(await navigationBarController.components.sideMenu()).toBeVisible()\n      |                                                                           ^\n   80 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 79,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:31:53.005Z",
              "duration": 340,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:31:53.323Z",
                  "duration": 21,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-722c2cc67c063797371868cd5ec55dcaf80064b0",
      "title": "should be possible to close sidemenu clicking at the X button @slow",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 82,
        "column": 5
      },
      "duration": 3202,
      "outcome": "expected",
      "path": [
        "cart.spec.js:82",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3202,
          "startTime": "2021-10-28T01:31:52.783Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:31:52.783Z",
              "duration": 41,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:31:52.788Z",
                  "duration": 35,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:31:52.824Z",
              "duration": 1042,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:31:53.867Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:31:53.871Z",
              "duration": 646,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:31:54.518Z",
              "duration": 66,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-28T01:31:54.585Z",
              "duration": 8,
              "snippet": "   91 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 92,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:31:54.595Z",
              "duration": 540,
              "snippet": "   92 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n   93 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n   94 |         await navigationBarController.closeMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 93,
                "column": 30
              }
            },
            {
              "title": "locator.click(.bm-cross-button)",
              "startTime": "2021-10-28T01:31:55.135Z",
              "duration": 39,
              "snippet": "  43 |         const closeMenuLocator = this.components.menuCloseButton()\n  44 |         await closeMenuLocator.click()\n     |                                ^\n  45 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 44,
                "column": 32
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:31:55.174Z",
              "duration": 510,
              "snippet": "   94 |         await navigationBarController.closeMenu()\n   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n      |                              ^\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 95,
                "column": 30
              }
            },
            {
              "title": "expect.toBeHidden",
              "startTime": "2021-10-28T01:31:55.685Z",
              "duration": 13,
              "snippet": "   95 |         await sideMenuHandle.waitForElementState(\"hidden\")\n   96 |         await expect(await navigationBarController.components.sideMenu()).toBeHidden()\n      |                                                                           ^\n   97 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 96,
                "column": 75
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:31:55.698Z",
              "duration": 287,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:31:55.971Z",
                  "duration": 13,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-36ab71caae910f0aeb9a5e3bcb1b6e2a82cfed28",
      "title": "should remove cart items when clicking at the reset state link on menu",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 99,
        "column": 5
      },
      "duration": 2570,
      "outcome": "expected",
      "path": [
        "cart.spec.js:99",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2570,
          "startTime": "2021-10-28T01:31:53.346Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:31:53.346Z",
              "duration": 67,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:31:53.369Z",
                  "duration": 44,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:31:53.414Z",
              "duration": 941,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:31:54.356Z",
              "duration": 4,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:31:54.361Z",
              "duration": 654,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "expect.toHaveText",
              "startTime": "2021-10-28T01:31:55.016Z",
              "duration": 19,
              "snippet": "  107 |         })\n  108 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveText(\"2\")\n      |                                                                                ^\n  109 |         await navigationBarController.openMenu()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 108,
                "column": 80
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:31:55.035Z",
              "duration": 50,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.elementHandle(.bm-menu-wrap)",
              "startTime": "2021-10-28T01:31:55.086Z",
              "duration": 9,
              "snippet": "  110 |         const sideMenuLocator = await navigationBarController.components.sideMenu()\n  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n      |                                                      ^\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 111,
                "column": 54
              }
            },
            {
              "title": "elementHandle.waitForElementState",
              "startTime": "2021-10-28T01:31:55.096Z",
              "duration": 522,
              "snippet": "  111 |         const sideMenuHandle = await sideMenuLocator.elementHandle()\n  112 |         await sideMenuHandle.waitForElementState(\"stable\")\n      |                              ^\n  113 |         await navigationBarController.resetState()",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 112,
                "column": 30
              }
            },
            {
              "title": "locator.click(data-test=link-reset-state)",
              "startTime": "2021-10-28T01:31:55.618Z",
              "duration": 41,
              "snippet": "  67 |         const resetMenuLocator = this.components.menuResetStateLink()\n  68 |         await resetMenuLocator.click()\n     |                                ^\n  69 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 68,
                "column": 32
              }
            },
            {
              "title": "expect.toHaveCount",
              "startTime": "2021-10-28T01:31:55.660Z",
              "duration": 9,
              "snippet": "  113 |         await navigationBarController.resetState()\n  114 |         await expect(await navigationBarController.components.cartBadgeText()).toHaveCount(0)\n      |                                                                                ^\n  115 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 114,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:31:55.669Z",
              "duration": 247,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:31:55.894Z",
                  "duration": 22,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-562907d4260fc089be8b192a24613483dd375626",
      "title": "should back at Invetory page when clicking at the all items link on menu",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 117,
        "column": 5
      },
      "duration": 3345,
      "outcome": "expected",
      "path": [
        "cart.spec.js:117",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 3345,
          "startTime": "2021-10-28T01:31:55.917Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:31:55.917Z",
              "duration": 54,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:31:55.925Z",
                  "duration": 46,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:31:55.973Z",
              "duration": 1120,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:31:57.093Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:31:57.099Z",
              "duration": 686,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:31:57.786Z",
              "duration": 64,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-all-items)",
              "startTime": "2021-10-28T01:31:57.851Z",
              "duration": 648,
              "snippet": "  51 |         const allItemMenuLocator = this.components.menuAllItemsLink()\n  52 |         await allItemMenuLocator.click()\n     |                                  ^\n  53 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 52,
                "column": 34
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:31:58.499Z",
              "duration": 51,
              "snippet": "  127 |         await navigationBarController.allItems()\n  128 |         await expect(page).toHaveURL(`${baseURL}${PAGES.INVENTORY}`)\n      |                            ^\n  129 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 128,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:31:58.551Z",
              "duration": 712,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:31:59.254Z",
                  "duration": 8,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-1f2ed6d4ada46d61b83503da5b156ea89061a882",
      "title": "should navigate to SauceLabs page when clicking at the about link on menu @slow",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 131,
        "column": 5
      },
      "duration": 2237,
      "outcome": "expected",
      "path": [
        "cart.spec.js:131",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2237,
          "startTime": "2021-10-28T01:31:55.989Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:31:55.990Z",
              "duration": 86,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:31:55.998Z",
                  "duration": 78,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:31:56.076Z",
              "duration": 1117,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:31:57.194Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:31:57.200Z",
              "duration": 670,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:31:57.871Z",
              "duration": 65,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "expect.toHaveAttribute",
              "startTime": "2021-10-28T01:31:57.937Z",
              "duration": 8,
              "snippet": "  139 |         await navigationBarController.openMenu()\n  140 |         await expect(await navigationBarController.components.menuAboutLink()).toHaveAttribute(\"href\", PAGES.ABOUT)\n      |                                                                                ^\n  141 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 140,
                "column": 80
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:31:57.945Z",
              "duration": 281,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:31:58.218Z",
                  "duration": 7,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    },
    {
      "testId": "0a3b59dc31b88547e26bc895ca01813ec24d4e86-6c71d9d727fcd39dd431c66f4860282fee74cb3f",
      "title": "should be at Login page when clicking at the logout link on menu",
      "projectName": "pixel-4",
      "location": {
        "file": "cart.spec.js",
        "line": 143,
        "column": 5
      },
      "duration": 2816,
      "outcome": "expected",
      "path": [
        "cart.spec.js:143",
        "Saucedemo CartPage: @cart"
      ],
      "results": [
        {
          "duration": 2816,
          "startTime": "2021-10-28T01:31:58.227Z",
          "retry": 0,
          "steps": [
            {
              "title": "Before Hooks",
              "startTime": "2021-10-28T01:31:58.227Z",
              "duration": 51,
              "steps": [
                {
                  "title": "browserContext.newPage",
                  "startTime": "2021-10-28T01:31:58.236Z",
                  "duration": 41,
                  "steps": []
                }
              ]
            },
            {
              "title": "page.goto(/)",
              "startTime": "2021-10-28T01:31:58.278Z",
              "duration": 1121,
              "snippet": "  27 |\n  28 |     await page.goto(\"/\", { waitUntil: \"networkidle\" })\n     |                ^\n  29 |",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 28,
                "column": 16
              }
            },
            {
              "title": "page.evaluate",
              "startTime": "2021-10-28T01:31:59.400Z",
              "duration": 5,
              "snippet": "  29 |\n  30 |     await page.evaluate(\n     |                ^\n  31 |         ([username, productsContent]) => {",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 30,
                "column": 16
              }
            },
            {
              "title": "page.goto(/cart.html)",
              "startTime": "2021-10-28T01:31:59.406Z",
              "duration": 765,
              "snippet": "  40 |     )\n  41 |     await page.goto(`${path}`, { waitUntil: \"networkidle\" })\n     |                ^\n  42 | }",
              "steps": [],
              "location": {
                "file": "../saucedemo/utils/utils.js",
                "line": 41,
                "column": 16
              }
            },
            {
              "title": "locator.click(#react-burger-menu-btn)",
              "startTime": "2021-10-28T01:32:00.171Z",
              "duration": 63,
              "snippet": "  35 |         const menuLocator = this.components.menuButton()\n  36 |         await menuLocator.click()\n     |                           ^\n  37 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 36,
                "column": 27
              }
            },
            {
              "title": "locator.click(data-test=link-logout)",
              "startTime": "2021-10-28T01:32:00.234Z",
              "duration": 539,
              "snippet": "  59 |         const logoutMenuLocator = this.components.menuLogoutLink()\n  60 |         await logoutMenuLocator.click()\n     |                                 ^\n  61 |     }",
              "steps": [],
              "location": {
                "file": "../saucedemo/pages/navigationBar/controller.js",
                "line": 60,
                "column": 33
              }
            },
            {
              "title": "expect.toHaveURL",
              "startTime": "2021-10-28T01:32:00.774Z",
              "duration": 8,
              "snippet": "  153 |         await navigationBarController.logout()\n  154 |         await expect(page).toHaveURL(`${baseURL}/`)\n      |                            ^\n  155 |     })",
              "steps": [],
              "location": {
                "file": "cart.spec.js",
                "line": 154,
                "column": 28
              }
            },
            {
              "title": "After Hooks",
              "startTime": "2021-10-28T01:32:00.782Z",
              "duration": 261,
              "steps": [
                {
                  "title": "browserContext.close",
                  "startTime": "2021-10-28T01:32:01.031Z",
                  "duration": 12,
                  "steps": []
                }
              ]
            }
          ],
          "error": "",
          "status": "passed",
          "attachments": []
        }
      ],
      "ok": true
    }
  ]
}